{"mappings":"C,A,W,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,S,E,C,E,O,G,E,U,C,E,O,C,C,C,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,Q,S,C,C,C,E,E,E,O,C,W,W,O,C,E,S,C,E,O,E,C,G,E,E,O,C,U,W,O,C,E,S,C,E,O,E,C,GCEA,IAcA,EACA,EAfI,EAAU,CAAC,EAcf,EAbA,SAAkB,CAAK,EAErB,IAAK,IADD,EAAO,OAAO,IAAA,CAAK,GACd,EAAI,EAAG,EAAI,EAAK,MAAA,CAAQ,IAC/B,CAAO,CAAC,CAAI,CAAC,EAAE,CAAC,CAAG,CAAK,CAAC,CAAI,CAAC,EAAE,CAAC,AAErC,EASA,EARA,SAAiB,CAAE,EACjB,IAAI,EAAW,CAAO,CAAC,EAAG,CAC1B,GAAI,AAAY,MAAZ,EACF,MAAM,AAAI,MAAM,oCAAsC,GAExD,OAAO,CACT,C,G,E,Q,C,Q,S,C,C,C,E,E,E,O,C,e,W,O,C,E,S,C,E,O,E,C,GCbA,IAkCA,EAlCI,EAAY,CAAC,EAkCjB,EAjCA,SAA4B,CAAE,EAC5B,IAAI,EAAQ,CAAS,CAAC,EAAG,CAKzB,OAJK,IACH,EAAQ,AAKZ,WACE,GAAI,CACF,MAAM,AAAI,OACZ,CAAE,MAAO,EAAK,CACZ,IAAI,EAAU,AAAC,CAAA,GAAK,EAAI,KAAI,AAAJ,EAAO,KAAA,CAAM,oEACrC,GAAI,EAEF,mEAAmE;AACnE,MAMI,AAAA,CAAA,GANc,CAAO,CAAC,EAAE,AAMnB,EAAK,OAAA,CAAQ,0EAA2E,MAAQ,GAJ7G,CACA,MAAO,GACT,IAhBI,CAAS,CAAC,EAAG,CAAG,GAEX,CACT,C,GCVA,AAAA,EAAA,SAAA,QAAA,CAA8C,KA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","sources":["<anon>","../../../../usr/local/lib/node_modules/parcel/node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","../../../../usr/local/lib/node_modules/parcel/node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","../../../../usr/local/lib/node_modules/parcel/node_modules/@parcel/runtime-js/lib/runtime-e0001faf283a6107.js","src/js/ecommerce/index.js","src/js/ecommerce/controller.js","src/js/ecommerce/view-products.js","../../../../usr/local/lib/node_modules/parcel/node_modules/@parcel/runtime-js/lib/runtime-cd8961886a1f782a.js","../../../../usr/local/lib/node_modules/parcel/node_modules/@parcel/runtime-js/lib/runtime-5dd4ea8adf1d6b9e.js","src/js/ecommerce/view-cart.js","../../../../usr/local/lib/node_modules/parcel/node_modules/@parcel/runtime-js/lib/runtime-f6034260c56fc662.js","src/js/ecommerce/view-orders.js","src/js/ecommerce/view-admin.js","src/js/ecommerce/view-superadmin.js","src/js/ecommerce/model-products.js","src/js/ecommerce/model-cart.js","src/js/ecommerce/model-orders.js","src/js/ecommerce/model-user.js"],"sourcesContent":["(function () {\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire5d32\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire5d32\"] = parcelRequire;\n}\nparcelRequire.register(\"4G3qk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", function () { return $367dbd879e1b0a40$export$6503ec6e8aabbaf; }, function (v) { return $367dbd879e1b0a40$export$6503ec6e8aabbaf = v; });\n$parcel$export(module.exports, \"resolve\", function () { return $367dbd879e1b0a40$export$f7ad0328861e2f03; }, function (v) { return $367dbd879e1b0a40$export$f7ad0328861e2f03 = v; });\nvar $367dbd879e1b0a40$export$6503ec6e8aabbaf;\nvar $367dbd879e1b0a40$export$f7ad0328861e2f03;\n\"use strict\";\nvar $367dbd879e1b0a40$var$mapping = {};\nfunction $367dbd879e1b0a40$var$register(pairs) {\n    var keys = Object.keys(pairs);\n    for(var i = 0; i < keys.length; i++)$367dbd879e1b0a40$var$mapping[keys[i]] = pairs[keys[i]];\n}\nfunction $367dbd879e1b0a40$var$resolve(id) {\n    var resolved = $367dbd879e1b0a40$var$mapping[id];\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return resolved;\n}\n$367dbd879e1b0a40$export$6503ec6e8aabbaf = $367dbd879e1b0a40$var$register;\n$367dbd879e1b0a40$export$f7ad0328861e2f03 = $367dbd879e1b0a40$var$resolve;\n\n});\n\nparcelRequire.register(\"260Jh\", function(module, exports) {\n\n$parcel$export(module.exports, \"getBundleURL\", function () { return $186cb5275e501ab9$export$bdfd709ae4826697; }, function (v) { return $186cb5275e501ab9$export$bdfd709ae4826697 = v; });\nvar $186cb5275e501ab9$export$bdfd709ae4826697;\nvar $186cb5275e501ab9$export$c9e73fbda7da57b6;\nvar $186cb5275e501ab9$export$5a759dc7a1cfb72a;\n\"use strict\";\nvar $186cb5275e501ab9$var$bundleURL = {};\nfunction $186cb5275e501ab9$var$getBundleURLCached(id) {\n    var value = $186cb5275e501ab9$var$bundleURL[id];\n    if (!value) {\n        value = $186cb5275e501ab9$var$getBundleURL();\n        $186cb5275e501ab9$var$bundleURL[id] = value;\n    }\n    return value;\n}\nfunction $186cb5275e501ab9$var$getBundleURL() {\n    try {\n        throw new Error();\n    } catch (err) {\n        var matches = (\"\" + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n        if (matches) // The first two stack frames will be this function and getBundleURLCached.\n        // Use the 3rd one, which will be a runtime in the original bundle.\n        return $186cb5275e501ab9$var$getBaseURL(matches[2]);\n    }\n    return \"/\";\n}\nfunction $186cb5275e501ab9$var$getBaseURL(url) {\n    return (\"\" + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, \"$1\") + \"/\";\n}\n// TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\nfunction $186cb5275e501ab9$var$getOrigin(url) {\n    var matches = (\"\" + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n    if (!matches) throw new Error(\"Origin not found\");\n    return matches[0];\n}\n$186cb5275e501ab9$export$bdfd709ae4826697 = $186cb5275e501ab9$var$getBundleURLCached;\n$186cb5275e501ab9$export$c9e73fbda7da57b6 = $186cb5275e501ab9$var$getBaseURL;\n$186cb5275e501ab9$export$5a759dc7a1cfb72a = $186cb5275e501ab9$var$getOrigin;\n\n});\n\nvar $acf26bcfdf756c4d$exports = {};\n\n(parcelRequire(\"4G3qk\")).register(JSON.parse('{\"ceDhw\":\"index.9d1ed911.js\",\"4M8Gf\":\"icon-add-order.d5dcde0a.png\",\"kSZwU\":\"icon-cart.dd455062.png\",\"8HtV0\":\"icon-order.5ea58f4f.png\",\"kVJvh\":\"admin.20c8b860.js\"}'));\n\nvar $2f117f96b8a143cf$exports = {};\n\n\n$2f117f96b8a143cf$exports = (parcelRequire(\"260Jh\")).getBundleURL(\"ceDhw\") + (parcelRequire(\"4G3qk\")).resolve(\"4M8Gf\");\n\n\nvar $d6617dc3d6bbff8e$exports = {};\n\n\n$d6617dc3d6bbff8e$exports = (parcelRequire(\"260Jh\")).getBundleURL(\"ceDhw\") + (parcelRequire(\"4G3qk\")).resolve(\"kSZwU\");\n\n\nclass $4f92014deb951a68$export$389214387cd37f49 {\n    constructor(controller){\n        this.controller = controller;\n    }\n    // FOR TEST AND TBS - REMOVE FOR PROD\n    checkModuleLinkage = ()=>{\n        console.log(\"HELLO, ViewProducts is connected!\");\n    };\n    createProductItemCard = (productObject)=>{\n        // Create elements\n        const productItemDiv = document.createElement(\"div\");\n        productItemDiv.classList = \"product-item\";\n        productItemDiv.id = `product-card_${productObject.itemId}`;\n        const image = document.createElement(\"img\");\n        image.classList = \"product-item__img\";\n        image.src = this.controller.getUrlByNameLocal(productObject.itemImg);\n        const contentDiv = document.createElement(\"div\");\n        contentDiv.classList = \"product-item__content\";\n        const contentName = document.createElement(\"h3\");\n        contentName.classList = \"product-item__content_desc\";\n        contentName.textContent = productObject.itemName;\n        const partNumber = document.createElement(\"p\");\n        partNumber.classList = \"product-item__content_part-number\";\n        partNumber.textContent = productObject.itemPN;\n        const priceBlockDiv = document.createElement(\"div\");\n        priceBlockDiv.classList = \"product-item__content_price-block\";\n        const priceElement = document.createElement(\"h3\");\n        priceElement.classList = \"product-item__content_price\";\n        priceElement.textContent = `$${productObject.itemPrice}`;\n        const priceBtn = document.createElement(\"button\");\n        priceBtn.classList = \"product-item__content_price-btn\";\n        priceBtn.id = `product-btn_${productObject.itemId}`;\n        const priceBtnImg = document.createElement(\"img\");\n        priceBtnImg.classList = \"product-item__content_price-btn-img\";\n        priceBtnImg.src = (0, (/*@__PURE__*/$parcel$interopDefault($d6617dc3d6bbff8e$exports)));\n        priceBtnImg.alt = \"Select\";\n        // Append elemens to respective parents\n        priceBtn.appendChild(priceBtnImg);\n        priceBlockDiv.appendChild(priceElement);\n        priceBlockDiv.appendChild(priceBtn);\n        contentDiv.appendChild(contentName);\n        contentDiv.appendChild(partNumber);\n        contentDiv.appendChild(priceBlockDiv);\n        productItemDiv.appendChild(image);\n        productItemDiv.appendChild(contentDiv);\n        return productItemDiv;\n    };\n    // Left Container - Render product items\n    createProductItemsList = (arrayProducts)=>{\n        // Clear container\n        // this.controller.clearContainerLeft();\n        // Create product list container\n        const productList = document.createElement(\"div\");\n        productList.classList = \"product-list\";\n        // Look through array to create item cards and add to products list\n        for (const productObject of arrayProducts){\n            const newProductItemCard = this.createProductItemCard(productObject);\n            productList.appendChild(newProductItemCard);\n        }\n        // Render product list container\n        // this.controller.containerLeftNode.appendChild(productList);\n        console.log(\"productList: \", productList);\n        return productList;\n    };\n    createDetailedProductCard = (productObject)=>{\n        console.log(\"productObject: \", productObject);\n        // Create elements\n        const productCardMain = document.createElement(\"div\");\n        productCardMain.classList = \"product-card\";\n        productCardMain.id = `prodCard_${productObject.itemId}`;\n        const goBackBtn = document.createElement(\"button\");\n        goBackBtn.classList = \"goto-products-btn\";\n        goBackBtn.innerText = \"< Back to Products\";\n        const cardTopWrapper = document.createElement(\"div\");\n        cardTopWrapper.classList = \"product-card__top-wrapper\";\n        const cardImageWrapper = document.createElement(\"div\");\n        cardImageWrapper.classList = \"product-card__img-wrapper\";\n        const image = document.createElement(\"img\");\n        image.classList = \"product-card__img\";\n        image.src = this.controller.getUrlByNameLocal(productObject.itemImg);\n        const cardSummaryWrapper = document.createElement(\"div\");\n        cardSummaryWrapper.classList = \"product-card__summary-wrapper\";\n        const cardSummary = document.createElement(\"div\");\n        cardSummary.classList = \"product-card__summary\";\n        const productName = document.createElement(\"h1\");\n        productName.classList = \"product-card__product-name\";\n        productName.textContent = productObject.itemName;\n        const partNumberSupport = document.createElement(\"p\");\n        partNumberSupport.classList = \"product-card__support-txt\";\n        partNumberSupport.textContent = \"Part Number: \";\n        const partNumber = document.createElement(\"h3\");\n        partNumber.classList = \"product-card__part-number\";\n        partNumber.textContent = productObject.itemPN;\n        const priceElementSupport = document.createElement(\"p\");\n        priceElementSupport.classList = \"product-card__support-txt\";\n        priceElementSupport.textContent = \"Price Per Unit: \";\n        const priceElement = document.createElement(\"h3\");\n        priceElement.classList = \"product-card__product-price\";\n        priceElement.textContent = `${productObject.itemCurrency} ${productObject.itemPrice}`;\n        const partConditionSupport = document.createElement(\"p\");\n        partConditionSupport.classList = \"product-card__support-txt\";\n        partConditionSupport.textContent = \"Condition: \";\n        const partCondition = document.createElement(\"h3\");\n        partCondition.classList = \"product-card__condition\";\n        partCondition.textContent = productObject.itemCondition;\n        const partCertificationSupport = document.createElement(\"p\");\n        partCertificationSupport.classList = \"product-card__support-txt\";\n        partCertificationSupport.textContent = \"Certification: \";\n        const partCertification = document.createElement(\"h3\");\n        partCertification.classList = \"product-card__certification\";\n        partCertification.textContent = productObject.itemCertification;\n        const partAvailabilitySupport = document.createElement(\"p\");\n        partAvailabilitySupport.classList = \"product-card__support-txt\";\n        partAvailabilitySupport.textContent = \"Availability: \";\n        const partAvailability = document.createElement(\"h3\");\n        partAvailability.classList = \"product-card__availability\";\n        partAvailability.textContent = productObject.itemLeadTime;\n        const addToCartBtn = document.createElement(\"button\");\n        addToCartBtn.classList = \"product-card__add-to-cart-btn\";\n        addToCartBtn.id = `add-to-cart-btn_${productObject.itemId}`;\n        const addToCartBtnImg = document.createElement(\"img\");\n        addToCartBtnImg.src = (0, (/*@__PURE__*/$parcel$interopDefault($2f117f96b8a143cf$exports)));\n        addToCartBtnImg.alt = \"Select\";\n        const textSpan = document.createElement(\"span\");\n        textSpan.innerText = \" Add to Cart\";\n        const cardBottomWrapper = document.createElement(\"div\");\n        cardBottomWrapper.classList = \"product-card__bottom-wrapper\";\n        const cardDescription = document.createElement(\"h3\");\n        cardDescription.classList = \"product-card__description\";\n        cardDescription.textContent = \"Product Description\";\n        const cardDescriptionText = document.createElement(\"p\");\n        cardDescriptionText.classList = \"product-card__description-text\";\n        cardDescriptionText.textContent = productObject.itemDescription;\n        // TO-DO STARTED\n        cardImageWrapper.appendChild(image);\n        cardSummary.appendChild(productName);\n        cardSummary.appendChild(partNumberSupport);\n        cardSummary.appendChild(partNumber);\n        cardSummary.appendChild(priceElementSupport);\n        cardSummary.appendChild(priceElement);\n        cardSummary.appendChild(partConditionSupport);\n        cardSummary.appendChild(partCondition);\n        cardSummary.appendChild(partCertificationSupport);\n        cardSummary.appendChild(partCertification);\n        cardSummary.appendChild(partAvailabilitySupport);\n        cardSummary.appendChild(partAvailability);\n        addToCartBtn.appendChild(addToCartBtnImg);\n        addToCartBtn.appendChild(textSpan);\n        cardSummaryWrapper.appendChild(cardSummary);\n        cardSummaryWrapper.appendChild(addToCartBtn);\n        cardTopWrapper.appendChild(cardImageWrapper);\n        cardTopWrapper.appendChild(cardSummaryWrapper);\n        cardBottomWrapper.appendChild(cardDescription);\n        cardBottomWrapper.appendChild(cardDescriptionText);\n        productCardMain.appendChild(goBackBtn);\n        productCardMain.appendChild(cardTopWrapper);\n        productCardMain.appendChild(cardBottomWrapper);\n        // TEST-TBS REMOVE FOR PROD\n        // console.log(\"productCardMain: \", productCardMain);\n        return productCardMain;\n    };\n}\n\n\n// import iconAddOrder from \"../../other_assets/icon-add-order.png\";\n// import iconCart from \"../../other_assets/icon-cart.png\";\n// import iconCc from \"../../other_assets/icon-cc.png\";\nvar $d3c8c10eba5fc3aa$exports = {};\n\n\n$d3c8c10eba5fc3aa$exports = (parcelRequire(\"260Jh\")).getBundleURL(\"ceDhw\") + (parcelRequire(\"4G3qk\")).resolve(\"8HtV0\");\n\n\nclass $1476b43a64e24fc7$export$1a33929de52b7c41 {\n    constructor(controller){\n        this.controller = controller;\n    }\n    checkModuleLinkage = ()=>{\n        console.log(\"HELLO, ViewCart is connected!\");\n    };\n    // Right Container - Create Cart Title\n    createCartSummaryTitle = ()=>{\n        const title = document.createElement(\"h2\");\n        title.classList = \"cart-links-title\";\n        title.innerText = \"Cart\";\n        return title;\n    };\n    // Right Container - Create Cart Item Button\n    createCartItemButton = (imageURL, productId)=>{\n        const button = document.createElement(\"button\");\n        button.classList = \"cart-link-btn\";\n        button.id = `cart-link-btn_${productId}`;\n        button.style = `background-image: url(${imageURL});`;\n        return button;\n    };\n    // Right Container - Create Cart Products Icons Block\n    createCartProductItemsBlock = (sessionIdCart)=>{\n        const wrapper = document.createElement(\"div\");\n        wrapper.classList = \"cart-links-wrapper\";\n        if (sessionIdCart.length === 0) {\n            const emptyCartMessage = document.createElement(\"p\");\n            emptyCartMessage.classList = \"cart-links-empty-msg\";\n            emptyCartMessage.innerText = \"Cart is empty\";\n            wrapper.appendChild(emptyCartMessage);\n        } else // Right Container - Render Cart Icons\n        // console.log(\"Action: Right Container - Render Cart Icons\");\n        for (const productObject of sessionIdCart){\n            // TEST-TBS - REMOVE IN PROD\n            // console.log(\"productObject: \", productObject);\n            // console.log(\"productObject.itemId: \", productObject.itemId);\n            const productImage = this.controller.getImageByProductId(productObject.itemId);\n            // FOR TEST-TBS\n            // console.log(\"productImage: \", productImage);\n            const imageURL = this.controller.getUrlByNameLocal(productImage);\n            // FOR TEST-TBS\n            // console.log(\"imageURL: \", imageURL);\n            const cartItem = this.createCartItemButton(imageURL, productObject.itemId);\n            wrapper.appendChild(cartItem);\n        }\n        return wrapper;\n    };\n    // Right Container - Create Go-To-Cart Button\n    createGoToCartButton = ()=>{\n        const wrapper = document.createElement(\"div\");\n        wrapper.classList = \"cart-goto-btn-wrapper\";\n        const button = document.createElement(\"button\");\n        button.classList = \"cart-goto-btn\";\n        const image = document.createElement(\"img\");\n        image.src = (0, (/*@__PURE__*/$parcel$interopDefault($d3c8c10eba5fc3aa$exports)));\n        image.alt = \"Select\";\n        const textSpan = document.createElement(\"span\");\n        textSpan.innerText = \" Cart\";\n        // Append elemens to respective parents\n        button.appendChild(image);\n        button.appendChild(textSpan);\n        wrapper.appendChild(button);\n        return wrapper;\n    };\n    // Right Container - Create \"Proceed To Checkout\" button\n    createProceedToCheckoutBtn = ()=>{\n        const wrapper = document.createElement(\"div\");\n        wrapper.classList = \"cart-checkout-btn-wrapper\";\n        const button = document.createElement(\"button\");\n        button.classList = \"cart-checkout-btn\";\n        const image = document.createElement(\"img\");\n        image.src = (0, (/*@__PURE__*/$parcel$interopDefault($d3c8c10eba5fc3aa$exports)));\n        image.alt = \"Checkout\";\n        const textSpan = document.createElement(\"span\");\n        textSpan.innerText = \" Checkout\";\n        // Append elemens to respective parents\n        button.appendChild(image);\n        button.appendChild(textSpan);\n        wrapper.appendChild(button);\n        return wrapper;\n    };\n    // Right Container - create total amount block\n    createTotalAmountBlock = (sessionIdCartPrice)=>{\n        const wrapper = document.createElement(\"div\");\n        wrapper.classList = \"cart-total-amount-wrapper\";\n        const totalAmount = document.createElement(\"p\");\n        totalAmount.classList = \"cart-total-amount\";\n        totalAmount.id = \"cart-total-amount\";\n        totalAmount.innerText = `Total: $${sessionIdCartPrice.total}`;\n        wrapper.appendChild(totalAmount);\n        return wrapper;\n    };\n    // Right Container - Render Cart Summaary\n    createNewCartSummaryNoTotal = (sessionIdCart)=>{\n        // Create \"Cart\" title\n        const cartSummaryBlock = this.createCartSummaryTitle();\n        // Create product item \"buttons\" block\n        const cartProductItemsBlock = this.createCartProductItemsBlock(sessionIdCart);\n        cartSummaryBlock.appendChild(cartProductItemsBlock);\n        // Create \"Go To Cart\" button\n        const button = this.createGoToCartButton();\n        cartSummaryBlock.appendChild(button);\n        // TEST-TBS - REMOVE FO PROD\n        // console.log(\"cartSummaryBlock: \", cartSummaryBlock);\n        return cartSummaryBlock;\n    };\n    // Right Container - Render Cart Summaary\n    createNewCartSummaryWithPrice = (sessionIdCart, sessionIdCartPrice)=>{\n        // Create \"Cart\" title\n        const cartSummaryBlock = this.createCartSummaryTitle();\n        // Create product item \"buttons\" block\n        const cartProductItemsBlock = this.createCartProductItemsBlock(sessionIdCart);\n        // Create total amount block\n        const cartTotalAmount = this.createTotalAmountBlock(sessionIdCartPrice);\n        // Create \"Proceed to Checkout\" button\n        const button = this.createProceedToCheckoutBtn();\n        cartSummaryBlock.appendChild(cartProductItemsBlock);\n        cartSummaryBlock.appendChild(cartTotalAmount);\n        cartSummaryBlock.appendChild(button);\n        // TEST-TBS - REMOVE FOR PROD\n        // console.log(\"cartSummaryBlock: \", cartSummaryBlock);\n        return cartSummaryBlock;\n    };\n    // Left Container - Create Product Item Card block\n    // Third argument (\"customClassList\") is a classList to pass to 'div' element\n    // Fourth argument (\"updateBlock\") is to create an \"update qty\" feature\n    createProductCardForCart = (productObject, qtyInCart, customClassList, updateBlock)=>{\n        // Create elements\n        const productCardMain = document.createElement(\"div\");\n        productCardMain.classList = customClassList;\n        // TO-DO : verify if \"itemId\" is better to use instead of \"docId\" here:\n        productCardMain.id = `cart-item_${productObject.itemId}`;\n        const cardImageWrapper = document.createElement(\"div\");\n        cardImageWrapper.classList = \"cart-item__img-wrapper\";\n        const image = document.createElement(\"img\");\n        image.classList = \"cart-item__img\";\n        image.src = this.controller.getUrlByNameLocal(productObject.itemImg);\n        const cardSummaryWrapper = document.createElement(\"div\");\n        cardSummaryWrapper.classList = \"cart-item__summary-wrapper\";\n        const cardSummary = document.createElement(\"div\");\n        cardSummary.classList = \"cart-item__summary\";\n        const cardNameWrapper = document.createElement(\"div\");\n        cardNameWrapper.classList = \"cart-item__element-wrapper\";\n        const productName = document.createElement(\"h1\");\n        productName.classList = \"cart-item__product-name\";\n        productName.textContent = productObject.itemName;\n        const partNumberWrapper = document.createElement(\"div\");\n        partNumberWrapper.classList = \"cart-item__element-wrapper\";\n        const partNumberSupport = document.createElement(\"p\");\n        partNumberSupport.classList = \"cart-item__support-txt\";\n        partNumberSupport.textContent = \"Part Number: \";\n        const partNumber = document.createElement(\"h3\");\n        partNumber.classList = \"cart-item__part-number\";\n        partNumber.textContent = productObject.itemPN;\n        const partConditionWrapper = document.createElement(\"div\");\n        partConditionWrapper.classList = \"cart-item__element-wrapper\";\n        const partConditionSupport = document.createElement(\"p\");\n        partConditionSupport.classList = \"cart-item__support-txt\";\n        partConditionSupport.textContent = \"Condition: \";\n        const partCondition = document.createElement(\"h3\");\n        partCondition.classList = \"cart-item__condition\";\n        partCondition.textContent = productObject.itemCondition;\n        const partCertificationWrapper = document.createElement(\"div\");\n        partCertificationWrapper.classList = \"cart-item__element-wrapper\";\n        const partCertificationSupport = document.createElement(\"p\");\n        partCertificationSupport.classList = \"cart-item__support-txt\";\n        partCertificationSupport.textContent = \"Certification: \";\n        const partCertification = document.createElement(\"h3\");\n        partCertification.classList = \"cart-item__certification\";\n        partCertification.textContent = productObject.itemCertification;\n        const partAvailabilityWrapper = document.createElement(\"div\");\n        partAvailabilityWrapper.classList = \"cart-item__element-wrapper\";\n        const partAvailabilitySupport = document.createElement(\"p\");\n        partAvailabilitySupport.classList = \"cart-item__support-txt\";\n        partAvailabilitySupport.textContent = \"Availability: \";\n        const partAvailability = document.createElement(\"h3\");\n        partAvailability.classList = \"cart-item__availability\";\n        partAvailability.textContent = productObject.itemLeadTime;\n        const priceElementWrapper = document.createElement(\"div\");\n        priceElementWrapper.classList = \"cart-item__price-qty\";\n        const priceElement = document.createElement(\"h3\");\n        priceElement.classList = \"cart-item__product-price\";\n        priceElement.setAttribute(\"data-price-qty-id\", productObject.itemId);\n        priceElement.innerText = `${productObject.itemCurrency} ${productObject.itemPrice} x ${qtyInCart}`;\n        const qtyModifierWrapper = document.createElement(\"div\");\n        qtyModifierWrapper.classList = \"cart-element__qty-mod_wrapper\";\n        qtyModifierWrapper.id = `qty-mod_${productObject.itemId}`;\n        const qtyModifierDeductBtn = document.createElement(\"button\");\n        qtyModifierDeductBtn.classList = \"cart-element__qty-mod_deduct-btn\";\n        qtyModifierDeductBtn.innerText = \" - \";\n        qtyModifierDeductBtn.id = `qty-deduct-btn_${productObject.itemId}`;\n        const qtyModifierIndicator = document.createElement(\"p\");\n        qtyModifierIndicator.classList = \"cart-element__qty-mod_qty\";\n        qtyModifierIndicator.id = `qty-indicator_${productObject.itemId}`;\n        qtyModifierIndicator.innerText = qtyInCart;\n        const qtyModifierAddBtn = document.createElement(\"button\");\n        qtyModifierAddBtn.classList = \"cart-element__qty-mod_add-btn\";\n        qtyModifierAddBtn.innerText = \" + \";\n        qtyModifierAddBtn.id = `qty-add-btn_${productObject.itemId}`;\n        // Assembly HTML code:\n        cardImageWrapper.appendChild(image);\n        cardNameWrapper.appendChild(productName);\n        cardSummary.appendChild(cardNameWrapper);\n        partNumberWrapper.appendChild(partNumberSupport);\n        partNumberWrapper.appendChild(partNumber);\n        cardSummary.appendChild(partNumberWrapper);\n        partConditionWrapper.appendChild(partConditionSupport);\n        partConditionWrapper.appendChild(partCondition);\n        cardSummary.appendChild(partConditionWrapper);\n        partCertificationWrapper.appendChild(partCertificationSupport);\n        partCertificationWrapper.appendChild(partCertification);\n        cardSummary.appendChild(partCertificationWrapper);\n        partAvailabilityWrapper.appendChild(partAvailabilitySupport);\n        partAvailabilityWrapper.appendChild(partAvailability);\n        cardSummary.appendChild(partAvailabilityWrapper);\n        if (updateBlock) {\n            qtyModifierWrapper.appendChild(qtyModifierDeductBtn);\n            qtyModifierWrapper.appendChild(qtyModifierIndicator);\n            qtyModifierWrapper.appendChild(qtyModifierAddBtn);\n        }\n        priceElementWrapper.appendChild(priceElement);\n        priceElementWrapper.appendChild(qtyModifierWrapper);\n        cardSummary.appendChild(priceElementWrapper);\n        cardSummaryWrapper.appendChild(cardSummary);\n        productCardMain.appendChild(cardImageWrapper);\n        productCardMain.appendChild(cardSummaryWrapper);\n        // console.log(\"productCardMain: \", productCardMain);\n        return productCardMain;\n    };\n    // Left Container - Create Cart Page\n    createCartPage = (sessionCart)=>{\n        const cartWrapper = document.createElement(\"div\");\n        cartWrapper.classList = \"cart-wrapper\";\n        const goBackBtn = document.createElement(\"button\");\n        goBackBtn.classList = \"goto-products-btn\";\n        goBackBtn.innerText = \"< Back to Products\";\n        const cartTitle = document.createElement(\"h2\");\n        cartTitle.classList = \"cart-title\";\n        cartTitle.innerText = \"Cart\";\n        const cartItemsWrapper = document.createElement(\"div\");\n        cartItemsWrapper.classList = \"cart-items-wrapper\";\n        for (const productItem of sessionCart){\n            // console.log(\n            //     \"productItem to pass to getProductObjectById() function: \",\n            //     productItem\n            // );\n            // console.log(\"productItem.itemID: \", productItem.itemId);\n            const productData = this.controller.getProductObjectById(productItem.itemId);\n            // console.log(\"productData: \", productData);\n            // Third argument (\"cart-item\") is a classList to pass to 'div' element\n            // Fourth argument (\"true\") is to create an \"update\" feature\n            cartItemsWrapper.appendChild(this.createProductCardForCart(productData, productItem.qty, \"cart-item\", true));\n        }\n        cartWrapper.appendChild(goBackBtn);\n        cartWrapper.appendChild(cartTitle);\n        cartWrapper.appendChild(cartItemsWrapper);\n        return cartWrapper;\n    };\n    // Left Container - Create Empty Cart Page\n    createEmptyCartPage = ()=>{\n        const cartWrapper = document.createElement(\"div\");\n        cartWrapper.classList = \"cart-wrapper\";\n        const goBackBtn = document.createElement(\"button\");\n        goBackBtn.classList = \"goto-products-btn\";\n        goBackBtn.innerText = \"< Back to Products\";\n        const cartTitle = document.createElement(\"h2\");\n        cartTitle.classList = \"cart-title\";\n        cartTitle.innerText = \"Cart is empty\";\n        cartWrapper.appendChild(goBackBtn);\n        cartWrapper.appendChild(cartTitle);\n        return cartWrapper;\n    };\n    // Update total price (items + handling) in menu (right container)\n    updatePartQuantity = (productObject, newQty)=>{\n        // Find \"price x qty\" element by attribute:\n        const priceQtyElement = document.querySelector(`[data-price-qty-id=\"${productObject.itemId}\"]`);\n        if (priceQtyElement) priceQtyElement.innerText = `${productObject.itemCurrency} ${productObject.itemPrice} x ${newQty}`;\n        // Find \"qty indicator\" element by id:\n        const qtyIndicator = document.getElementById(`qty-indicator_${productObject.itemId}`);\n        if (qtyIndicator) qtyIndicator.innerText = newQty;\n    };\n    // Update total price (items + handling) in menu (right container)\n    updateTotalPrice = (newPrice)=>{\n        // Find \"Total price\" element by ID\n        const totalPriceElement = document.getElementById(\"cart-total-amount\");\n        if (totalPriceElement) totalPriceElement.innerText = `Total: $${newPrice}`;\n    };\n}\n\n\nclass $06458e4997a621d0$export$b2302a7728e463f6 {\n    constructor(controller){\n        this.controller = controller;\n    }\n    checkModuleLinkage = ()=>{\n        console.log(\"HELLO, ViewOrders is connected!\");\n    };\n    // Right Container - Create Orders History Title\n    createOrdersHistoryTitle = ()=>{\n        const title = document.createElement(\"h2\");\n        title.classList = \"order-list-title\";\n        title.innerText = \"Orders\";\n        return title;\n    };\n    // Right Container - Render Order Links\n    createOrdersHistorySummary = (sessionIdOrders)=>{\n        const ordersHistorySummary = this.createOrdersHistoryTitle();\n        const ordersWrapper = document.createElement(\"div\");\n        ordersWrapper.classList = \"orders-list\";\n        for (const order of sessionIdOrders){\n            const orderBtn = document.createElement(\"button\");\n            orderBtn.classList = \"order-number-btn\";\n            orderBtn.id = `order_${order.orderId}`;\n            orderBtn.innerText = order.orderId;\n            ordersWrapper.appendChild(orderBtn);\n        }\n        ordersHistorySummary.appendChild(ordersWrapper);\n        // TEST-TBS - REMOVE FO PROD\n        // console.log(\"ordersHistorySummary: \", ordersHistorySummary);\n        return ordersHistorySummary;\n    };\n    // Right Container - Create OrderSummaryContentBlock\n    createOrderSummaryPriceBlock = (sessionIdCartPrice, orderButton)=>{\n        const orderSummary = document.createElement(\"div\");\n        orderSummary.classList = \"order-summary\";\n        const title = document.createElement(\"h3\");\n        title.classList = \"order-summary-title\";\n        title.innerText = \"Order Summary\";\n        const itemsWrapper = document.createElement(\"div\");\n        itemsWrapper.classList = \"flex-between\";\n        const itemsTitle = document.createElement(\"p\");\n        itemsTitle.innerText = \"Items:\";\n        const itemsAmount = document.createElement(\"p\");\n        itemsAmount.innerText = `$${sessionIdCartPrice.items}`;\n        const handlingWrapper = document.createElement(\"div\");\n        handlingWrapper.classList = \"flex-between\";\n        const handlingTitle = document.createElement(\"p\");\n        handlingTitle.innerText = \"Handling:\";\n        const handlingAmount = document.createElement(\"p\");\n        handlingAmount.innerText = `$${sessionIdCartPrice.handling}`;\n        const totalWrapper = document.createElement(\"div\");\n        totalWrapper.classList = \"flex-between bold\";\n        const totalTitle = document.createElement(\"p\");\n        totalTitle.innerText = \"Total:\";\n        const totalAmount = document.createElement(\"p\");\n        totalAmount.innerText = `$${sessionIdCartPrice.total}`;\n        itemsWrapper.appendChild(itemsTitle);\n        itemsWrapper.appendChild(itemsAmount);\n        handlingWrapper.appendChild(handlingTitle);\n        handlingWrapper.appendChild(handlingAmount);\n        totalWrapper.appendChild(totalTitle);\n        totalWrapper.appendChild(totalAmount);\n        orderSummary.appendChild(title);\n        orderSummary.appendChild(itemsWrapper);\n        orderSummary.appendChild(handlingWrapper);\n        orderSummary.appendChild(totalWrapper);\n        if (orderButton) orderSummary.appendChild(this.createPlaceOrderButtonBlock());\n        return orderSummary;\n    };\n    // Right Container - Create PlaceOrderButtonBlock\n    createPlaceOrderButtonBlock = ()=>{\n        const wrapper = document.createElement(\"div\");\n        wrapper.classList = \"place-order-btn-wrapper\";\n        const button = document.createElement(\"button\");\n        button.classList = \"place-order-btn\";\n        button.innerText = \"Place Order\";\n        wrapper.appendChild(button);\n        return wrapper;\n    };\n    // Left Container - Create createCheckOutWrapper\n    createCheckOutWrapper = ()=>{\n        const checkOutWrapper = document.createElement(\"div\");\n        checkOutWrapper.classList = \"checkout-wrapper\";\n        const goBackBtn = document.createElement(\"button\");\n        goBackBtn.classList = \"goto-cart-btn\";\n        goBackBtn.innerText = \"< Back to Cart\";\n        checkOutWrapper.appendChild(goBackBtn);\n        return checkOutWrapper;\n    };\n    // Left Container - Create BillToAddressContentBlock\n    createBillToAddressContentBlock = (sessionIdCartDetails, updateButton)=>{\n        const addressWrapper = document.createElement(\"div\");\n        addressWrapper.classList = \"address-wrapper\";\n        const title = document.createElement(\"h3\");\n        title.classList = \"address-title\";\n        title.innerText = \"Bill to Address\";\n        const custLegalName = document.createElement(\"p\");\n        custLegalName.innerText = sessionIdCartDetails.custLegalName;\n        const custBillToAddress = document.createElement(\"p\");\n        custBillToAddress.innerText = sessionIdCartDetails.custBillToAddress;\n        const userName = document.createElement(\"p\");\n        userName.innerText = sessionIdCartDetails.userName;\n        const userPhone = document.createElement(\"p\");\n        userPhone.innerText = sessionIdCartDetails.userPhone;\n        const userEmail = document.createElement(\"p\");\n        userEmail.innerText = sessionIdCartDetails.userEmail;\n        addressWrapper.appendChild(title);\n        addressWrapper.appendChild(custLegalName);\n        addressWrapper.appendChild(custBillToAddress);\n        addressWrapper.appendChild(userName);\n        addressWrapper.appendChild(userPhone);\n        addressWrapper.appendChild(userEmail);\n        if (updateButton) addressWrapper.appendChild(this.createUpdateButtonBlock());\n        return addressWrapper;\n    };\n    // Left Container - Create PaymentMethodContentBlock\n    createPaymentMethodContentBlock = (sessionIdCartDetails, updateButton)=>{\n        const paymentMethodWrapper = document.createElement(\"div\");\n        paymentMethodWrapper.classList = \"payment-method-wrapper\";\n        const title = document.createElement(\"h3\");\n        title.classList = \"payment-method-title\";\n        title.innerText = \"Payment Method\";\n        const paymentMethod = document.createElement(\"p\");\n        paymentMethod.innerText = sessionIdCartDetails.paymentMethod;\n        paymentMethodWrapper.appendChild(title);\n        paymentMethodWrapper.appendChild(paymentMethod);\n        if (updateButton) paymentMethodWrapper.appendChild(this.createUpdateButtonBlock());\n        return paymentMethodWrapper;\n    };\n    // Left Container - createCheckOutCartWrapper\n    createCheckOutCartWrapper = ()=>{\n        const checkOutCartWrapper = document.createElement(\"div\");\n        checkOutCartWrapper.classList = \"checkout-cart-wrapper\";\n        const title = document.createElement(\"h3\");\n        title.classList = \"checkout-cart-title\";\n        title.innerText = \"Cart\";\n        // const cartItemsWrapper = document.createElement(\"div\");\n        // cartItemsWrapper.classList = \"checkout-cart-items\";\n        checkOutCartWrapper.appendChild(title);\n        // checkOutCartWrapper.appendChild(cartItemsWrapper);\n        return checkOutCartWrapper;\n    };\n    // Left Container - Create UpdateButtonBlock\n    createUpdateButtonBlock = ()=>{\n        const wrapper = document.createElement(\"div\");\n        wrapper.classList = \"update-btn-wrapper\";\n        const button = document.createElement(\"button\");\n        button.classList = \"update-btn\";\n        button.innerText = \"Update\";\n        wrapper.appendChild(button);\n        return wrapper;\n    };\n}\n\n\nclass $83eeb1cebc8e9e2f$export$6fbf01628a6a7da2 {\n    constructor(){}\n    checkModuleLinkage = ()=>{\n        console.log(\"HELLO, ViewAdmin is connected!\");\n    };\n}\n\n\nclass $0f23fdfbe72d6dc5$export$e19edce000cd47ad {\n    constructor(){}\n    checkModuleLinkage = ()=>{\n        console.log(\"HELLO, ViewSuperadmin is connected!\");\n    };\n}\n\n\n\nvar $9zRuU = parcelRequire(\"9zRuU\");\nclass $fd5c63960fb3feb3$export$d7de4e038aa2764a {\n    constructor(){}\n    checkModuleLinkage = ()=>{\n        console.log(\"HELLO, ModelProducts is connected!\");\n    };\n}\n\n\nclass $d4cf02cd6eb40cbd$export$14b19842eb277cc3 {\n    constructor(controller){\n        this.controller = controller;\n    }\n    checkModuleLinkage = ()=>{\n        console.log(\"HELLO, ModelCart is connected!\");\n    };\n}\n\n\nclass $322482701a8583fb$export$e8a12554cce12ecc {\n    constructor(){}\n    checkModuleLinkage = ()=>{\n        console.log(\"HELLO, ModelOrders is connected!\");\n    };\n}\n\n\nclass $9e22cb4fc6971acd$export$4a0cfbe1be99c234 {\n    constructor(){}\n    checkModuleLinkage = ()=>{\n        console.log(\"HELLO, ModelUser is connected!\");\n    };\n    getSessionIdCustomerByCustomerId = (customerId, customersData)=>{\n        const sessionCustomerArray = customersData.filter((customer)=>customer.custId === customerId);\n        return sessionCustomerArray[0];\n    };\n}\n\n\n\nvar $ljOiA = parcelRequire(\"ljOiA\");\n// Init database instance (dataBase):\nlet $73f0e54013891933$var$dataBase = {};\n// Initiate CURRENT SESSION VARIABLES:\nlet $73f0e54013891933$var$sessionIdNumber = \"\";\nlet $73f0e54013891933$var$sessionIdUser = {};\nlet $73f0e54013891933$var$sessionIdCustomer = {};\nlet $73f0e54013891933$var$sessionIdOrders = [];\nlet $73f0e54013891933$var$sessionIdCartItems = [];\nlet $73f0e54013891933$var$sessionIdCartPrice = {\n};\nlet $73f0e54013891933$var$sessionIdCartDetails = {\n};\nlet $73f0e54013891933$var$newOrderDetails = {\n};\n// Init HTML variables:\nconst $73f0e54013891933$var$productsList = document.createElement(\"div\");\n$73f0e54013891933$var$productsList.innerHTML = \"\";\nconst $73f0e54013891933$var$cartSummaryNoTotal = document.createElement(\"div\");\n$73f0e54013891933$var$cartSummaryNoTotal.innerHTML = \"\";\nconst $73f0e54013891933$var$ordersHistorySummary = document.createElement(\"div\");\n$73f0e54013891933$var$ordersHistorySummary.innerHTML = \"\";\n// Init cross-ref Map: image - url\nconst $73f0e54013891933$var$imageLinksMap = new Map();\nclass $73f0e54013891933$export$bd0bf19f25da8474 {\n    constructor(){\n        this.viewProducts = new (0, $4f92014deb951a68$export$389214387cd37f49)(this);\n        this.viewCart = new (0, $1476b43a64e24fc7$export$1a33929de52b7c41)(this);\n        this.viewOrders = new (0, $06458e4997a621d0$export$b2302a7728e463f6)(this);\n        this.viewAdmin = new (0, $83eeb1cebc8e9e2f$export$6fbf01628a6a7da2)();\n        this.viewSuperadmin = new (0, $0f23fdfbe72d6dc5$export$e19edce000cd47ad)();\n        this.modelFirebase = new (0, $9zRuU.ModelFirebase)();\n        this.modelProducts = new (0, $fd5c63960fb3feb3$export$d7de4e038aa2764a)();\n        this.modelCart = new (0, $d4cf02cd6eb40cbd$export$14b19842eb277cc3)(this);\n        this.modelOrders = new (0, $322482701a8583fb$export$e8a12554cce12ecc)();\n        this.modelUser = new (0, $9e22cb4fc6971acd$export$4a0cfbe1be99c234)();\n        this.containerLeftNode = document.getElementById(\"containerLeft\");\n        this.containerRightNode = document.getElementById(\"containerRight\");\n    }\n    initializeAppMain = async ()=>{\n        // TEST AND TBS - REMOVE IN PRODUCTION\n        console.log(\"HELLO! INIT CARRIED OUT SUCCESFULLY\");\n        this.viewProducts.checkModuleLinkage();\n        this.viewCart.checkModuleLinkage();\n        this.viewOrders.checkModuleLinkage();\n        this.viewAdmin.checkModuleLinkage();\n        this.viewSuperadmin.checkModuleLinkage();\n        this.modelFirebase.checkModuleLinkage();\n        this.modelProducts.checkModuleLinkage();\n        this.modelCart.checkModuleLinkage();\n        this.modelOrders.checkModuleLinkage();\n        this.modelUser.checkModuleLinkage();\n        // Get data from database (Firebase) and keep in dataBase{}\n        console.log(\"Action: Getdata from database (Firebase) and keep in dataBase{}.\");\n        for (const collectionName of (0, $ljOiA.dbCollectionNames)){\n            $73f0e54013891933$var$dataBase[collectionName] = await this.modelFirebase.get(collectionName);\n            console.log(`[*** dataBase.${collectionName} ***] :`, $73f0e54013891933$var$dataBase[collectionName]);\n        }\n        // Create Image Links Map:\n        console.log(\"Action: Create Image Links Map imageLinksMap{}:\");\n        for (const docName of $73f0e54013891933$var$dataBase.productItems){\n            const imageURL = await this.modelFirebase.getLinkToImage(docName.itemImg).then((url)=>{\n                // console.log(\"The download URL is: \", url);\n                return url;\n            }).catch((error)=>{\n                console.log(\"Error getting download URL: \", error);\n            });\n            // FOR TEST AND TBS - REMOVE IN PROD:\n            // console.log(\"imageURL: \", imageURL);\n            $73f0e54013891933$var$imageLinksMap.set(docName.itemImg, imageURL);\n        }\n        // FOR TEST AND TBS - REMOVE IN PROD:\n        // console.log(\"imageLinksMap: \", imageLinksMap);\n        // Assign to sessionIdNumber a userId of the first user object/document from DB (usersData[0].userId)\n        $73f0e54013891933$var$sessionIdNumber = $73f0e54013891933$var$dataBase.usersData[0].userId;\n        console.log(\"Assigned to [*** sessionIdNumber ***]: \", $73f0e54013891933$var$sessionIdNumber);\n        // Assign to sessionIdUser a first object/document from DB (usersData[0])\n        $73f0e54013891933$var$sessionIdUser = $73f0e54013891933$var$dataBase.usersData[0];\n        console.log(\"[*** sessionIdUser ***] initiated: \", $73f0e54013891933$var$sessionIdUser);\n        // Assign to sessionIdCustomer an object/document associated with sesstionIdUser (by userId)\n        $73f0e54013891933$var$sessionIdCustomer = this.getSessionIdCustomerData();\n        console.log(\"[*** sessionIdCustomer ***] initiated: \", $73f0e54013891933$var$sessionIdCustomer);\n        // Get values to CURRENT SESSION VARIABLES\n        // 1. Set \"sessionIdCartItems\" by sesstion's userId (sessionIdNumber):\n        $73f0e54013891933$var$sessionIdCartItems = this.getCartItemsByUserID($73f0e54013891933$var$sessionIdNumber);\n        console.log(`[*** sessionIdCartItems ***] for User ID ${$73f0e54013891933$var$sessionIdNumber}: `, $73f0e54013891933$var$sessionIdCartItems);\n        // 2. Set \"sessionIdOrders\" by sesstion's userId (sessionIdNumber):\n        $73f0e54013891933$var$sessionIdOrders = this.getOrdersByUserID($73f0e54013891933$var$sessionIdNumber);\n        console.log(`[*** sessionIdOrders ***] for User ID ${$73f0e54013891933$var$sessionIdNumber}: `, $73f0e54013891933$var$sessionIdOrders);\n        // 3. Set \"sessionIdCartDetails\":\n        $73f0e54013891933$var$sessionIdCartDetails = this.getSessionIdCartDetails();\n        console.log(`[*** sessionIdCartDetails ***] for User ID ${$73f0e54013891933$var$sessionIdNumber}: `, $73f0e54013891933$var$sessionIdCartDetails);\n        // ALERT - POPOUP DISCLAMER\n        // *** ACTION NEEDED ***: UNCOMMENT FOR PROD\n        // confirm(\n        //     `Hi there, this application was set for demonstration purpose, therefore a User ID ${sessionIdNumber} was assigned for this session. Fake Name, Lastname, and other user properties are generated for practice purpose only. Should you wish to use this application and/or customize it fo the purpose of your business please reach out to the developer at seppo.gigital@gmail.com.`\n        // );\n        // Left Container - Render product items\n        this.renderProductItemsList($73f0e54013891933$var$dataBase.productItems);\n        // Right Container - Render Cart Summary\n        this.renderCartAndOrdersSummary($73f0e54013891933$var$sessionIdCartItems, $73f0e54013891933$var$sessionIdOrders);\n        this.attachEventListenrs();\n    // TEST-TBS ONLY:\n    };\n    // TO-DO: check where it is used?\n    askForImageUrlFromStorage = async (imageName)=>{\n        const imageURL = await this.modelFirebase.getLinkToImage(imageName).then((url)=>{\n            // console.log(\"The download URL is: \", url);\n            return url;\n        }).catch((error)=>{\n            console.log(\"Error getting download URL: \", error);\n        });\n        console.log(\"imageURL: \", imageURL);\n    };\n    // Generate unique ID\n    handleNewIdGeneration = ()=>{\n        return this.modelFirebase.generateUniqueId();\n    };\n    // Clear container\n    clearContainerLeft = ()=>{\n        this.containerLeftNode.innerHTML = \"\";\n    };\n    clearContainerRight = ()=>{\n        this.containerRightNode.innerHTML = \"\";\n    };\n    deleteObjectFromArrayByDocId = (arrayData, docId)=>{\n        const index = arrayData.filter((object)=>object.docId === docId);\n        if (index !== -1) {\n            arrayData.splice(index, 1);\n            console.log(\"Deleted element/document with docId = \", docId);\n        } else console.log(\"Not found element/document with docId = \", docId);\n        return arrayData;\n    };\n    // Assign to sessionIdCustomer an object/document associated with sesstionIdUser (by userId)\n    getSessionIdCustomerData = ()=>{\n        $73f0e54013891933$var$sessionIdCustomer = this.modelUser.getSessionIdCustomerByCustomerId($73f0e54013891933$var$sessionIdUser.custId, $73f0e54013891933$var$dataBase.customersData);\n        return $73f0e54013891933$var$sessionIdCustomer;\n    };\n    // Set \"sessionIdCartDetails\":\n    getSessionIdCartDetails = ()=>{\n        const updatedSessionIdCartDetails = {\n            userId: $73f0e54013891933$var$sessionIdUser.userId,\n            userName: $73f0e54013891933$var$sessionIdUser.userName,\n            userEmail: $73f0e54013891933$var$sessionIdUser.userEmail,\n            userPhone: $73f0e54013891933$var$sessionIdUser.userPhone,\n            custId: $73f0e54013891933$var$sessionIdCustomer.custId,\n            custLegalName: $73f0e54013891933$var$sessionIdCustomer.custLegalName,\n            custBillToAddress: $73f0e54013891933$var$sessionIdCustomer.custBillToAddress,\n            custHandlingFee: $73f0e54013891933$var$sessionIdCustomer.custHandlingFee,\n            paymentMethod: $73f0e54013891933$var$sessionIdCustomer.paymentMethod\n        };\n        return updatedSessionIdCartDetails;\n    };\n    // Revert back from map an image URL by image name\n    getUrlByNameLocal = (imageName)=>{\n        return $73f0e54013891933$var$imageLinksMap.get(imageName);\n    };\n    // Set \"sessionIdCartItems\" by sesstion's userId (sessionIdNumber):\n    getCartItemsByUserID = (sessionIdNumber)=>{\n        return $73f0e54013891933$var$dataBase.cartsData.filter((order)=>order.userId === sessionIdNumber);\n    };\n    // Set \"sessionIdOrders\" by sesstion's userId (sessionIdNumber):\n    getOrdersByUserID = (sessionIdNumber)=>{\n        return $73f0e54013891933$var$dataBase.ordersData.filter((order)=>order.userId === sessionIdNumber);\n    };\n    getImageByProductId = (productId)=>{\n        const productObject = $73f0e54013891933$var$dataBase.productItems.filter((product)=>product.itemId === productId);\n        // TEST-TBS - REMOVE IN PROD\n        // console.log(\"productObject: \", productObject);\n        // console.log(\"productObject[0].itemImg: \", productObject[0].itemImg);\n        return productObject[0].itemImg;\n    };\n    getPriceByProductId = (productItems, productId)=>{\n        const productById = productItems.filter((product)=>product.itemId === productId);\n        // console.log(\"productById: \", productById);\n        // console.log(\"productById[0]: \", productById[0]);\n        return productById[0].itemPrice;\n    };\n    getProdIdFromElementId = (idString)=>{\n        return idString.split(\"_\")[1];\n    };\n    // Get product/object from \"dataBase.productItems\" product ID (itemId):\n    getProductObjectById = (productId)=>{\n        // Filter product array => single object array\n        const filteredArray = $73f0e54013891933$var$dataBase.productItems.filter((product)=>product.itemId === productId);\n        if (filteredArray.length === 0) return null;\n        // return object\n        return filteredArray[0];\n    };\n    getDocIdFromArrayByItemId = (array, itemId)=>{\n        const filteredArray = array.filter((object)=>object.itemId === itemId);\n        // TEST-TBS - REMOVE FOR PROD\n        console.log(\"[*** filteredArray ***]: \", filteredArray);\n        if (filteredArray.length === 0) return null;\n        return filteredArray[0].docId;\n    };\n    callToUpdateCartPriceVariable = ()=>{\n        console.log(\"Received command to call for Price Variable update\");\n        // TEST-TBD\n        this.updateCartPriceVariable($73f0e54013891933$var$sessionIdCartItems, $73f0e54013891933$var$sessionIdCartPrice, $73f0e54013891933$var$dataBase.productItems, $73f0e54013891933$var$sessionIdCustomer.custHandlingFee);\n    };\n    // MIGHT BE A PART OF MODEL:\n    updateCartPriceVariable = (sessionIdCartItems, sessionIdCartPrice, productItems, handlingRate)=>{\n        let newItemsPrice = 0;\n        let newHandlingFee = 0;\n        // TO-DO: CHECK, if it is required here. Delete for now:\n        console.log(\"MODEL - [*** sessionIdCartItems ***]: \", sessionIdCartItems);\n        console.log(\"MODEL - [*** sessionIdCartPrice ***]: \", sessionIdCartPrice);\n        console.log(\"MODEL - [*** dataBase.productItems ***]: \", $73f0e54013891933$var$dataBase.productItems);\n        console.log(\"MODEL - [*** sessionIdCustome ***]: \", $73f0e54013891933$var$sessionIdCustomer);\n        for (const item of sessionIdCartItems)newItemsPrice += item.qty * this.getPriceByProductId(productItems, item.itemId);\n        newHandlingFee = newItemsPrice * handlingRate;\n        sessionIdCartPrice.items = newItemsPrice;\n        sessionIdCartPrice.handling = newHandlingFee;\n        sessionIdCartPrice.total = newItemsPrice + newHandlingFee;\n        console.log(\"new sessionIdCartPrice: \", sessionIdCartPrice);\n        console.log(\"for sessionIdCartItems: \", sessionIdCartItems);\n        // TO-DO: CHECK, if it is required here. Delete for now:\n        // this.controller.handleViewOfTotalPrceInCart(sessionIdCartPrice.total);\n        return sessionIdCartPrice;\n    };\n    // Left Container - Render product items\n    renderProductItemsList = (arrayProducts)=>{\n        const productItemsList = document.createElement(\"div\");\n        productItemsList.innerHTML = \"\";\n        productItemsList.appendChild(this.viewProducts.createProductItemsList(arrayProducts));\n        // TEST-TBS - REMOVE FOR PROD\n        // Reset global variable:\n        // productsList.innerHTML = \"\";\n        // productsList.appendChild(productItemsList);\n        // TEST-TBS - REMOVE FOR PROD\n        // console.log(\"productsList: \", productsList);\n        // console.log(\"productsList: \", productsList.innerHTML);\n        this.clearContainerLeft();\n        this.containerLeftNode.appendChild(productItemsList);\n    };\n    // Left Container - Render Order CART\n    renderCartSummary = (sessionIdCartItems)=>{\n        let productCardForCartHTML;\n        if (sessionIdCartItems.length === 0) productCardForCartHTML = this.viewCart.createEmptyCartPage(sessionIdCartItems);\n        else productCardForCartHTML = this.viewCart.createCartPage(sessionIdCartItems);\n        this.clearContainerLeft();\n        this.containerLeftNode.appendChild(productCardForCartHTML);\n    };\n    // Left Container - Render Product Card\n    renderProductCard = (productObject)=>{\n        const detailedCardHTML = this.viewProducts.createDetailedProductCard(productObject);\n        this.clearContainerLeft();\n        this.containerLeftNode.appendChild(detailedCardHTML);\n    };\n    // Right Container - Render Cart (no price) and Orders Summaries\n    renderCartAndOrdersSummary = (sessionIdCartItems, sessionIdOrders)=>{\n        const cartAndOrdersSummary = document.createElement(\"div\");\n        cartAndOrdersSummary.innerHTML = \"\";\n        const cartItems = this.viewCart.createNewCartSummaryNoTotal(sessionIdCartItems);\n        const ordersHistory = this.viewOrders.createOrdersHistorySummary(sessionIdOrders);\n        // TEST-TBS - REMOVE IN PROD\n        console.log(\"cartSummaryNoTotal: \", cartItems);\n        console.log(\"ordersHistorySummary: \", ordersHistory);\n        cartAndOrdersSummary.appendChild(cartItems);\n        cartAndOrdersSummary.appendChild(ordersHistory);\n        this.clearContainerRight();\n        this.containerRightNode.appendChild(cartAndOrdersSummary);\n    };\n    // Right Container - Render Cart (with price)\n    renderCartSummaryWithPrice = (sessionIdCartItems, sessionIdCartPrice)=>{\n        const cartSummaryWrapper = document.createElement(\"div\");\n        cartSummaryWrapper.innerHTML = \"\";\n        const cartSummary = this.viewCart.createNewCartSummaryWithPrice(sessionIdCartItems, sessionIdCartPrice);\n        cartSummaryWrapper.appendChild(cartSummary);\n        // TEST-TBS - REMOVE IN PROD\n        console.log(\"cart Summary with Total: \", cartSummaryWrapper);\n        this.clearContainerRight();\n        this.containerRightNode.appendChild(cartSummaryWrapper);\n    };\n    // Left Container - Render Checkout Panel\n    renderCheckOutPanel = ()=>{\n        this.clearContainerLeft();\n        const checkOutWrapper = this.viewOrders.createCheckOutWrapper();\n        // Second argument (\"true\") is to create \"Update\" button\n        checkOutWrapper.appendChild(this.viewOrders.createBillToAddressContentBlock($73f0e54013891933$var$sessionIdCartDetails, true));\n        // Second argument (\"true\") is to create \"Update\" button\n        checkOutWrapper.appendChild(this.viewOrders.createPaymentMethodContentBlock($73f0e54013891933$var$sessionIdCartDetails, true));\n        const checkOutCartWrapper = this.viewOrders.createCheckOutCartWrapper();\n        const cartItems = document.createElement(\"div\");\n        cartItems.classList = \"checkout-cart-items\";\n        for (const productItem of $73f0e54013891933$var$sessionIdCartItems){\n            const productData = this.getProductObjectById(productItem.itemId);\n            // Third argument (\"checkout-cart-item\") is a classList to pass to 'div' element\n            // Fourth argument (\"true\") is for not to create a \"qty update\" feature\n            cartItems.appendChild(this.viewCart.createProductCardForCart(productData, productItem.qty, \"checkout-cart-item\", false));\n        }\n        checkOutCartWrapper.appendChild(cartItems);\n        checkOutCartWrapper.appendChild(this.viewOrders.createUpdateButtonBlock());\n        checkOutWrapper.appendChild(checkOutCartWrapper);\n        this.containerLeftNode.appendChild(checkOutWrapper);\n    };\n    // Right Container - Render Checkout Price Panel\n    renderCheckOutPricePanel = ()=>{\n        this.clearContainerRight();\n        this.containerRightNode.appendChild(// Second argument (\"true\") is to create \"Place Order\" button\n        this.viewOrders.createOrderSummaryPriceBlock($73f0e54013891933$var$sessionIdCartPrice, true));\n    };\n    // Support funtions for buttons handler:\n    // Handle click of complex element by picking it's parent element class\n    findAncestorByClass = (element, className)=>{\n        let currentElement = element;\n        while(currentElement && !currentElement.classList.contains(className))currentElement = currentElement.parentElement;\n        return currentElement;\n    };\n    // \"< Back to Products\" button\n    handleGotoProductsBtn = ()=>{\n        this.renderProductItemsList($73f0e54013891933$var$dataBase.productItems);\n        // TO-DO: CHECK, if it is required here. Delete for now:\n        this.renderCartAndOrdersSummary($73f0e54013891933$var$sessionIdCartItems, $73f0e54013891933$var$sessionIdOrders);\n    };\n    // \"Add to Cart\" button at detailed product card (page)\n    handleAddToCartBtn = (element)=>{\n        // TEST-TBS REMOVE IN PROD\n        console.log(`TO-DO: Add product with ID ${element.id} to cart.`);\n        // Get product/object ID (itemId) from DOM element ID (string)\n        const itemId = this.getProdIdFromElementId(element.id);\n        // Check if product already in user's cart\n        const isInTheCart = this.getDocIdFromArrayByItemId($73f0e54013891933$var$sessionIdCartItems, itemId);\n        if (isInTheCart) this.handleQtyChangeBtn(element, 1);\n        else this.addProduct(itemId, $73f0e54013891933$var$sessionIdNumber);\n        this.renderCartAndOrdersSummary($73f0e54013891933$var$sessionIdCartItems, $73f0e54013891933$var$sessionIdOrders);\n    };\n    // \"Go to Cart\" button at right panel\n    handleGotoCartBtn = ()=>{\n        console.log(\"Received command to display CART.\");\n        // TEST-TBD\n        this.updateCartPriceVariable($73f0e54013891933$var$sessionIdCartItems, $73f0e54013891933$var$sessionIdCartPrice, $73f0e54013891933$var$dataBase.productItems, $73f0e54013891933$var$sessionIdCustomer.custHandlingFee);\n        this.renderCartSummary($73f0e54013891933$var$sessionIdCartItems);\n        this.renderCartSummaryWithPrice($73f0e54013891933$var$sessionIdCartItems, $73f0e54013891933$var$sessionIdCartPrice);\n    };\n    // \"Proceed to checkout\" button at right panel\n    handleProceedToCheckoutBtn = ()=>{\n        console.log(\"Received command PROCEED TO CHECKOUT\");\n        this.renderCheckOutPanel();\n        this.renderCheckOutPricePanel();\n    };\n    // Product card as \"button\" at main page\n    handleProductItem = (element)=>{\n        // TEST-TBS REMOVE IN PROD\n        console.log(\"Display CARD for product ID: \", element.id);\n        const productIdToDisplay = this.getProdIdFromElementId(element.id);\n        const productToDisplay = this.getProductObjectById(productIdToDisplay);\n        this.renderProductCard(productToDisplay);\n    // TO-DO: CHECK, if it is required here. Delete for now:\n    // this.renderCartAndOrdersSummary(sessionIdCartItems, sessionIdOrders);\n    };\n    // TO-DO: Create ORDER POP UP:\n    handleDisplayHistoricalOrder = (element)=>{\n        // TEST-TBS REMOVE IN PROD\n        console.log(\"Display ORDER with ID: \", element.id);\n    };\n    handleQtyChangeBtn = (elementDOM, adder)=>{\n        const itemId = this.getProdIdFromElementId(elementDOM.id);\n        // TEST-TBS REMOVE IN PROD\n        console.log(\"Function: 'handleQtyChangeBtn()': update QTY of prod ID: \", elementDOM.id);\n        console.log(\"'sessionIdCartItems': \", $73f0e54013891933$var$sessionIdCartItems);\n        console.log(\"itemId: \", itemId);\n        // product/object to update:\n        const productToUpdate = JSON.parse(JSON.stringify($73f0e54013891933$var$sessionIdCartItems.find((product)=>product.itemId === itemId)));\n        if (!productToUpdate) {\n            console.log(\"Product/object not found\");\n            return;\n        }\n        // remove product from array:\n        const filteredsessionIdCartItems = $73f0e54013891933$var$sessionIdCartItems.filter((product)=>product.itemId !== itemId);\n        if (productToUpdate.qty + adder > 0) {\n            this.updateProduct(filteredsessionIdCartItems, productToUpdate, adder);\n            this.updateCartDOM(itemId, productToUpdate);\n        } else {\n            this.deleteProduct(filteredsessionIdCartItems, productToUpdate);\n            this.handleGotoCartBtn();\n        }\n    };\n    addProduct = (itemId, userId)=>{\n        const newProductToCart = {\n            docId: this.handleNewIdGeneration(),\n            itemId: itemId,\n            qty: 1,\n            userId: userId\n        };\n        console.log(\"MODEL: try to add to database.cartsData a [*** newProductToCart *** ]: \", newProductToCart);\n        this.handleAddDocToFirestore(\"cartsData\", newProductToCart);\n        $73f0e54013891933$var$sessionIdCartItems.push(newProductToCart);\n        console.log(\"Updated [*** sessionIdCartItems ***]: \", $73f0e54013891933$var$sessionIdCartItems);\n    };\n    updateProduct = (filteredsessionIdCartItems, productToUpdate, adder)=>{\n        // Modify product/object\n        productToUpdate.qty += adder;\n        // Add product back to array\n        filteredsessionIdCartItems.push(productToUpdate);\n        // Update Firestore\n        this.handleUpdateDocInFirestore(\"cartsData\", productToUpdate);\n        // Update global variable\n        $73f0e54013891933$var$sessionIdCartItems = filteredsessionIdCartItems;\n    };\n    deleteProduct = (filteredsessionIdCartItems, productToUpdate)=>{\n        // Delete product from Firestore\n        this.handleDeleteDocFromFirestore(\"cartsData\", productToUpdate.docId);\n        // Update global variable\n        $73f0e54013891933$var$sessionIdCartItems = filteredsessionIdCartItems;\n    };\n    updateCartDOM = (itemId, productToUpdate)=>{\n        //  update/re-render 'qty' in user's cart (DOM)\n        this.handleViewOfPartQty(itemId, productToUpdate.qty);\n        //  update total price 'sessionIdCartPrice' (global variable)\n        this.callToUpdateCartPriceVariable();\n        //  update/re-render 'total price' in user's cart (DOM)\n        this.handleViewOfTotalPrceInCart($73f0e54013891933$var$sessionIdCartPrice.total);\n    };\n    // Update product QTY in CART in 2 locations: price and selector\n    handleViewOfPartQty = (itemId, newQty)=>{\n        // TEST-TBS REMOVE IN PROD\n        console.log(\"Got comand to update product qty with:\");\n        console.log(\"Product ID: \", itemId);\n        console.log(\"New QTY: \", newQty);\n        const productObject = this.getProductObjectById(itemId);\n        this.viewCart.updatePartQuantity(productObject, newQty);\n    };\n    // Update total price (items + handling) in menu (right container)\n    handleViewOfTotalPrceInCart = (newPrice)=>{\n        this.viewCart.updateTotalPrice(newPrice);\n    };\n    handleButtonsClickLeft = (event)=>{\n        const target = event.target;\n        // \"< Back to Products\" button\n        if (target.classList.contains(\"goto-products-btn\")) {\n            this.handleGotoProductsBtn();\n            return;\n        }\n        // \"Add to Cart\" button at detailed product card (page)\n        const addToCartBtn = target.closest(\".product-card__add-to-cart-btn\");\n        if (addToCartBtn) {\n            this.handleAddToCartBtn(addToCartBtn);\n            return;\n        }\n        // \"Add to Cart\" button at short product card (main page)\n        const priceBtnElement = this.findAncestorByClass(target, \"product-item__content_price-btn\");\n        if (priceBtnElement) {\n            this.handleAddToCartBtn(priceBtnElement);\n            return;\n        }\n        // Product card as \"button\" at main page\n        const productItemElement = this.findAncestorByClass(target, \"product-item\");\n        if (productItemElement) this.handleProductItem(productItemElement);\n        // Qty deduct button at Cart page\n        if (target.classList.contains(\"cart-element__qty-mod_deduct-btn\")) {\n            this.handleQtyChangeBtn(target, -1);\n            return;\n        }\n        // Qty add button at Cart page\n        if (target.classList.contains(\"cart-element__qty-mod_add-btn\")) {\n            this.handleQtyChangeBtn(target, 1);\n            return;\n        }\n    };\n    handleButtonsClickRight = (event)=>{\n        const target = event.target;\n        // console.log(\"clicked element with class: \", target.classList);\n        // console.log(\"clicked element with ID: \", target.id);\n        // Product card as \"button\" at right panel\n        if (target.classList.contains(\"cart-link-btn\")) this.handleProductItem(target);\n        // History order number as \"button\" at right panel\n        if (target.classList.contains(\"order-number-btn\")) this.handleDisplayHistoricalOrder(target);\n        // \"Go to cart\" button at right panel\n        const goToCartBtn = this.findAncestorByClass(target, \"cart-goto-btn\");\n        // Alternative command:\n        // const goToCartBtn = target.closest(\".cart-goto-btn\");\n        if (goToCartBtn) this.handleGotoCartBtn($73f0e54013891933$var$sessionIdCartItems);\n        // \"Proceed to checkout\" button at right panel\n        const proceedToCheckoutBtn = this.findAncestorByClass(target, \"cart-checkout-btn\");\n        if (proceedToCheckoutBtn) // TO-DO\n        this.handleProceedToCheckoutBtn();\n    };\n    attachEventListenrs = ()=>{\n        this.containerLeftNode.addEventListener(\"click\", this.handleButtonsClickLeft);\n        this.containerRightNode.addEventListener(\"click\", this.handleButtonsClickRight);\n    };\n    // Database support functions\n    handleAddDocToFirestore = (collectionName, documentObject)=>{\n        console.log(\"Controller: got a requst to add [object]: \", documentObject);\n        console.log(\"to [collction]: \", collectionName);\n        this.modelFirebase.addDocToFirestore(collectionName, documentObject);\n    };\n    handleUpdateDocInFirestore = (collectionName, documentObject)=>{\n        console.log(\"Controller: got a requst update [object]: \", documentObject);\n        console.log(\"in [collction]: \", collectionName);\n        this.modelFirebase.updateDocInFirestore(collectionName, documentObject);\n    };\n    handleDeleteDocFromFirestore = (collectionName, documentId)=>{\n        console.log(\"Controller: got a requst to delete [object]: \", documentId);\n        console.log(\"from [collection]: \", collectionName);\n        this.modelFirebase.deleteDocFromFirestore(collectionName, documentId);\n    };\n}\n\n\nconst $a0f19fba54d20669$var$App = new (0, $73f0e54013891933$export$bd0bf19f25da8474)();\ntry {\n    $a0f19fba54d20669$var$App.initializeAppMain();\n} catch (error) {\n    console.error(\"An error occured duting app initialization:\", error);\n    alert(\"Something went wrong. Please contact the app admin or try again later.\");\n}\n\n})();\n//# sourceMappingURL=index.9d1ed911.js.map\n","\"use strict\";\n\nvar mapping = {};\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping[id];\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return resolved;\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","\"use strict\";\n\nvar bundleURL = {};\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n  return value;\n}\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n  return '/';\n}\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\n// TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n  return matches[0];\n}\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"ceDhw\\\":\\\"index.9d1ed911.js\\\",\\\"4M8Gf\\\":\\\"icon-add-order.d5dcde0a.png\\\",\\\"kSZwU\\\":\\\"icon-cart.dd455062.png\\\",\\\"8HtV0\\\":\\\"icon-order.5ea58f4f.png\\\",\\\"kVJvh\\\":\\\"admin.20c8b860.js\\\"}\"));","import { Controller } from \"./controller\";\n\nconst App = new Controller();\n\ntry {\n    App.initializeAppMain();\n} catch (error) {\n    console.error(\"An error occured duting app initialization:\", error);\n    alert(\n        \"Something went wrong. Please contact the app admin or try again later.\"\n    );\n}\n","import { ViewProducts } from \"./view-products.js\";\nimport { ViewCart } from \"./view-cart.js\";\nimport { ViewOrders } from \"./view-orders.js\";\nimport { ViewAdmin } from \"./view-admin.js\";\nimport { ViewSuperadmin } from \"./view-superadmin.js\";\nimport { ModelFirebase } from \"../common/model-firebase.js\";\nimport { ModelProducts } from \"./model-products.js\";\nimport { ModelCart } from \"./model-cart.js\";\nimport { ModelOrders } from \"./model-orders.js\";\nimport { ModelUser } from \"./model-user.js\";\n\n// Get DB collection names (dbCollectionNames) from constants.js\nimport { dbCollectionNames } from \"../common/constants.js\";\n\n// Init database instance (dataBase):\nlet dataBase = {};\n\n// Initiate CURRENT SESSION VARIABLES:\nlet sessionIdNumber = \"\";\nlet sessionIdUser = {};\nlet sessionIdCustomer = {};\nlet sessionIdOrders = [];\nlet sessionIdCartItems = [];\nlet sessionIdCartPrice = {\n    // items: 800000,\n    // handling: 8000,\n    // total: 808000,\n};\n\nlet sessionIdCartDetails = {\n    // userId: \"1001\",\n    // userName: \"Mattew Yampolski\",\n    // userEmail: \"matt.y@aerosupplyplus.aero\",\n    // userPhone: \"+1 898 9289289\",\n    // custId: \"c001\",\n    // custLegalName: \"AeroSupplyPlus LLC\",\n    // custBillToAddress: \"2023, Cactus Road, Springdale, FL, 33761 USA\",\n    // custHandlingFee: 1,\n};\n\nlet newOrderDetails = {\n    // userId: \"1001\",\n    // userName: \"Mattew Yampolski\",\n    // userEmail: \"matt.y@aerosupplyplus.aero\",\n    // userPhone: \"+1 898 9289289\",\n    // custId: \"c001\",\n    // custLegalName: \"AeroSupplyPlus LLC\",\n    // custBillToAddress: \"2023, Cactus Road, Springdale, FL, 33761 USA\",\n    // custHandlingFee: 1,\n    // priceItems: 800000,\n    // priceHandling: 8000,\n    // priceTotal: 808000,\n    // orderCurrency: \"$\",\n    // paymentMethod: \"card\",\n    // orderId: \"100005\",\n    // orderDate: \"20230828\",\n    // paymentDate: \"20230828\",\n    // docId: \"iuyreqouoqoiwyiuyorqwriuyqeoiuyrw\",\n};\n\n// Init HTML variables:\nconst productsList = document.createElement(\"div\");\nproductsList.innerHTML = \"\";\nconst cartSummaryNoTotal = document.createElement(\"div\");\ncartSummaryNoTotal.innerHTML = \"\";\nconst ordersHistorySummary = document.createElement(\"div\");\nordersHistorySummary.innerHTML = \"\";\n\n// Init cross-ref Map: image - url\nconst imageLinksMap = new Map();\n\nexport class Controller {\n    constructor() {\n        this.viewProducts = new ViewProducts(this);\n        this.viewCart = new ViewCart(this);\n        this.viewOrders = new ViewOrders(this);\n        this.viewAdmin = new ViewAdmin();\n        this.viewSuperadmin = new ViewSuperadmin();\n        this.modelFirebase = new ModelFirebase();\n        this.modelProducts = new ModelProducts();\n        this.modelCart = new ModelCart(this);\n        this.modelOrders = new ModelOrders();\n        this.modelUser = new ModelUser();\n\n        this.containerLeftNode = document.getElementById(\"containerLeft\");\n        this.containerRightNode = document.getElementById(\"containerRight\");\n    }\n\n    initializeAppMain = async () => {\n        // TEST AND TBS - REMOVE IN PRODUCTION\n        console.log(\"HELLO! INIT CARRIED OUT SUCCESFULLY\");\n        this.viewProducts.checkModuleLinkage();\n        this.viewCart.checkModuleLinkage();\n        this.viewOrders.checkModuleLinkage();\n        this.viewAdmin.checkModuleLinkage();\n        this.viewSuperadmin.checkModuleLinkage();\n        this.modelFirebase.checkModuleLinkage();\n        this.modelProducts.checkModuleLinkage();\n        this.modelCart.checkModuleLinkage();\n        this.modelOrders.checkModuleLinkage();\n        this.modelUser.checkModuleLinkage();\n\n        // Get data from database (Firebase) and keep in dataBase{}\n        console.log(\n            \"Action: Getdata from database (Firebase) and keep in dataBase{}.\"\n        );\n\n        for (const collectionName of dbCollectionNames) {\n            dataBase[collectionName] = await this.modelFirebase.get(\n                collectionName\n            );\n            console.log(\n                `[*** dataBase.${collectionName} ***] :`,\n                dataBase[collectionName]\n            );\n        }\n\n        // Create Image Links Map:\n        console.log(\"Action: Create Image Links Map imageLinksMap{}:\");\n\n        for (const docName of dataBase.productItems) {\n            const imageURL = await this.modelFirebase\n                .getLinkToImage(docName.itemImg)\n                .then((url) => {\n                    // console.log(\"The download URL is: \", url);\n                    return url;\n                })\n                .catch((error) => {\n                    console.log(\"Error getting download URL: \", error);\n                });\n            // FOR TEST AND TBS - REMOVE IN PROD:\n            // console.log(\"imageURL: \", imageURL);\n\n            imageLinksMap.set(docName.itemImg, imageURL);\n        }\n\n        // FOR TEST AND TBS - REMOVE IN PROD:\n        // console.log(\"imageLinksMap: \", imageLinksMap);\n\n        // Assign to sessionIdNumber a userId of the first user object/document from DB (usersData[0].userId)\n        sessionIdNumber = dataBase.usersData[0].userId;\n        console.log(\"Assigned to [*** sessionIdNumber ***]: \", sessionIdNumber);\n\n        // Assign to sessionIdUser a first object/document from DB (usersData[0])\n        sessionIdUser = dataBase.usersData[0];\n        console.log(\"[*** sessionIdUser ***] initiated: \", sessionIdUser);\n\n        // Assign to sessionIdCustomer an object/document associated with sesstionIdUser (by userId)\n        sessionIdCustomer = this.getSessionIdCustomerData();\n        console.log(\n            \"[*** sessionIdCustomer ***] initiated: \",\n            sessionIdCustomer\n        );\n\n        // Get values to CURRENT SESSION VARIABLES\n        // 1. Set \"sessionIdCartItems\" by sesstion's userId (sessionIdNumber):\n        sessionIdCartItems = this.getCartItemsByUserID(sessionIdNumber);\n        console.log(\n            `[*** sessionIdCartItems ***] for User ID ${sessionIdNumber}: `,\n            sessionIdCartItems\n        );\n\n        // 2. Set \"sessionIdOrders\" by sesstion's userId (sessionIdNumber):\n        sessionIdOrders = this.getOrdersByUserID(sessionIdNumber);\n        console.log(\n            `[*** sessionIdOrders ***] for User ID ${sessionIdNumber}: `,\n            sessionIdOrders\n        );\n\n        // 3. Set \"sessionIdCartDetails\":\n        sessionIdCartDetails = this.getSessionIdCartDetails();\n        console.log(\n            `[*** sessionIdCartDetails ***] for User ID ${sessionIdNumber}: `,\n            sessionIdCartDetails\n        );\n\n        // ALERT - POPOUP DISCLAMER\n        // *** ACTION NEEDED ***: UNCOMMENT FOR PROD\n        // confirm(\n        //     `Hi there, this application was set for demonstration purpose, therefore a User ID ${sessionIdNumber} was assigned for this session. Fake Name, Lastname, and other user properties are generated for practice purpose only. Should you wish to use this application and/or customize it fo the purpose of your business please reach out to the developer at seppo.gigital@gmail.com.`\n        // );\n\n        // Left Container - Render product items\n        this.renderProductItemsList(dataBase.productItems);\n\n        // Right Container - Render Cart Summary\n        this.renderCartAndOrdersSummary(sessionIdCartItems, sessionIdOrders);\n\n        this.attachEventListenrs();\n\n        // TEST-TBS ONLY:\n    };\n\n    // TO-DO: check where it is used?\n    askForImageUrlFromStorage = async (imageName) => {\n        const imageURL = await this.modelFirebase\n            .getLinkToImage(imageName)\n            .then((url) => {\n                // console.log(\"The download URL is: \", url);\n                return url;\n            })\n            .catch((error) => {\n                console.log(\"Error getting download URL: \", error);\n            });\n        console.log(\"imageURL: \", imageURL);\n    };\n\n    // Generate unique ID\n    handleNewIdGeneration = () => {\n        return this.modelFirebase.generateUniqueId();\n    };\n\n    // Clear container\n    clearContainerLeft = () => {\n        this.containerLeftNode.innerHTML = \"\";\n    };\n\n    clearContainerRight = () => {\n        this.containerRightNode.innerHTML = \"\";\n    };\n\n    deleteObjectFromArrayByDocId = (arrayData, docId) => {\n        const index = arrayData.filter((object) => object.docId === docId);\n\n        if (index !== -1) {\n            arrayData.splice(index, 1);\n            console.log(\"Deleted element/document with docId = \", docId);\n        } else {\n            console.log(\"Not found element/document with docId = \", docId);\n        }\n        return arrayData;\n    };\n\n    // Assign to sessionIdCustomer an object/document associated with sesstionIdUser (by userId)\n    getSessionIdCustomerData = () => {\n        sessionIdCustomer = this.modelUser.getSessionIdCustomerByCustomerId(\n            sessionIdUser.custId,\n            dataBase.customersData\n        );\n        return sessionIdCustomer;\n    };\n\n    // Set \"sessionIdCartDetails\":\n    getSessionIdCartDetails = () => {\n        const updatedSessionIdCartDetails = {\n            userId: sessionIdUser.userId,\n            userName: sessionIdUser.userName,\n            userEmail: sessionIdUser.userEmail,\n            userPhone: sessionIdUser.userPhone,\n            custId: sessionIdCustomer.custId,\n            custLegalName: sessionIdCustomer.custLegalName,\n            custBillToAddress: sessionIdCustomer.custBillToAddress,\n            custHandlingFee: sessionIdCustomer.custHandlingFee,\n            paymentMethod: sessionIdCustomer.paymentMethod,\n        };\n        return updatedSessionIdCartDetails;\n    };\n\n    // Revert back from map an image URL by image name\n    getUrlByNameLocal = (imageName) => {\n        return imageLinksMap.get(imageName);\n    };\n\n    // Set \"sessionIdCartItems\" by sesstion's userId (sessionIdNumber):\n    getCartItemsByUserID = (sessionIdNumber) => {\n        return dataBase.cartsData.filter(\n            (order) => order.userId === sessionIdNumber\n        );\n    };\n\n    // Set \"sessionIdOrders\" by sesstion's userId (sessionIdNumber):\n    getOrdersByUserID = (sessionIdNumber) => {\n        return dataBase.ordersData.filter(\n            (order) => order.userId === sessionIdNumber\n        );\n    };\n\n    getImageByProductId = (productId) => {\n        const productObject = dataBase.productItems.filter(\n            (product) => product.itemId === productId\n        );\n\n        // TEST-TBS - REMOVE IN PROD\n        // console.log(\"productObject: \", productObject);\n        // console.log(\"productObject[0].itemImg: \", productObject[0].itemImg);\n        return productObject[0].itemImg;\n    };\n\n    getPriceByProductId = (productItems, productId) => {\n        const productById = productItems.filter(\n            (product) => product.itemId === productId\n        );\n        // console.log(\"productById: \", productById);\n        // console.log(\"productById[0]: \", productById[0]);\n        return productById[0].itemPrice;\n    };\n\n    getProdIdFromElementId = (idString) => {\n        return idString.split(\"_\")[1];\n    };\n\n    // Get product/object from \"dataBase.productItems\" product ID (itemId):\n    getProductObjectById = (productId) => {\n        // Filter product array => single object array\n        const filteredArray = dataBase.productItems.filter(\n            (product) => product.itemId === productId\n        );\n        if (filteredArray.length === 0) {\n            return null;\n        }\n        // return object\n        return filteredArray[0];\n    };\n\n    getDocIdFromArrayByItemId = (array, itemId) => {\n        const filteredArray = array.filter(\n            (object) => object.itemId === itemId\n        );\n        // TEST-TBS - REMOVE FOR PROD\n        console.log(\"[*** filteredArray ***]: \", filteredArray);\n        if (filteredArray.length === 0) {\n            return null;\n        }\n        return filteredArray[0].docId;\n    };\n\n    callToUpdateCartPriceVariable = () => {\n        console.log(\"Received command to call for Price Variable update\");\n        // TEST-TBD\n        this.updateCartPriceVariable(\n            sessionIdCartItems,\n            sessionIdCartPrice,\n            dataBase.productItems,\n            sessionIdCustomer.custHandlingFee\n        );\n    };\n\n    // MIGHT BE A PART OF MODEL:\n    updateCartPriceVariable = (\n        sessionIdCartItems,\n        sessionIdCartPrice,\n        productItems,\n        handlingRate\n    ) => {\n        let newItemsPrice = 0;\n        let newHandlingFee = 0;\n\n        // TO-DO: CHECK, if it is required here. Delete for now:\n        console.log(\n            \"MODEL - [*** sessionIdCartItems ***]: \",\n            sessionIdCartItems\n        );\n        console.log(\n            \"MODEL - [*** sessionIdCartPrice ***]: \",\n            sessionIdCartPrice\n        );\n        console.log(\n            \"MODEL - [*** dataBase.productItems ***]: \",\n            dataBase.productItems\n        );\n        console.log(\"MODEL - [*** sessionIdCustome ***]: \", sessionIdCustomer);\n\n        for (const item of sessionIdCartItems) {\n            newItemsPrice +=\n                item.qty * this.getPriceByProductId(productItems, item.itemId);\n        }\n\n        newHandlingFee = newItemsPrice * handlingRate;\n\n        sessionIdCartPrice.items = newItemsPrice;\n        sessionIdCartPrice.handling = newHandlingFee;\n        sessionIdCartPrice.total = newItemsPrice + newHandlingFee;\n\n        console.log(\"new sessionIdCartPrice: \", sessionIdCartPrice);\n        console.log(\"for sessionIdCartItems: \", sessionIdCartItems);\n\n        // TO-DO: CHECK, if it is required here. Delete for now:\n        // this.controller.handleViewOfTotalPrceInCart(sessionIdCartPrice.total);\n        return sessionIdCartPrice;\n    };\n\n    // Left Container - Render product items\n    renderProductItemsList = (arrayProducts) => {\n        const productItemsList = document.createElement(\"div\");\n        productItemsList.innerHTML = \"\";\n\n        productItemsList.appendChild(\n            this.viewProducts.createProductItemsList(arrayProducts)\n        );\n        // TEST-TBS - REMOVE FOR PROD\n        // Reset global variable:\n        // productsList.innerHTML = \"\";\n        // productsList.appendChild(productItemsList);\n\n        // TEST-TBS - REMOVE FOR PROD\n        // console.log(\"productsList: \", productsList);\n        // console.log(\"productsList: \", productsList.innerHTML);\n\n        this.clearContainerLeft();\n        this.containerLeftNode.appendChild(productItemsList);\n    };\n\n    // Left Container - Render Order CART\n    renderCartSummary = (sessionIdCartItems) => {\n        let productCardForCartHTML;\n        if (sessionIdCartItems.length === 0) {\n            productCardForCartHTML =\n                this.viewCart.createEmptyCartPage(sessionIdCartItems);\n        } else {\n            productCardForCartHTML =\n                this.viewCart.createCartPage(sessionIdCartItems);\n        }\n\n        this.clearContainerLeft();\n        this.containerLeftNode.appendChild(productCardForCartHTML);\n    };\n\n    // Left Container - Render Product Card\n    renderProductCard = (productObject) => {\n        const detailedCardHTML =\n            this.viewProducts.createDetailedProductCard(productObject);\n        this.clearContainerLeft();\n        this.containerLeftNode.appendChild(detailedCardHTML);\n    };\n\n    // Right Container - Render Cart (no price) and Orders Summaries\n    renderCartAndOrdersSummary = (sessionIdCartItems, sessionIdOrders) => {\n        const cartAndOrdersSummary = document.createElement(\"div\");\n        cartAndOrdersSummary.innerHTML = \"\";\n\n        const cartItems =\n            this.viewCart.createNewCartSummaryNoTotal(sessionIdCartItems);\n\n        const ordersHistory =\n            this.viewOrders.createOrdersHistorySummary(sessionIdOrders);\n\n        // TEST-TBS - REMOVE IN PROD\n        console.log(\"cartSummaryNoTotal: \", cartItems);\n        console.log(\"ordersHistorySummary: \", ordersHistory);\n\n        cartAndOrdersSummary.appendChild(cartItems);\n        cartAndOrdersSummary.appendChild(ordersHistory);\n\n        this.clearContainerRight();\n        this.containerRightNode.appendChild(cartAndOrdersSummary);\n    };\n\n    // Right Container - Render Cart (with price)\n    renderCartSummaryWithPrice = (sessionIdCartItems, sessionIdCartPrice) => {\n        const cartSummaryWrapper = document.createElement(\"div\");\n        cartSummaryWrapper.innerHTML = \"\";\n\n        const cartSummary = this.viewCart.createNewCartSummaryWithPrice(\n            sessionIdCartItems,\n            sessionIdCartPrice\n        );\n\n        cartSummaryWrapper.appendChild(cartSummary);\n\n        // TEST-TBS - REMOVE IN PROD\n        console.log(\"cart Summary with Total: \", cartSummaryWrapper);\n\n        this.clearContainerRight();\n        this.containerRightNode.appendChild(cartSummaryWrapper);\n    };\n\n    // Left Container - Render Checkout Panel\n    renderCheckOutPanel = () => {\n        this.clearContainerLeft();\n\n        const checkOutWrapper = this.viewOrders.createCheckOutWrapper();\n\n        // Second argument (\"true\") is to create \"Update\" button\n        checkOutWrapper.appendChild(\n            this.viewOrders.createBillToAddressContentBlock(\n                sessionIdCartDetails,\n                true\n            )\n        );\n\n        // Second argument (\"true\") is to create \"Update\" button\n        checkOutWrapper.appendChild(\n            this.viewOrders.createPaymentMethodContentBlock(\n                sessionIdCartDetails,\n                true\n            )\n        );\n\n        const checkOutCartWrapper = this.viewOrders.createCheckOutCartWrapper();\n\n        const cartItems = document.createElement(\"div\");\n        cartItems.classList = \"checkout-cart-items\";\n\n        for (const productItem of sessionIdCartItems) {\n            const productData = this.getProductObjectById(productItem.itemId);\n            // Third argument (\"checkout-cart-item\") is a classList to pass to 'div' element\n            // Fourth argument (\"true\") is for not to create a \"qty update\" feature\n            cartItems.appendChild(\n                this.viewCart.createProductCardForCart(\n                    productData,\n                    productItem.qty,\n                    \"checkout-cart-item\",\n                    false\n                )\n            );\n        }\n\n        checkOutCartWrapper.appendChild(cartItems);\n\n        checkOutCartWrapper.appendChild(\n            this.viewOrders.createUpdateButtonBlock()\n        );\n\n        checkOutWrapper.appendChild(checkOutCartWrapper);\n\n        this.containerLeftNode.appendChild(checkOutWrapper);\n    };\n\n    // Right Container - Render Checkout Price Panel\n    renderCheckOutPricePanel = () => {\n        this.clearContainerRight();\n        this.containerRightNode.appendChild(\n            // Second argument (\"true\") is to create \"Place Order\" button\n            this.viewOrders.createOrderSummaryPriceBlock(\n                sessionIdCartPrice,\n                true\n            )\n        );\n    };\n\n    // Support funtions for buttons handler:\n\n    // Handle click of complex element by picking it's parent element class\n    findAncestorByClass = (element, className) => {\n        let currentElement = element;\n        while (\n            currentElement &&\n            !currentElement.classList.contains(className)\n        ) {\n            currentElement = currentElement.parentElement;\n        }\n        return currentElement;\n    };\n\n    // \"< Back to Products\" button\n    handleGotoProductsBtn = () => {\n        this.renderProductItemsList(dataBase.productItems);\n        // TO-DO: CHECK, if it is required here. Delete for now:\n        this.renderCartAndOrdersSummary(sessionIdCartItems, sessionIdOrders);\n    };\n\n    // \"Add to Cart\" button at detailed product card (page)\n    handleAddToCartBtn = (element) => {\n        // TEST-TBS REMOVE IN PROD\n        console.log(`TO-DO: Add product with ID ${element.id} to cart.`);\n        // Get product/object ID (itemId) from DOM element ID (string)\n        const itemId = this.getProdIdFromElementId(element.id);\n\n        // Check if product already in user's cart\n        const isInTheCart = this.getDocIdFromArrayByItemId(\n            sessionIdCartItems,\n            itemId\n        );\n\n        if (isInTheCart) {\n            this.handleQtyChangeBtn(element, 1);\n        } else {\n            this.addProduct(itemId, sessionIdNumber);\n        }\n\n        this.renderCartAndOrdersSummary(sessionIdCartItems, sessionIdOrders);\n    };\n\n    // \"Go to Cart\" button at right panel\n    handleGotoCartBtn = () => {\n        console.log(\"Received command to display CART.\");\n        // TEST-TBD\n        this.updateCartPriceVariable(\n            sessionIdCartItems,\n            sessionIdCartPrice,\n            dataBase.productItems,\n            sessionIdCustomer.custHandlingFee\n        );\n        this.renderCartSummary(sessionIdCartItems);\n        this.renderCartSummaryWithPrice(sessionIdCartItems, sessionIdCartPrice);\n    };\n\n    // \"Proceed to checkout\" button at right panel\n    handleProceedToCheckoutBtn = () => {\n        console.log(\"Received command PROCEED TO CHECKOUT\");\n        this.renderCheckOutPanel();\n        this.renderCheckOutPricePanel();\n    };\n\n    // Product card as \"button\" at main page\n    handleProductItem = (element) => {\n        // TEST-TBS REMOVE IN PROD\n        console.log(\"Display CARD for product ID: \", element.id);\n\n        const productIdToDisplay = this.getProdIdFromElementId(element.id);\n        const productToDisplay = this.getProductObjectById(productIdToDisplay);\n        this.renderProductCard(productToDisplay);\n\n        // TO-DO: CHECK, if it is required here. Delete for now:\n        // this.renderCartAndOrdersSummary(sessionIdCartItems, sessionIdOrders);\n    };\n\n    // TO-DO: Create ORDER POP UP:\n    handleDisplayHistoricalOrder = (element) => {\n        // TEST-TBS REMOVE IN PROD\n        console.log(\"Display ORDER with ID: \", element.id);\n    };\n\n    handleQtyChangeBtn = (elementDOM, adder) => {\n        const itemId = this.getProdIdFromElementId(elementDOM.id);\n        // TEST-TBS REMOVE IN PROD\n        console.log(\n            \"Function: 'handleQtyChangeBtn()': update QTY of prod ID: \",\n            elementDOM.id\n        );\n        console.log(\"'sessionIdCartItems': \", sessionIdCartItems);\n        console.log(\"itemId: \", itemId);\n\n        // product/object to update:\n        const productToUpdate = JSON.parse(\n            JSON.stringify(\n                sessionIdCartItems.find((product) => product.itemId === itemId)\n            )\n        );\n\n        if (!productToUpdate) {\n            console.log(\"Product/object not found\");\n            return;\n        }\n\n        // remove product from array:\n\n        const filteredsessionIdCartItems = sessionIdCartItems.filter(\n            (product) => product.itemId !== itemId\n        );\n\n        if (productToUpdate.qty + adder > 0) {\n            this.updateProduct(\n                filteredsessionIdCartItems,\n                productToUpdate,\n                adder\n            );\n            this.updateCartDOM(itemId, productToUpdate);\n        } else {\n            this.deleteProduct(filteredsessionIdCartItems, productToUpdate);\n            this.handleGotoCartBtn();\n        }\n    };\n\n    addProduct = (itemId, userId) => {\n        const newProductToCart = {\n            docId: this.handleNewIdGeneration(),\n            itemId: itemId,\n            qty: 1,\n            userId: userId,\n        };\n\n        console.log(\n            \"MODEL: try to add to database.cartsData a [*** newProductToCart *** ]: \",\n            newProductToCart\n        );\n        this.handleAddDocToFirestore(\"cartsData\", newProductToCart);\n\n        sessionIdCartItems.push(newProductToCart);\n        console.log(\n            \"Updated [*** sessionIdCartItems ***]: \",\n            sessionIdCartItems\n        );\n    };\n\n    updateProduct = (filteredsessionIdCartItems, productToUpdate, adder) => {\n        // Modify product/object\n        productToUpdate.qty += adder;\n\n        // Add product back to array\n        filteredsessionIdCartItems.push(productToUpdate);\n\n        // Update Firestore\n        this.handleUpdateDocInFirestore(\"cartsData\", productToUpdate);\n\n        // Update global variable\n        sessionIdCartItems = filteredsessionIdCartItems;\n    };\n\n    deleteProduct = (filteredsessionIdCartItems, productToUpdate) => {\n        // Delete product from Firestore\n        this.handleDeleteDocFromFirestore(\"cartsData\", productToUpdate.docId);\n\n        // Update global variable\n        sessionIdCartItems = filteredsessionIdCartItems;\n    };\n\n    updateCartDOM = (itemId, productToUpdate) => {\n        //  update/re-render 'qty' in user's cart (DOM)\n        this.handleViewOfPartQty(itemId, productToUpdate.qty);\n        //  update total price 'sessionIdCartPrice' (global variable)\n        this.callToUpdateCartPriceVariable();\n        //  update/re-render 'total price' in user's cart (DOM)\n        this.handleViewOfTotalPrceInCart(sessionIdCartPrice.total);\n    };\n\n    // Update product QTY in CART in 2 locations: price and selector\n    handleViewOfPartQty = (itemId, newQty) => {\n        // TEST-TBS REMOVE IN PROD\n        console.log(\"Got comand to update product qty with:\");\n        console.log(\"Product ID: \", itemId);\n        console.log(\"New QTY: \", newQty);\n\n        const productObject = this.getProductObjectById(itemId);\n        this.viewCart.updatePartQuantity(productObject, newQty);\n    };\n\n    // Update total price (items + handling) in menu (right container)\n    handleViewOfTotalPrceInCart = (newPrice) => {\n        this.viewCart.updateTotalPrice(newPrice);\n    };\n\n    handleButtonsClickLeft = (event) => {\n        const target = event.target;\n\n        // \"< Back to Products\" button\n        if (target.classList.contains(\"goto-products-btn\")) {\n            this.handleGotoProductsBtn();\n            return;\n        }\n\n        // \"Add to Cart\" button at detailed product card (page)\n        const addToCartBtn = target.closest(\".product-card__add-to-cart-btn\");\n        if (addToCartBtn) {\n            this.handleAddToCartBtn(addToCartBtn);\n            return;\n        }\n\n        // \"Add to Cart\" button at short product card (main page)\n        const priceBtnElement = this.findAncestorByClass(\n            target,\n            \"product-item__content_price-btn\"\n        );\n        if (priceBtnElement) {\n            this.handleAddToCartBtn(priceBtnElement);\n            return;\n        }\n\n        // Product card as \"button\" at main page\n        const productItemElement = this.findAncestorByClass(\n            target,\n            \"product-item\"\n        );\n        if (productItemElement) {\n            this.handleProductItem(productItemElement);\n        }\n\n        // Qty deduct button at Cart page\n        if (target.classList.contains(\"cart-element__qty-mod_deduct-btn\")) {\n            this.handleQtyChangeBtn(target, -1);\n            return;\n        }\n\n        // Qty add button at Cart page\n        if (target.classList.contains(\"cart-element__qty-mod_add-btn\")) {\n            this.handleQtyChangeBtn(target, 1);\n            return;\n        }\n    };\n\n    handleButtonsClickRight = (event) => {\n        const target = event.target;\n        // console.log(\"clicked element with class: \", target.classList);\n        // console.log(\"clicked element with ID: \", target.id);\n\n        // Product card as \"button\" at right panel\n        if (target.classList.contains(\"cart-link-btn\")) {\n            this.handleProductItem(target);\n        }\n\n        // History order number as \"button\" at right panel\n        if (target.classList.contains(\"order-number-btn\")) {\n            this.handleDisplayHistoricalOrder(target);\n        }\n\n        // \"Go to cart\" button at right panel\n        const goToCartBtn = this.findAncestorByClass(target, \"cart-goto-btn\");\n        // Alternative command:\n        // const goToCartBtn = target.closest(\".cart-goto-btn\");\n        if (goToCartBtn) {\n            this.handleGotoCartBtn(sessionIdCartItems);\n        }\n\n        // \"Proceed to checkout\" button at right panel\n        const proceedToCheckoutBtn = this.findAncestorByClass(\n            target,\n            \"cart-checkout-btn\"\n        );\n        if (proceedToCheckoutBtn) {\n            // TO-DO\n            this.handleProceedToCheckoutBtn();\n        }\n    };\n\n    attachEventListenrs = () => {\n        this.containerLeftNode.addEventListener(\n            \"click\",\n            this.handleButtonsClickLeft\n        );\n\n        this.containerRightNode.addEventListener(\n            \"click\",\n            this.handleButtonsClickRight\n        );\n    };\n\n    // Database support functions\n    handleAddDocToFirestore = (collectionName, documentObject) => {\n        console.log(\n            \"Controller: got a requst to add [object]: \",\n            documentObject\n        );\n        console.log(\"to [collction]: \", collectionName);\n        this.modelFirebase.addDocToFirestore(collectionName, documentObject);\n    };\n\n    handleUpdateDocInFirestore = (collectionName, documentObject) => {\n        console.log(\n            \"Controller: got a requst update [object]: \",\n            documentObject\n        );\n        console.log(\"in [collction]: \", collectionName);\n        this.modelFirebase.updateDocInFirestore(collectionName, documentObject);\n    };\n\n    handleDeleteDocFromFirestore = (collectionName, documentId) => {\n        console.log(\n            \"Controller: got a requst to delete [object]: \",\n            documentId\n        );\n        console.log(\"from [collection]: \", collectionName);\n        this.modelFirebase.deleteDocFromFirestore(collectionName, documentId);\n    };\n}\n","import iconAddOrder from \"../../other_assets/icon-add-order.png\";\nimport iconCart from \"../../other_assets/icon-cart.png\";\n// import iconCc from \"../../other_assets/icon-cc.png\";\n// import iconOrder from \"../../other_assets/icon-order.png\";\n\nexport class ViewProducts {\n    constructor(controller) {\n        this.controller = controller;\n    }\n    // FOR TEST AND TBS - REMOVE FOR PROD\n    checkModuleLinkage = () => {\n        console.log(\"HELLO, ViewProducts is connected!\");\n    };\n\n    createProductItemCard = (productObject) => {\n        // Create elements\n        const productItemDiv = document.createElement(\"div\");\n        productItemDiv.classList = \"product-item\";\n        productItemDiv.id = `product-card_${productObject.itemId}`;\n\n        const image = document.createElement(\"img\");\n        image.classList = \"product-item__img\";\n        image.src = this.controller.getUrlByNameLocal(productObject.itemImg);\n\n        const contentDiv = document.createElement(\"div\");\n        contentDiv.classList = \"product-item__content\";\n\n        const contentName = document.createElement(\"h3\");\n        contentName.classList = \"product-item__content_desc\";\n        contentName.textContent = productObject.itemName;\n\n        const partNumber = document.createElement(\"p\");\n        partNumber.classList = \"product-item__content_part-number\";\n        partNumber.textContent = productObject.itemPN;\n\n        const priceBlockDiv = document.createElement(\"div\");\n        priceBlockDiv.classList = \"product-item__content_price-block\";\n\n        const priceElement = document.createElement(\"h3\");\n        priceElement.classList = \"product-item__content_price\";\n        priceElement.textContent = `$${productObject.itemPrice}`;\n\n        const priceBtn = document.createElement(\"button\");\n        priceBtn.classList = \"product-item__content_price-btn\";\n        priceBtn.id = `product-btn_${productObject.itemId}`;\n\n        const priceBtnImg = document.createElement(\"img\");\n        priceBtnImg.classList = \"product-item__content_price-btn-img\";\n        priceBtnImg.src = iconCart;\n        priceBtnImg.alt = \"Select\";\n\n        // Append elemens to respective parents\n        priceBtn.appendChild(priceBtnImg);\n        priceBlockDiv.appendChild(priceElement);\n        priceBlockDiv.appendChild(priceBtn);\n\n        contentDiv.appendChild(contentName);\n        contentDiv.appendChild(partNumber);\n        contentDiv.appendChild(priceBlockDiv);\n\n        productItemDiv.appendChild(image);\n        productItemDiv.appendChild(contentDiv);\n\n        return productItemDiv;\n    };\n\n    // Left Container - Render product items\n    createProductItemsList = (arrayProducts) => {\n        // Clear container\n        // this.controller.clearContainerLeft();\n\n        // Create product list container\n        const productList = document.createElement(\"div\");\n        productList.classList = \"product-list\";\n\n        // Look through array to create item cards and add to products list\n        for (const productObject of arrayProducts) {\n            const newProductItemCard =\n                this.createProductItemCard(productObject);\n            productList.appendChild(newProductItemCard);\n        }\n\n        // Render product list container\n        // this.controller.containerLeftNode.appendChild(productList);\n\n        console.log(\"productList: \", productList);\n        return productList;\n    };\n\n    createDetailedProductCard = (productObject) => {\n        console.log(\"productObject: \", productObject);\n\n        // Create elements\n        const productCardMain = document.createElement(\"div\");\n        productCardMain.classList = \"product-card\";\n        productCardMain.id = `prodCard_${productObject.itemId}`;\n\n        const goBackBtn = document.createElement(\"button\");\n        goBackBtn.classList = \"goto-products-btn\";\n        goBackBtn.innerText = \"< Back to Products\";\n\n        const cardTopWrapper = document.createElement(\"div\");\n        cardTopWrapper.classList = \"product-card__top-wrapper\";\n\n        const cardImageWrapper = document.createElement(\"div\");\n        cardImageWrapper.classList = \"product-card__img-wrapper\";\n\n        const image = document.createElement(\"img\");\n        image.classList = \"product-card__img\";\n        image.src = this.controller.getUrlByNameLocal(productObject.itemImg);\n\n        const cardSummaryWrapper = document.createElement(\"div\");\n        cardSummaryWrapper.classList = \"product-card__summary-wrapper\";\n\n        const cardSummary = document.createElement(\"div\");\n        cardSummary.classList = \"product-card__summary\";\n\n        const productName = document.createElement(\"h1\");\n        productName.classList = \"product-card__product-name\";\n        productName.textContent = productObject.itemName;\n\n        const partNumberSupport = document.createElement(\"p\");\n        partNumberSupport.classList = \"product-card__support-txt\";\n        partNumberSupport.textContent = \"Part Number: \";\n\n        const partNumber = document.createElement(\"h3\");\n        partNumber.classList = \"product-card__part-number\";\n        partNumber.textContent = productObject.itemPN;\n\n        const priceElementSupport = document.createElement(\"p\");\n        priceElementSupport.classList = \"product-card__support-txt\";\n        priceElementSupport.textContent = \"Price Per Unit: \";\n\n        const priceElement = document.createElement(\"h3\");\n        priceElement.classList = \"product-card__product-price\";\n        priceElement.textContent = `${productObject.itemCurrency} ${productObject.itemPrice}`;\n\n        const partConditionSupport = document.createElement(\"p\");\n        partConditionSupport.classList = \"product-card__support-txt\";\n        partConditionSupport.textContent = \"Condition: \";\n\n        const partCondition = document.createElement(\"h3\");\n        partCondition.classList = \"product-card__condition\";\n        partCondition.textContent = productObject.itemCondition;\n\n        const partCertificationSupport = document.createElement(\"p\");\n        partCertificationSupport.classList = \"product-card__support-txt\";\n        partCertificationSupport.textContent = \"Certification: \";\n\n        const partCertification = document.createElement(\"h3\");\n        partCertification.classList = \"product-card__certification\";\n        partCertification.textContent = productObject.itemCertification;\n\n        const partAvailabilitySupport = document.createElement(\"p\");\n        partAvailabilitySupport.classList = \"product-card__support-txt\";\n        partAvailabilitySupport.textContent = \"Availability: \";\n\n        const partAvailability = document.createElement(\"h3\");\n        partAvailability.classList = \"product-card__availability\";\n        partAvailability.textContent = productObject.itemLeadTime;\n\n        const addToCartBtn = document.createElement(\"button\");\n        addToCartBtn.classList = \"product-card__add-to-cart-btn\";\n        addToCartBtn.id = `add-to-cart-btn_${productObject.itemId}`;\n\n        const addToCartBtnImg = document.createElement(\"img\");\n        addToCartBtnImg.src = iconAddOrder;\n        addToCartBtnImg.alt = \"Select\";\n\n        const textSpan = document.createElement(\"span\");\n        textSpan.innerText = \" Add to Cart\";\n\n        const cardBottomWrapper = document.createElement(\"div\");\n        cardBottomWrapper.classList = \"product-card__bottom-wrapper\";\n\n        const cardDescription = document.createElement(\"h3\");\n        cardDescription.classList = \"product-card__description\";\n        cardDescription.textContent = \"Product Description\";\n\n        const cardDescriptionText = document.createElement(\"p\");\n        cardDescriptionText.classList = \"product-card__description-text\";\n        cardDescriptionText.textContent = productObject.itemDescription;\n\n        // TO-DO STARTED\n        cardImageWrapper.appendChild(image);\n\n        cardSummary.appendChild(productName);\n        cardSummary.appendChild(partNumberSupport);\n        cardSummary.appendChild(partNumber);\n        cardSummary.appendChild(priceElementSupport);\n        cardSummary.appendChild(priceElement);\n        cardSummary.appendChild(partConditionSupport);\n        cardSummary.appendChild(partCondition);\n        cardSummary.appendChild(partCertificationSupport);\n        cardSummary.appendChild(partCertification);\n        cardSummary.appendChild(partAvailabilitySupport);\n        cardSummary.appendChild(partAvailability);\n\n        addToCartBtn.appendChild(addToCartBtnImg);\n        addToCartBtn.appendChild(textSpan);\n\n        cardSummaryWrapper.appendChild(cardSummary);\n        cardSummaryWrapper.appendChild(addToCartBtn);\n\n        cardTopWrapper.appendChild(cardImageWrapper);\n        cardTopWrapper.appendChild(cardSummaryWrapper);\n\n        cardBottomWrapper.appendChild(cardDescription);\n        cardBottomWrapper.appendChild(cardDescriptionText);\n\n        productCardMain.appendChild(goBackBtn);\n        productCardMain.appendChild(cardTopWrapper);\n        productCardMain.appendChild(cardBottomWrapper);\n\n        // TEST-TBS REMOVE FOR PROD\n        // console.log(\"productCardMain: \", productCardMain);\n\n        return productCardMain;\n    };\n}\n","module.exports = require('./helpers/bundle-url').getBundleURL('ceDhw') + require('./helpers/bundle-manifest').resolve(\"4M8Gf\");","module.exports = require('./helpers/bundle-url').getBundleURL('ceDhw') + require('./helpers/bundle-manifest').resolve(\"kSZwU\");","// import iconAddOrder from \"../../other_assets/icon-add-order.png\";\n// import iconCart from \"../../other_assets/icon-cart.png\";\n// import iconCc from \"../../other_assets/icon-cc.png\";\nimport iconOrder from \"../../other_assets/icon-order.png\";\n\nexport class ViewCart {\n    constructor(controller) {\n        this.controller = controller;\n    }\n    checkModuleLinkage = () => {\n        console.log(\"HELLO, ViewCart is connected!\");\n    };\n\n    // Right Container - Create Cart Title\n    createCartSummaryTitle = () => {\n        const title = document.createElement(\"h2\");\n        title.classList = \"cart-links-title\";\n        title.innerText = \"Cart\";\n        return title;\n    };\n\n    // Right Container - Create Cart Item Button\n    createCartItemButton = (imageURL, productId) => {\n        const button = document.createElement(\"button\");\n        button.classList = \"cart-link-btn\";\n        button.id = `cart-link-btn_${productId}`;\n        button.style = `background-image: url(${imageURL});`;\n        return button;\n    };\n\n    // Right Container - Create Cart Products Icons Block\n    createCartProductItemsBlock = (sessionIdCart) => {\n        const wrapper = document.createElement(\"div\");\n        wrapper.classList = \"cart-links-wrapper\";\n\n        if (sessionIdCart.length === 0) {\n            const emptyCartMessage = document.createElement(\"p\");\n            emptyCartMessage.classList = \"cart-links-empty-msg\";\n            emptyCartMessage.innerText = \"Cart is empty\";\n\n            wrapper.appendChild(emptyCartMessage);\n        } else {\n            // Right Container - Render Cart Icons\n            // console.log(\"Action: Right Container - Render Cart Icons\");\n            for (const productObject of sessionIdCart) {\n                // TEST-TBS - REMOVE IN PROD\n                // console.log(\"productObject: \", productObject);\n                // console.log(\"productObject.itemId: \", productObject.itemId);\n\n                const productImage = this.controller.getImageByProductId(\n                    productObject.itemId\n                );\n\n                // FOR TEST-TBS\n                // console.log(\"productImage: \", productImage);\n\n                const imageURL =\n                    this.controller.getUrlByNameLocal(productImage);\n\n                // FOR TEST-TBS\n                // console.log(\"imageURL: \", imageURL);\n\n                const cartItem = this.createCartItemButton(\n                    imageURL,\n                    productObject.itemId\n                );\n                wrapper.appendChild(cartItem);\n            }\n        }\n\n        return wrapper;\n    };\n\n    // Right Container - Create Go-To-Cart Button\n    createGoToCartButton = () => {\n        const wrapper = document.createElement(\"div\");\n        wrapper.classList = \"cart-goto-btn-wrapper\";\n\n        const button = document.createElement(\"button\");\n        button.classList = \"cart-goto-btn\";\n\n        const image = document.createElement(\"img\");\n        image.src = iconOrder;\n        image.alt = \"Select\";\n\n        const textSpan = document.createElement(\"span\");\n        textSpan.innerText = \" Cart\";\n\n        // Append elemens to respective parents\n        button.appendChild(image);\n        button.appendChild(textSpan);\n        wrapper.appendChild(button);\n\n        return wrapper;\n    };\n\n    // Right Container - Create \"Proceed To Checkout\" button\n    createProceedToCheckoutBtn = () => {\n        const wrapper = document.createElement(\"div\");\n        wrapper.classList = \"cart-checkout-btn-wrapper\";\n\n        const button = document.createElement(\"button\");\n        button.classList = \"cart-checkout-btn\";\n\n        const image = document.createElement(\"img\");\n        image.src = iconOrder;\n        image.alt = \"Checkout\";\n\n        const textSpan = document.createElement(\"span\");\n        textSpan.innerText = \" Checkout\";\n\n        // Append elemens to respective parents\n        button.appendChild(image);\n        button.appendChild(textSpan);\n        wrapper.appendChild(button);\n\n        return wrapper;\n    };\n\n    // Right Container - create total amount block\n    createTotalAmountBlock = (sessionIdCartPrice) => {\n        const wrapper = document.createElement(\"div\");\n        wrapper.classList = \"cart-total-amount-wrapper\";\n\n        const totalAmount = document.createElement(\"p\");\n        totalAmount.classList = \"cart-total-amount\";\n        totalAmount.id = \"cart-total-amount\";\n        totalAmount.innerText = `Total: $${sessionIdCartPrice.total}`;\n\n        wrapper.appendChild(totalAmount);\n\n        return wrapper;\n    };\n\n    // Right Container - Render Cart Summaary\n    createNewCartSummaryNoTotal = (sessionIdCart) => {\n        // Create \"Cart\" title\n        const cartSummaryBlock = this.createCartSummaryTitle();\n\n        // Create product item \"buttons\" block\n        const cartProductItemsBlock =\n            this.createCartProductItemsBlock(sessionIdCart);\n\n        cartSummaryBlock.appendChild(cartProductItemsBlock);\n\n        // Create \"Go To Cart\" button\n        const button = this.createGoToCartButton();\n        cartSummaryBlock.appendChild(button);\n\n        // TEST-TBS - REMOVE FO PROD\n        // console.log(\"cartSummaryBlock: \", cartSummaryBlock);\n\n        return cartSummaryBlock;\n    };\n\n    // Right Container - Render Cart Summaary\n    createNewCartSummaryWithPrice = (sessionIdCart, sessionIdCartPrice) => {\n        // Create \"Cart\" title\n        const cartSummaryBlock = this.createCartSummaryTitle();\n\n        // Create product item \"buttons\" block\n        const cartProductItemsBlock =\n            this.createCartProductItemsBlock(sessionIdCart);\n\n        // Create total amount block\n        const cartTotalAmount = this.createTotalAmountBlock(sessionIdCartPrice);\n\n        // Create \"Proceed to Checkout\" button\n        const button = this.createProceedToCheckoutBtn();\n\n        cartSummaryBlock.appendChild(cartProductItemsBlock);\n        cartSummaryBlock.appendChild(cartTotalAmount);\n        cartSummaryBlock.appendChild(button);\n\n        // TEST-TBS - REMOVE FOR PROD\n        // console.log(\"cartSummaryBlock: \", cartSummaryBlock);\n\n        return cartSummaryBlock;\n    };\n\n    // Left Container - Create Product Item Card block\n    // Third argument (\"customClassList\") is a classList to pass to 'div' element\n    // Fourth argument (\"updateBlock\") is to create an \"update qty\" feature\n    createProductCardForCart = (\n        productObject,\n        qtyInCart,\n        customClassList,\n        updateBlock\n    ) => {\n        // Create elements\n        const productCardMain = document.createElement(\"div\");\n        productCardMain.classList = customClassList;\n        // TO-DO : verify if \"itemId\" is better to use instead of \"docId\" here:\n        productCardMain.id = `cart-item_${productObject.itemId}`;\n\n        const cardImageWrapper = document.createElement(\"div\");\n        cardImageWrapper.classList = \"cart-item__img-wrapper\";\n\n        const image = document.createElement(\"img\");\n        image.classList = \"cart-item__img\";\n        image.src = this.controller.getUrlByNameLocal(productObject.itemImg);\n\n        const cardSummaryWrapper = document.createElement(\"div\");\n        cardSummaryWrapper.classList = \"cart-item__summary-wrapper\";\n\n        const cardSummary = document.createElement(\"div\");\n        cardSummary.classList = \"cart-item__summary\";\n\n        const cardNameWrapper = document.createElement(\"div\");\n        cardNameWrapper.classList = \"cart-item__element-wrapper\";\n\n        const productName = document.createElement(\"h1\");\n        productName.classList = \"cart-item__product-name\";\n        productName.textContent = productObject.itemName;\n\n        const partNumberWrapper = document.createElement(\"div\");\n        partNumberWrapper.classList = \"cart-item__element-wrapper\";\n\n        const partNumberSupport = document.createElement(\"p\");\n        partNumberSupport.classList = \"cart-item__support-txt\";\n        partNumberSupport.textContent = \"Part Number: \";\n\n        const partNumber = document.createElement(\"h3\");\n        partNumber.classList = \"cart-item__part-number\";\n        partNumber.textContent = productObject.itemPN;\n\n        const partConditionWrapper = document.createElement(\"div\");\n        partConditionWrapper.classList = \"cart-item__element-wrapper\";\n\n        const partConditionSupport = document.createElement(\"p\");\n        partConditionSupport.classList = \"cart-item__support-txt\";\n        partConditionSupport.textContent = \"Condition: \";\n\n        const partCondition = document.createElement(\"h3\");\n        partCondition.classList = \"cart-item__condition\";\n        partCondition.textContent = productObject.itemCondition;\n\n        const partCertificationWrapper = document.createElement(\"div\");\n        partCertificationWrapper.classList = \"cart-item__element-wrapper\";\n\n        const partCertificationSupport = document.createElement(\"p\");\n        partCertificationSupport.classList = \"cart-item__support-txt\";\n        partCertificationSupport.textContent = \"Certification: \";\n\n        const partCertification = document.createElement(\"h3\");\n        partCertification.classList = \"cart-item__certification\";\n        partCertification.textContent = productObject.itemCertification;\n\n        const partAvailabilityWrapper = document.createElement(\"div\");\n        partAvailabilityWrapper.classList = \"cart-item__element-wrapper\";\n\n        const partAvailabilitySupport = document.createElement(\"p\");\n        partAvailabilitySupport.classList = \"cart-item__support-txt\";\n        partAvailabilitySupport.textContent = \"Availability: \";\n\n        const partAvailability = document.createElement(\"h3\");\n        partAvailability.classList = \"cart-item__availability\";\n        partAvailability.textContent = productObject.itemLeadTime;\n\n        const priceElementWrapper = document.createElement(\"div\");\n        priceElementWrapper.classList = \"cart-item__price-qty\";\n\n        const priceElement = document.createElement(\"h3\");\n        priceElement.classList = \"cart-item__product-price\";\n        priceElement.setAttribute(\"data-price-qty-id\", productObject.itemId);\n        priceElement.innerText = `${productObject.itemCurrency} ${productObject.itemPrice} x ${qtyInCart}`;\n\n        const qtyModifierWrapper = document.createElement(\"div\");\n        qtyModifierWrapper.classList = \"cart-element__qty-mod_wrapper\";\n        qtyModifierWrapper.id = `qty-mod_${productObject.itemId}`;\n\n        const qtyModifierDeductBtn = document.createElement(\"button\");\n        qtyModifierDeductBtn.classList = \"cart-element__qty-mod_deduct-btn\";\n        qtyModifierDeductBtn.innerText = \" - \";\n        qtyModifierDeductBtn.id = `qty-deduct-btn_${productObject.itemId}`;\n\n        const qtyModifierIndicator = document.createElement(\"p\");\n        qtyModifierIndicator.classList = \"cart-element__qty-mod_qty\";\n        qtyModifierIndicator.id = `qty-indicator_${productObject.itemId}`;\n        qtyModifierIndicator.innerText = qtyInCart;\n\n        const qtyModifierAddBtn = document.createElement(\"button\");\n        qtyModifierAddBtn.classList = \"cart-element__qty-mod_add-btn\";\n        qtyModifierAddBtn.innerText = \" + \";\n        qtyModifierAddBtn.id = `qty-add-btn_${productObject.itemId}`;\n\n        // Assembly HTML code:\n\n        cardImageWrapper.appendChild(image);\n\n        cardNameWrapper.appendChild(productName);\n        cardSummary.appendChild(cardNameWrapper);\n\n        partNumberWrapper.appendChild(partNumberSupport);\n        partNumberWrapper.appendChild(partNumber);\n        cardSummary.appendChild(partNumberWrapper);\n\n        partConditionWrapper.appendChild(partConditionSupport);\n        partConditionWrapper.appendChild(partCondition);\n        cardSummary.appendChild(partConditionWrapper);\n\n        partCertificationWrapper.appendChild(partCertificationSupport);\n        partCertificationWrapper.appendChild(partCertification);\n        cardSummary.appendChild(partCertificationWrapper);\n\n        partAvailabilityWrapper.appendChild(partAvailabilitySupport);\n        partAvailabilityWrapper.appendChild(partAvailability);\n        cardSummary.appendChild(partAvailabilityWrapper);\n\n        if (updateBlock) {\n            qtyModifierWrapper.appendChild(qtyModifierDeductBtn);\n            qtyModifierWrapper.appendChild(qtyModifierIndicator);\n            qtyModifierWrapper.appendChild(qtyModifierAddBtn);\n        }\n\n        priceElementWrapper.appendChild(priceElement);\n        priceElementWrapper.appendChild(qtyModifierWrapper);\n        cardSummary.appendChild(priceElementWrapper);\n\n        cardSummaryWrapper.appendChild(cardSummary);\n\n        productCardMain.appendChild(cardImageWrapper);\n        productCardMain.appendChild(cardSummaryWrapper);\n\n        // console.log(\"productCardMain: \", productCardMain);\n\n        return productCardMain;\n    };\n\n    // Left Container - Create Cart Page\n    createCartPage = (sessionCart) => {\n        const cartWrapper = document.createElement(\"div\");\n        cartWrapper.classList = \"cart-wrapper\";\n\n        const goBackBtn = document.createElement(\"button\");\n        goBackBtn.classList = \"goto-products-btn\";\n        goBackBtn.innerText = \"< Back to Products\";\n\n        const cartTitle = document.createElement(\"h2\");\n        cartTitle.classList = \"cart-title\";\n        cartTitle.innerText = \"Cart\";\n\n        const cartItemsWrapper = document.createElement(\"div\");\n        cartItemsWrapper.classList = \"cart-items-wrapper\";\n\n        for (const productItem of sessionCart) {\n            // console.log(\n            //     \"productItem to pass to getProductObjectById() function: \",\n            //     productItem\n            // );\n            // console.log(\"productItem.itemID: \", productItem.itemId);\n            const productData = this.controller.getProductObjectById(\n                productItem.itemId\n            );\n            // console.log(\"productData: \", productData);\n\n            // Third argument (\"cart-item\") is a classList to pass to 'div' element\n            // Fourth argument (\"true\") is to create an \"update\" feature\n            cartItemsWrapper.appendChild(\n                this.createProductCardForCart(\n                    productData,\n                    productItem.qty,\n                    \"cart-item\",\n                    true\n                )\n            );\n        }\n\n        cartWrapper.appendChild(goBackBtn);\n        cartWrapper.appendChild(cartTitle);\n        cartWrapper.appendChild(cartItemsWrapper);\n\n        return cartWrapper;\n    };\n\n    // Left Container - Create Empty Cart Page\n    createEmptyCartPage = () => {\n        const cartWrapper = document.createElement(\"div\");\n        cartWrapper.classList = \"cart-wrapper\";\n\n        const goBackBtn = document.createElement(\"button\");\n        goBackBtn.classList = \"goto-products-btn\";\n        goBackBtn.innerText = \"< Back to Products\";\n\n        const cartTitle = document.createElement(\"h2\");\n        cartTitle.classList = \"cart-title\";\n        cartTitle.innerText = \"Cart is empty\";\n\n        cartWrapper.appendChild(goBackBtn);\n        cartWrapper.appendChild(cartTitle);\n\n        return cartWrapper;\n    };\n\n    // Update total price (items + handling) in menu (right container)\n    updatePartQuantity = (productObject, newQty) => {\n        // Find \"price x qty\" element by attribute:\n        const priceQtyElement = document.querySelector(\n            `[data-price-qty-id=\"${productObject.itemId}\"]`\n        );\n        if (priceQtyElement) {\n            priceQtyElement.innerText = `${productObject.itemCurrency} ${productObject.itemPrice} x ${newQty}`;\n        }\n\n        // Find \"qty indicator\" element by id:\n        const qtyIndicator = document.getElementById(\n            `qty-indicator_${productObject.itemId}`\n        );\n        if (qtyIndicator) {\n            qtyIndicator.innerText = newQty;\n        }\n    };\n\n    // Update total price (items + handling) in menu (right container)\n    updateTotalPrice = (newPrice) => {\n        // Find \"Total price\" element by ID\n        const totalPriceElement = document.getElementById(\"cart-total-amount\");\n        if (totalPriceElement) {\n            totalPriceElement.innerText = `Total: $${newPrice}`;\n        }\n    };\n}\n","module.exports = require('./helpers/bundle-url').getBundleURL('ceDhw') + require('./helpers/bundle-manifest').resolve(\"8HtV0\");","export class ViewOrders {\n    constructor(controller) {\n        this.controller = controller;\n    }\n    checkModuleLinkage = () => {\n        console.log(\"HELLO, ViewOrders is connected!\");\n    };\n\n    // Right Container - Create Orders History Title\n    createOrdersHistoryTitle = () => {\n        const title = document.createElement(\"h2\");\n        title.classList = \"order-list-title\";\n        title.innerText = \"Orders\";\n        return title;\n    };\n\n    // Right Container - Render Order Links\n    createOrdersHistorySummary = (sessionIdOrders) => {\n        const ordersHistorySummary = this.createOrdersHistoryTitle();\n\n        const ordersWrapper = document.createElement(\"div\");\n        ordersWrapper.classList = \"orders-list\";\n        for (const order of sessionIdOrders) {\n            const orderBtn = document.createElement(\"button\");\n            orderBtn.classList = \"order-number-btn\";\n            orderBtn.id = `order_${order.orderId}`;\n            orderBtn.innerText = order.orderId;\n\n            ordersWrapper.appendChild(orderBtn);\n        }\n\n        ordersHistorySummary.appendChild(ordersWrapper);\n\n        // TEST-TBS - REMOVE FO PROD\n        // console.log(\"ordersHistorySummary: \", ordersHistorySummary);\n\n        return ordersHistorySummary;\n    };\n\n    // Right Container - Create OrderSummaryContentBlock\n    createOrderSummaryPriceBlock = (sessionIdCartPrice, orderButton) => {\n        const orderSummary = document.createElement(\"div\");\n        orderSummary.classList = \"order-summary\";\n\n        const title = document.createElement(\"h3\");\n        title.classList = \"order-summary-title\";\n        title.innerText = \"Order Summary\";\n\n        const itemsWrapper = document.createElement(\"div\");\n        itemsWrapper.classList = \"flex-between\";\n\n        const itemsTitle = document.createElement(\"p\");\n        itemsTitle.innerText = \"Items:\";\n\n        const itemsAmount = document.createElement(\"p\");\n        itemsAmount.innerText = `$${sessionIdCartPrice.items}`;\n\n        const handlingWrapper = document.createElement(\"div\");\n        handlingWrapper.classList = \"flex-between\";\n\n        const handlingTitle = document.createElement(\"p\");\n        handlingTitle.innerText = \"Handling:\";\n\n        const handlingAmount = document.createElement(\"p\");\n        handlingAmount.innerText = `$${sessionIdCartPrice.handling}`;\n\n        const totalWrapper = document.createElement(\"div\");\n        totalWrapper.classList = \"flex-between bold\";\n\n        const totalTitle = document.createElement(\"p\");\n        totalTitle.innerText = \"Total:\";\n\n        const totalAmount = document.createElement(\"p\");\n        totalAmount.innerText = `$${sessionIdCartPrice.total}`;\n\n        itemsWrapper.appendChild(itemsTitle);\n        itemsWrapper.appendChild(itemsAmount);\n\n        handlingWrapper.appendChild(handlingTitle);\n        handlingWrapper.appendChild(handlingAmount);\n\n        totalWrapper.appendChild(totalTitle);\n        totalWrapper.appendChild(totalAmount);\n\n        orderSummary.appendChild(title);\n        orderSummary.appendChild(itemsWrapper);\n        orderSummary.appendChild(handlingWrapper);\n        orderSummary.appendChild(totalWrapper);\n\n        if (orderButton) {\n            orderSummary.appendChild(this.createPlaceOrderButtonBlock());\n        }\n\n        return orderSummary;\n    };\n\n    // Right Container - Create PlaceOrderButtonBlock\n    createPlaceOrderButtonBlock = () => {\n        const wrapper = document.createElement(\"div\");\n        wrapper.classList = \"place-order-btn-wrapper\";\n\n        const button = document.createElement(\"button\");\n        button.classList = \"place-order-btn\";\n        button.innerText = \"Place Order\";\n\n        wrapper.appendChild(button);\n\n        return wrapper;\n    };\n\n    // Left Container - Create createCheckOutWrapper\n    createCheckOutWrapper = () => {\n        const checkOutWrapper = document.createElement(\"div\");\n        checkOutWrapper.classList = \"checkout-wrapper\";\n\n        const goBackBtn = document.createElement(\"button\");\n        goBackBtn.classList = \"goto-cart-btn\";\n        goBackBtn.innerText = \"< Back to Cart\";\n\n        checkOutWrapper.appendChild(goBackBtn);\n\n        return checkOutWrapper;\n    };\n\n    // Left Container - Create BillToAddressContentBlock\n    createBillToAddressContentBlock = (sessionIdCartDetails, updateButton) => {\n        const addressWrapper = document.createElement(\"div\");\n        addressWrapper.classList = \"address-wrapper\";\n\n        const title = document.createElement(\"h3\");\n        title.classList = \"address-title\";\n        title.innerText = \"Bill to Address\";\n\n        const custLegalName = document.createElement(\"p\");\n        custLegalName.innerText = sessionIdCartDetails.custLegalName;\n\n        const custBillToAddress = document.createElement(\"p\");\n        custBillToAddress.innerText = sessionIdCartDetails.custBillToAddress;\n\n        const userName = document.createElement(\"p\");\n        userName.innerText = sessionIdCartDetails.userName;\n\n        const userPhone = document.createElement(\"p\");\n        userPhone.innerText = sessionIdCartDetails.userPhone;\n\n        const userEmail = document.createElement(\"p\");\n        userEmail.innerText = sessionIdCartDetails.userEmail;\n\n        addressWrapper.appendChild(title);\n        addressWrapper.appendChild(custLegalName);\n        addressWrapper.appendChild(custBillToAddress);\n        addressWrapper.appendChild(userName);\n        addressWrapper.appendChild(userPhone);\n        addressWrapper.appendChild(userEmail);\n\n        if (updateButton) {\n            addressWrapper.appendChild(this.createUpdateButtonBlock());\n        }\n\n        return addressWrapper;\n    };\n\n    // Left Container - Create PaymentMethodContentBlock\n    createPaymentMethodContentBlock = (sessionIdCartDetails, updateButton) => {\n        const paymentMethodWrapper = document.createElement(\"div\");\n        paymentMethodWrapper.classList = \"payment-method-wrapper\";\n\n        const title = document.createElement(\"h3\");\n        title.classList = \"payment-method-title\";\n        title.innerText = \"Payment Method\";\n\n        const paymentMethod = document.createElement(\"p\");\n        paymentMethod.innerText = sessionIdCartDetails.paymentMethod;\n\n        paymentMethodWrapper.appendChild(title);\n        paymentMethodWrapper.appendChild(paymentMethod);\n\n        if (updateButton) {\n            paymentMethodWrapper.appendChild(this.createUpdateButtonBlock());\n        }\n\n        return paymentMethodWrapper;\n    };\n\n    // Left Container - createCheckOutCartWrapper\n    createCheckOutCartWrapper = () => {\n        const checkOutCartWrapper = document.createElement(\"div\");\n        checkOutCartWrapper.classList = \"checkout-cart-wrapper\";\n\n        const title = document.createElement(\"h3\");\n        title.classList = \"checkout-cart-title\";\n        title.innerText = \"Cart\";\n\n        // const cartItemsWrapper = document.createElement(\"div\");\n        // cartItemsWrapper.classList = \"checkout-cart-items\";\n\n        checkOutCartWrapper.appendChild(title);\n        // checkOutCartWrapper.appendChild(cartItemsWrapper);\n\n        return checkOutCartWrapper;\n    };\n\n    // Left Container - Create UpdateButtonBlock\n    createUpdateButtonBlock = () => {\n        const wrapper = document.createElement(\"div\");\n        wrapper.classList = \"update-btn-wrapper\";\n\n        const button = document.createElement(\"button\");\n        button.classList = \"update-btn\";\n        button.innerText = \"Update\";\n\n        wrapper.appendChild(button);\n\n        return wrapper;\n    };\n}\n","export class ViewAdmin {\n    constructor() {}\n    checkModuleLinkage = () => {\n        console.log(\"HELLO, ViewAdmin is connected!\");\n    };\n}\n","export class ViewSuperadmin {\n    constructor() {}\n    checkModuleLinkage = () => {\n        console.log(\"HELLO, ViewSuperadmin is connected!\");\n    };\n}\n","export class ModelProducts {\n    constructor() {}\n    checkModuleLinkage = () => {\n        console.log(\"HELLO, ModelProducts is connected!\");\n    };\n}\n","export class ModelCart {\n    constructor(controller) {\n        this.controller = controller;\n    }\n    checkModuleLinkage = () => {\n        console.log(\"HELLO, ModelCart is connected!\");\n    };\n}\n","export class ModelOrders {\n    constructor() {}\n    checkModuleLinkage = () => {\n        console.log(\"HELLO, ModelOrders is connected!\");\n    };\n}\n","export class ModelUser {\n    constructor() {}\n    checkModuleLinkage = () => {\n        console.log(\"HELLO, ModelUser is connected!\");\n    };\n\n    getSessionIdCustomerByCustomerId = (customerId, customersData) => {\n        const sessionCustomerArray = customersData.filter(\n            (customer) => customer.custId === customerId\n        );\n        return sessionCustomerArray[0];\n    };\n}\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$367dbd879e1b0a40$export$6503ec6e8aabbaf","$367dbd879e1b0a40$export$f7ad0328861e2f03","$367dbd879e1b0a40$var$mapping","pairs","keys","i","length","resolved","$186cb5275e501ab9$export$bdfd709ae4826697","$186cb5275e501ab9$var$bundleURL","value","$186cb5275e501ab9$var$getBundleURL","matches","stack","match","replace","JSON","parse","$2f117f96b8a143cf$exports","getBundleURL","resolve","$d6617dc3d6bbff8e$exports","$4f92014deb951a68$export$389214387cd37f49","constructor","controller","checkModuleLinkage","console","log","createProductItemCard","productObject","productItemDiv","document","createElement","classList","itemId","image","src","getUrlByNameLocal","itemImg","contentDiv","contentName","textContent","itemName","partNumber","itemPN","priceBlockDiv","priceElement","itemPrice","priceBtn","priceBtnImg","alt","appendChild","createProductItemsList","arrayProducts","productList","newProductItemCard","createDetailedProductCard","productCardMain","goBackBtn","innerText","cardTopWrapper","cardImageWrapper","cardSummaryWrapper","cardSummary","productName","partNumberSupport","priceElementSupport","itemCurrency","partConditionSupport","partCondition","itemCondition","partCertificationSupport","partCertification","itemCertification","partAvailabilitySupport","partAvailability","itemLeadTime","addToCartBtn","addToCartBtnImg","textSpan","cardBottomWrapper","cardDescription","cardDescriptionText","itemDescription","$d3c8c10eba5fc3aa$exports","$1476b43a64e24fc7$export$1a33929de52b7c41","createCartSummaryTitle","title","createCartItemButton","imageURL","productId","button","style","createCartProductItemsBlock","sessionIdCart","wrapper","emptyCartMessage","productImage","getImageByProductId","cartItem","createGoToCartButton","createProceedToCheckoutBtn","createTotalAmountBlock","sessionIdCartPrice","totalAmount","total","createNewCartSummaryNoTotal","cartSummaryBlock","cartProductItemsBlock","createNewCartSummaryWithPrice","cartTotalAmount","createProductCardForCart","qtyInCart","customClassList","updateBlock","cardNameWrapper","partNumberWrapper","partConditionWrapper","partCertificationWrapper","partAvailabilityWrapper","priceElementWrapper","setAttribute","qtyModifierWrapper","qtyModifierDeductBtn","qtyModifierIndicator","qtyModifierAddBtn","createCartPage","sessionCart","cartWrapper","cartTitle","cartItemsWrapper","productItem","productData","getProductObjectById","qty","createEmptyCartPage","updatePartQuantity","newQty","priceQtyElement","querySelector","qtyIndicator","getElementById","updateTotalPrice","newPrice","totalPriceElement","$06458e4997a621d0$export$b2302a7728e463f6","createOrdersHistoryTitle","createOrdersHistorySummary","sessionIdOrders","ordersHistorySummary","ordersWrapper","order","orderBtn","orderId","createOrderSummaryPriceBlock","orderButton","orderSummary","itemsWrapper","itemsTitle","itemsAmount","items","handlingWrapper","handlingTitle","handlingAmount","handling","totalWrapper","totalTitle","createPlaceOrderButtonBlock","createCheckOutWrapper","checkOutWrapper","createBillToAddressContentBlock","sessionIdCartDetails","updateButton","addressWrapper","custLegalName","custBillToAddress","userName","userPhone","userEmail","createUpdateButtonBlock","createPaymentMethodContentBlock","paymentMethodWrapper","paymentMethod","createCheckOutCartWrapper","checkOutCartWrapper","$83eeb1cebc8e9e2f$export$6fbf01628a6a7da2","$0f23fdfbe72d6dc5$export$e19edce000cd47ad","$9zRuU","$fd5c63960fb3feb3$export$d7de4e038aa2764a","$d4cf02cd6eb40cbd$export$14b19842eb277cc3","$322482701a8583fb$export$e8a12554cce12ecc","$9e22cb4fc6971acd$export$4a0cfbe1be99c234","getSessionIdCustomerByCustomerId","customerId","customersData","sessionCustomerArray","filter","customer","custId","$ljOiA","$73f0e54013891933$var$dataBase","$73f0e54013891933$var$sessionIdNumber","$73f0e54013891933$var$sessionIdUser","$73f0e54013891933$var$sessionIdCustomer","$73f0e54013891933$var$sessionIdOrders","$73f0e54013891933$var$sessionIdCartItems","$73f0e54013891933$var$sessionIdCartPrice","$73f0e54013891933$var$sessionIdCartDetails","$73f0e54013891933$var$productsList","innerHTML","$73f0e54013891933$var$cartSummaryNoTotal","$73f0e54013891933$var$ordersHistorySummary","$73f0e54013891933$var$imageLinksMap","Map","$a0f19fba54d20669$var$App","viewProducts","viewCart","viewOrders","viewAdmin","viewSuperadmin","modelFirebase","ModelFirebase","modelProducts","modelCart","modelOrders","modelUser","containerLeftNode","containerRightNode","initializeAppMain","collectionName","dbCollectionNames","docName","productItems","getLinkToImage","then","url","catch","error","usersData","userId","getSessionIdCustomerData","getCartItemsByUserID","getOrdersByUserID","getSessionIdCartDetails","renderProductItemsList","renderCartAndOrdersSummary","attachEventListenrs","askForImageUrlFromStorage","imageName","handleNewIdGeneration","generateUniqueId","clearContainerLeft","clearContainerRight","deleteObjectFromArrayByDocId","arrayData","docId","index","object","splice","updatedSessionIdCartDetails","custHandlingFee","sessionIdNumber","cartsData","ordersData","product","getPriceByProductId","productById","getProdIdFromElementId","idString","split","filteredArray","getDocIdFromArrayByItemId","array","callToUpdateCartPriceVariable","updateCartPriceVariable","sessionIdCartItems","handlingRate","newItemsPrice","newHandlingFee","item","productItemsList","renderCartSummary","productCardForCartHTML","renderProductCard","detailedCardHTML","cartAndOrdersSummary","cartItems","ordersHistory","renderCartSummaryWithPrice","cartSummaryWrapper","cartSummary","renderCheckOutPanel","renderCheckOutPricePanel","findAncestorByClass","element","className","currentElement","contains","parentElement","handleGotoProductsBtn","handleAddToCartBtn","isInTheCart","handleQtyChangeBtn","addProduct","handleGotoCartBtn","handleProceedToCheckoutBtn","handleProductItem","productIdToDisplay","productToDisplay","handleDisplayHistoricalOrder","elementDOM","adder","productToUpdate","stringify","find","filteredsessionIdCartItems","updateProduct","updateCartDOM","deleteProduct","newProductToCart","handleAddDocToFirestore","push","handleUpdateDocInFirestore","handleDeleteDocFromFirestore","handleViewOfPartQty","handleViewOfTotalPrceInCart","handleButtonsClickLeft","event","target","closest","priceBtnElement","productItemElement","handleButtonsClickRight","goToCartBtn","proceedToCheckoutBtn","addEventListener","documentObject","addDocToFirestore","updateDocInFirestore","documentId","deleteDocFromFirestore","alert"],"version":3,"file":"index.9d1ed911.js.map"}