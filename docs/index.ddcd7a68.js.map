{"mappings":"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","sources":["<anon>","src/js/ecommerce/index.js","src/js/ecommerce/controller.js","src/js/ecommerce/view-products.js","src/js/ecommerce/view-cart.js","src/js/ecommerce/view-orders.js","src/js/ecommerce/view-admin.js","src/js/ecommerce/view-superadmin.js","src/js/ecommerce/model-firebase.js","src/js/ecommerce/model-products.js","src/js/ecommerce/model-cart.js","src/js/ecommerce/model-orders.js","src/js/ecommerce/model-admin.js"],"sourcesContent":["var $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire5d32\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire5d32\"] = parcelRequire;\n}\nclass $1b114789a43e9f87$export$389214387cd37f49 {\n    constructor(){\n        this.containerLeftNode = document.getElementById(\"containerLeft\");\n        this.containerRightNode = document.getElementById(\"containerRight\");\n    }\n    // FOR TEST AND TBS - REMOVE FOR PROD\n    checkModuleLinkage = ()=>{\n        console.log(\"HELLO, ViewProducts is connected!\");\n    };\n    // Clear container\n    clearContainerLeft = ()=>{\n        this.containerLeftNode.innerHTML = \"\";\n    };\n    createProductItemCard = (productObject)=>{\n        // Create elements\n        const productItemDiv = document.createElement(\"div\");\n        productItemDiv.classList = \"product-item\";\n        productItemDiv.id = productObject.docId;\n        const image = document.createElement(\"img\");\n        image.classList = \"product-item__img\";\n        image.src = \"../images/img_book_01.jpeg\";\n        const contentDiv = document.createElement(\"div\");\n        contentDiv.classList = \"product-item__content\";\n        const contentName = document.createElement(\"h3\");\n        contentName.classList = \"product-item__content_desc\";\n        contentName.textContent = productObject.itemName;\n        const partNumber = document.createElement(\"p\");\n        partNumber.classList = \"product-item__content_part-number\";\n        partNumber.textContent = productObject.itemPN;\n        const priceBlockDiv = document.createElement(\"div\");\n        priceBlockDiv.classList = \"product-item__content_price-block\";\n        const priceElement = document.createElement(\"h3\");\n        priceElement.classList = \"product-item__content_price\";\n        priceElement.textContent = `$${productObject.itemPrice}`;\n        const priceBtn = document.createElement(\"button\");\n        priceBtn.classList = \"product-item__content_price-btn\";\n        const priceBtnImg = document.createElement(\"img\");\n        priceBtnImg.classList = \"product-item__content_price-btn-img\";\n        priceBtnImg.src = \"../other_assets/Icon-cart.png\";\n        priceBtnImg.alt = \"Select\";\n        // Append elemens to respective parents\n        priceBtn.appendChild(priceBtnImg);\n        priceBlockDiv.appendChild(priceElement);\n        priceBlockDiv.appendChild(priceBtn);\n        contentDiv.appendChild(contentName);\n        contentDiv.appendChild(partNumber);\n        contentDiv.appendChild(priceBlockDiv);\n        productItemDiv.appendChild(image);\n        productItemDiv.appendChild(contentDiv);\n        return productItemDiv;\n    };\n    // Left Container - Render product items\n    renderProductItems = (arrayProducts)=>{\n        // Clear container\n        this.clearContainerLeft();\n        // Create product list container\n        const productList = document.createElement(\"div\");\n        productList.classList = \"product-list\";\n        // Look through array to create item cards and add to products list\n        for (const productObject of arrayProducts){\n            const newProductItemCard = this.createProductItemCard(productObject);\n            productList.appendChild(newProductItemCard);\n        }\n        // Render product list container\n        this.containerLeftNode.appendChild(productList);\n    };\n}\n\n\nclass $35d070c89185a3bf$export$1a33929de52b7c41 {\n    constructor(){}\n    checkModuleLinkage = ()=>{\n        console.log(\"HELLO, ViewCart is connected!\");\n    };\n}\n\n\nclass $1ca02d361ad47980$export$b2302a7728e463f6 {\n    constructor(){}\n    checkModuleLinkage = ()=>{\n        console.log(\"HELLO, ViewOrders is connected!\");\n    };\n}\n\n\nclass $2de0a264446369ef$export$6fbf01628a6a7da2 {\n    constructor(){}\n    checkModuleLinkage = ()=>{\n        console.log(\"HELLO, ViewAdmin is connected!\");\n    };\n}\n\n\nclass $22a234a09e140313$export$e19edce000cd47ad {\n    constructor(){}\n    checkModuleLinkage = ()=>{\n        console.log(\"HELLO, ViewSuperadmin is connected!\");\n    };\n}\n\n\n// Import the functions you need from the SDKs you need\n\nvar $1ggDV = parcelRequire(\"1ggDV\");\n\nvar $gKkQl = parcelRequire(\"gKkQl\");\n\nvar $ftYLF = parcelRequire(\"ftYLF\");\nconst $83affabd6d758228$var$app = (0, $gKkQl.initializeApp)((0, $1ggDV.firebaseConfig));\nconst $83affabd6d758228$var$db = (0, $ftYLF.getFirestore)($83affabd6d758228$var$app);\nclass $83affabd6d758228$export$e3dd3a54983835d {\n    constructor(){}\n    checkModuleLinkage = ()=>{\n        console.log(\"HELLO, ModelFirebase is connected!\");\n    };\n    get = async (collectionName)=>{\n        const querySnapshot = await (0, $ftYLF.getDocs)((0, $ftYLF.collection)($83affabd6d758228$var$db, collectionName));\n        const newCollection = [];\n        querySnapshot.forEach((doc)=>{\n            // console.log(`docId: \"${doc.id}\"`);\n            const newCollectionItem = {};\n            newCollectionItem[\"docId\"] = doc.id;\n            const data = doc.data();\n            for(const field in data)newCollectionItem[field] = data[field];\n            newCollection.push(newCollectionItem);\n        });\n        // console.log(newCollection);\n        return newCollection;\n    };\n    addDocToFirestore = async (collectionName, item)=>{\n        try {\n            const docRef = (0, $ftYLF.doc)($83affabd6d758228$var$db, collectionName, item.docId);\n            await (0, $ftYLF.setDoc)(docRef, item);\n            console.log(\"Item/document succesfully added with docId: \", item.docId);\n        } catch (error) {\n            console.error(\"Error adding document: \", error);\n        }\n    };\n    updateDocInFirestore = async (collectionName, item)=>{\n        try {\n            const docRef = (0, $ftYLF.doc)($83affabd6d758228$var$db, collectionName, item.docId);\n            await (0, $ftYLF.updateDoc)(docRef, item);\n            console.log(\"Item/document succesfully updated in Firestore, docId: \", item.docId);\n        } catch (error) {\n            console.error(\"Error updating document in Firestore: \", error);\n        }\n    };\n    deleteDocFromFirestore = async (collectionName, itemId)=>{\n        try {\n            await (0, $ftYLF.deleteDoc)((0, $ftYLF.doc)($83affabd6d758228$var$db, collectionName, itemId));\n        } catch (error) {\n            console.error(\"Error deleting document: \", error);\n        }\n    };\n}\n\n\nclass $4300cb966b2e7956$export$d7de4e038aa2764a {\n    constructor(){}\n    checkModuleLinkage = ()=>{\n        console.log(\"HELLO, ModelProducts is connected!\");\n    };\n}\n\n\nclass $e7f9cc62c542667f$export$14b19842eb277cc3 {\n    constructor(){}\n    checkModuleLinkage = ()=>{\n        console.log(\"HELLO, ModelCart is connected!\");\n    };\n}\n\n\nclass $8583b6a513d0b96d$export$e8a12554cce12ecc {\n    constructor(){}\n    checkModuleLinkage = ()=>{\n        console.log(\"HELLO, ModelOrders is connected!\");\n    };\n}\n\n\nclass $5f9a7fad4bf175a4$export$2b4204dcad2087bf {\n    constructor(){}\n    checkModuleLinkage = ()=>{\n        console.log(\"HELLO, ModelAdmin is connected!\");\n    };\n}\n\n\n\n\nvar $1ggDV = parcelRequire(\"1ggDV\");\n// Initiate database instance (dataBase):\nlet $3af3deae1b09d485$var$dataBase = {};\nclass $3af3deae1b09d485$export$bd0bf19f25da8474 {\n    constructor(){\n        this.viewProducts = new (0, $1b114789a43e9f87$export$389214387cd37f49)();\n        this.viewCart = new (0, $35d070c89185a3bf$export$1a33929de52b7c41)();\n        this.viewOrders = new (0, $1ca02d361ad47980$export$b2302a7728e463f6)();\n        this.viewAdmin = new (0, $2de0a264446369ef$export$6fbf01628a6a7da2)();\n        this.viewSuperadmin = new (0, $22a234a09e140313$export$e19edce000cd47ad)();\n        this.modelFirebase = new (0, $83affabd6d758228$export$e3dd3a54983835d)();\n        this.modelProducts = new (0, $4300cb966b2e7956$export$d7de4e038aa2764a)();\n        this.modelCart = new (0, $e7f9cc62c542667f$export$14b19842eb277cc3)();\n        this.modelOrders = new (0, $8583b6a513d0b96d$export$e8a12554cce12ecc)();\n        this.modelAdmin = new (0, $5f9a7fad4bf175a4$export$2b4204dcad2087bf)();\n    }\n    initializeAppMain = async ()=>{\n        // TEST AND TBS - REMOVE IN PRODUCTION\n        console.log(\"HELLO! INIT CARRIED OUT SUCCESFULLY\");\n        this.viewProducts.checkModuleLinkage();\n        this.viewCart.checkModuleLinkage();\n        this.viewOrders.checkModuleLinkage();\n        this.viewAdmin.checkModuleLinkage();\n        this.viewSuperadmin.checkModuleLinkage();\n        this.modelFirebase.checkModuleLinkage();\n        this.modelProducts.checkModuleLinkage();\n        this.modelCart.checkModuleLinkage();\n        this.modelOrders.checkModuleLinkage();\n        this.modelAdmin.checkModuleLinkage();\n        // Get data from database (Firebase) and keep in dataBase{}\n        console.log(\"Action: Getdata from database (Firebase) and keep in dataBase{}.\");\n        for (const collectionName of (0, $1ggDV.dbCollectionNames))$3af3deae1b09d485$var$dataBase[collectionName] = await this.modelFirebase.get(collectionName);\n        // FOR TEST AND TBS - REMOVE IN PROD:\n        console.log(\"dataBase{}: \", $3af3deae1b09d485$var$dataBase);\n        // Left Container - Render product items\n        this.viewProducts.renderProductItems($3af3deae1b09d485$var$dataBase.productItems);\n    // Right Container - Render Cart Title\n    // Right Container - Render Cart Icons\n    // Right Container - Render Go-To-Cart Button\n    // Right Container - Render Orders Title\n    // Right Container - Render Order Links\n    // Attach Event Listeners (Products)\n    // Attach Event Listeners (Cart Icons)\n    // Attach Event Listeners (Order Links)\n    // Alert - Popup inform the test name usage\n    };\n}\n\n\nconst $253f3b867cf07a8b$var$App = new (0, $3af3deae1b09d485$export$bd0bf19f25da8474)();\ntry {\n    $253f3b867cf07a8b$var$App.initializeAppMain();\n} catch (error) {\n    console.error(\"An error occured duting app initialization:\", error);\n    alert(\"Something went wrong. Please contact the app admin or try again later.\");\n}\n\n\n//# sourceMappingURL=index.ddcd7a68.js.map\n","import { Controller } from \"./controller\";\n\nconst App = new Controller();\n\ntry {\n    App.initializeAppMain();\n} catch (error) {\n    console.error(\"An error occured duting app initialization:\", error);\n    alert(\n        \"Something went wrong. Please contact the app admin or try again later.\"\n    );\n}\n","import { ViewProducts } from \"./view-products.js\";\nimport { ViewCart } from \"./view-cart.js\";\nimport { ViewOrders } from \"./view-orders.js\";\nimport { ViewAdmin } from \"./view-admin.js\";\nimport { ViewSuperadmin } from \"./view-superadmin.js\";\nimport { ModelFirebase } from \"./model-firebase.js\";\nimport { ModelProducts } from \"./model-products.js\";\nimport { ModelCart } from \"./model-cart.js\";\nimport { ModelOrders } from \"./model-orders.js\";\nimport { ModelAdmin } from \"./model-admin.js\";\n\n// Import random ID generator\nimport { v4 as uuidv4 } from \"uuid\";\n\n// Get DB collection names (dbCollectionNames) from constants.js\nimport { dbCollectionNames } from \"../common/constants.js\";\n\n// Initiate database instance (dataBase):\nlet dataBase = {};\n\nexport class Controller {\n    constructor() {\n        this.viewProducts = new ViewProducts();\n        this.viewCart = new ViewCart();\n        this.viewOrders = new ViewOrders();\n        this.viewAdmin = new ViewAdmin();\n        this.viewSuperadmin = new ViewSuperadmin();\n        this.modelFirebase = new ModelFirebase();\n        this.modelProducts = new ModelProducts();\n        this.modelCart = new ModelCart();\n        this.modelOrders = new ModelOrders();\n        this.modelAdmin = new ModelAdmin();\n    }\n    initializeAppMain = async () => {\n        // TEST AND TBS - REMOVE IN PRODUCTION\n        console.log(\"HELLO! INIT CARRIED OUT SUCCESFULLY\");\n        this.viewProducts.checkModuleLinkage();\n        this.viewCart.checkModuleLinkage();\n        this.viewOrders.checkModuleLinkage();\n        this.viewAdmin.checkModuleLinkage();\n        this.viewSuperadmin.checkModuleLinkage();\n        this.modelFirebase.checkModuleLinkage();\n        this.modelProducts.checkModuleLinkage();\n        this.modelCart.checkModuleLinkage();\n        this.modelOrders.checkModuleLinkage();\n        this.modelAdmin.checkModuleLinkage();\n\n        // Get data from database (Firebase) and keep in dataBase{}\n        console.log(\n            \"Action: Getdata from database (Firebase) and keep in dataBase{}.\"\n        );\n        for (const collectionName of dbCollectionNames) {\n            dataBase[collectionName] = await this.modelFirebase.get(\n                collectionName\n            );\n        }\n        // FOR TEST AND TBS - REMOVE IN PROD:\n        console.log(\"dataBase{}: \", dataBase);\n\n        // Left Container - Render product items\n        this.viewProducts.renderProductItems(dataBase.productItems);\n\n        // Right Container - Render Cart Title\n\n        // Right Container - Render Cart Icons\n\n        // Right Container - Render Go-To-Cart Button\n\n        // Right Container - Render Orders Title\n\n        // Right Container - Render Order Links\n\n        // Attach Event Listeners (Products)\n        // Attach Event Listeners (Cart Icons)\n        // Attach Event Listeners (Order Links)\n\n        // Alert - Popup inform the test name usage\n    };\n\n    // Left Container - Render product items\n\n    // Right Container - Render Cart Title\n\n    // Right Container - Render Cart Icons\n\n    // Right Container - Render Go-To-Cart Button\n\n    // Right Container - Render Orders Title\n\n    // Right Container - Render Order Links\n}\n","export class ViewProducts {\n    constructor() {\n        this.containerLeftNode = document.getElementById(\"containerLeft\");\n        this.containerRightNode = document.getElementById(\"containerRight\");\n    }\n    // FOR TEST AND TBS - REMOVE FOR PROD\n    checkModuleLinkage = () => {\n        console.log(\"HELLO, ViewProducts is connected!\");\n    };\n\n    // Clear container\n    clearContainerLeft = () => {\n        this.containerLeftNode.innerHTML = \"\";\n    };\n\n    createProductItemCard = (productObject) => {\n        // Create elements\n        const productItemDiv = document.createElement(\"div\");\n        productItemDiv.classList = \"product-item\";\n        productItemDiv.id = productObject.docId;\n\n        const image = document.createElement(\"img\");\n        image.classList = \"product-item__img\";\n        image.src = \"../images/img_book_01.jpeg\";\n\n        const contentDiv = document.createElement(\"div\");\n        contentDiv.classList = \"product-item__content\";\n\n        const contentName = document.createElement(\"h3\");\n        contentName.classList = \"product-item__content_desc\";\n        contentName.textContent = productObject.itemName;\n\n        const partNumber = document.createElement(\"p\");\n        partNumber.classList = \"product-item__content_part-number\";\n        partNumber.textContent = productObject.itemPN;\n\n        const priceBlockDiv = document.createElement(\"div\");\n        priceBlockDiv.classList = \"product-item__content_price-block\";\n\n        const priceElement = document.createElement(\"h3\");\n        priceElement.classList = \"product-item__content_price\";\n        priceElement.textContent = `$${productObject.itemPrice}`;\n\n        const priceBtn = document.createElement(\"button\");\n        priceBtn.classList = \"product-item__content_price-btn\";\n\n        const priceBtnImg = document.createElement(\"img\");\n        priceBtnImg.classList = \"product-item__content_price-btn-img\";\n        priceBtnImg.src = \"../other_assets/Icon-cart.png\";\n        priceBtnImg.alt = \"Select\";\n\n        // Append elemens to respective parents\n        priceBtn.appendChild(priceBtnImg);\n        priceBlockDiv.appendChild(priceElement);\n        priceBlockDiv.appendChild(priceBtn);\n\n        contentDiv.appendChild(contentName);\n        contentDiv.appendChild(partNumber);\n        contentDiv.appendChild(priceBlockDiv);\n\n        productItemDiv.appendChild(image);\n        productItemDiv.appendChild(contentDiv);\n\n        return productItemDiv;\n    };\n\n    // Left Container - Render product items\n    renderProductItems = (arrayProducts) => {\n        // Clear container\n        this.clearContainerLeft();\n\n        // Create product list container\n        const productList = document.createElement(\"div\");\n        productList.classList = \"product-list\";\n\n        // Look through array to create item cards and add to products list\n        for (const productObject of arrayProducts) {\n            const newProductItemCard =\n                this.createProductItemCard(productObject);\n            productList.appendChild(newProductItemCard);\n        }\n\n        // Render product list container\n        this.containerLeftNode.appendChild(productList);\n    };\n}\n","export class ViewCart {\n    constructor() {}\n    checkModuleLinkage = () => {\n        console.log(\"HELLO, ViewCart is connected!\");\n    };\n}\n","export class ViewOrders {\n    constructor() {}\n    checkModuleLinkage = () => {\n        console.log(\"HELLO, ViewOrders is connected!\");\n    };\n}\n","export class ViewAdmin {\n    constructor() {}\n    checkModuleLinkage = () => {\n        console.log(\"HELLO, ViewAdmin is connected!\");\n    };\n}\n","export class ViewSuperadmin {\n    constructor() {}\n    checkModuleLinkage = () => {\n        console.log(\"HELLO, ViewSuperadmin is connected!\");\n    };\n}\n","// Import the functions you need from the SDKs you need\nimport { firebaseConfig } from \"../common/constants\";\nimport { initializeApp } from \"firebase/app\";\nimport {\n    getFirestore,\n    collection,\n    getDocs,\n    updateDoc,\n    doc,\n    setDoc,\n    deleteDoc,\n    updateDoc,\n    // query,\n    // orderBy,\n} from \"firebase/firestore\";\n\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\n\nexport class ModelFirebase {\n    constructor() {}\n    checkModuleLinkage = () => {\n        console.log(\"HELLO, ModelFirebase is connected!\");\n    };\n\n    get = async (collectionName) => {\n        const querySnapshot = await getDocs(collection(db, collectionName));\n        const newCollection = [];\n        querySnapshot.forEach((doc) => {\n            // console.log(`docId: \"${doc.id}\"`);\n            const newCollectionItem = {};\n            newCollectionItem[\"docId\"] = doc.id;\n            const data = doc.data();\n            for (const field in data) {\n                newCollectionItem[field] = data[field];\n                // console.log(`${field}: \"${data[field]}\",`);\n            }\n            newCollection.push(newCollectionItem);\n        });\n        // console.log(newCollection);\n        return newCollection;\n    };\n\n    addDocToFirestore = async (collectionName, item) => {\n        try {\n            const docRef = doc(db, collectionName, item.docId);\n            await setDoc(docRef, item);\n            console.log(\n                \"Item/document succesfully added with docId: \",\n                item.docId\n            );\n        } catch (error) {\n            console.error(\"Error adding document: \", error);\n        }\n    };\n\n    updateDocInFirestore = async (collectionName, item) => {\n        try {\n            const docRef = doc(db, collectionName, item.docId);\n            await updateDoc(docRef, item);\n            console.log(\n                \"Item/document succesfully updated in Firestore, docId: \",\n                item.docId\n            );\n        } catch (error) {\n            console.error(\"Error updating document in Firestore: \", error);\n        }\n    };\n\n    deleteDocFromFirestore = async (collectionName, itemId) => {\n        try {\n            await deleteDoc(doc(db, collectionName, itemId));\n        } catch (error) {\n            console.error(\"Error deleting document: \", error);\n        }\n    };\n}\n","export class ModelProducts {\n    constructor() {}\n    checkModuleLinkage = () => {\n        console.log(\"HELLO, ModelProducts is connected!\");\n    };\n}\n","export class ModelCart {\n    constructor() {}\n    checkModuleLinkage = () => {\n        console.log(\"HELLO, ModelCart is connected!\");\n    };\n}\n","export class ModelOrders {\n    constructor() {}\n    checkModuleLinkage = () => {\n        console.log(\"HELLO, ModelOrders is connected!\");\n    };\n}\n","export class ModelAdmin {\n    constructor() {}\n    checkModuleLinkage = () => {\n        console.log(\"HELLO, ModelAdmin is connected!\");\n    };\n}\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$1b114789a43e9f87$export$389214387cd37f49","constructor","containerLeftNode","document","getElementById","containerRightNode","checkModuleLinkage","console","log","clearContainerLeft","innerHTML","createProductItemCard","productObject","productItemDiv","createElement","classList","docId","image","src","contentDiv","contentName","textContent","itemName","partNumber","itemPN","priceBlockDiv","priceElement","itemPrice","priceBtn","priceBtnImg","alt","appendChild","renderProductItems","arrayProducts","productList","newProductItemCard","$35d070c89185a3bf$export$1a33929de52b7c41","$1ca02d361ad47980$export$b2302a7728e463f6","$2de0a264446369ef$export$6fbf01628a6a7da2","$22a234a09e140313$export$e19edce000cd47ad","$1ggDV","$gKkQl","$ftYLF","$83affabd6d758228$var$app","initializeApp","firebaseConfig","$83affabd6d758228$var$db","getFirestore","$83affabd6d758228$export$e3dd3a54983835d","get","collectionName","querySnapshot","getDocs","collection","newCollection","forEach","doc","newCollectionItem","data","field","push","addDocToFirestore","item","docRef","setDoc","error","updateDocInFirestore","updateDoc","deleteDocFromFirestore","itemId","deleteDoc","$4300cb966b2e7956$export$d7de4e038aa2764a","$e7f9cc62c542667f$export$14b19842eb277cc3","$8583b6a513d0b96d$export$e8a12554cce12ecc","$5f9a7fad4bf175a4$export$2b4204dcad2087bf","$3af3deae1b09d485$var$dataBase","$253f3b867cf07a8b$var$App","viewProducts","viewCart","viewOrders","viewAdmin","viewSuperadmin","modelFirebase","modelProducts","modelCart","modelOrders","modelAdmin","initializeAppMain","dbCollectionNames","productItems","alert"],"version":3,"file":"index.ddcd7a68.js.map"}