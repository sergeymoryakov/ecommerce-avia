!function(){var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},t={},o={},c=e.parcelRequire5d32;null==c&&((c=function(e){if(e in t)return t[e].exports;if(e in o){var c=o[e];delete o[e];var n={id:e,exports:{}};return t[e]=n,c.call(n.exports,n,n.exports),n.exports}var i=Error("Cannot find module '"+e+"'");throw i.code="MODULE_NOT_FOUND",i}).register=function(e,t){o[e]=t},e.parcelRequire5d32=c);class n{constructor(){this.containerLeftNode=document.getElementById("containerLeft"),this.containerRightNode=document.getElementById("containerRight")}// FOR TEST AND TBS - REMOVE FOR PROD
checkModuleLinkage=()=>{console.log("HELLO, ViewProducts is connected!")};// Clear container
clearContainerLeft=()=>{this.containerLeftNode.innerHTML=""};createProductItemCard=e=>{// Create elements
let t=document.createElement("div");t.classList="product-item",t.id=e.docId;let o=document.createElement("img");o.classList="product-item__img",o.src="../images/img_book_01.jpeg";let c=document.createElement("div");c.classList="product-item__content";let n=document.createElement("h3");n.classList="product-item__content_desc",n.textContent=e.itemName;let i=document.createElement("p");i.classList="product-item__content_part-number",i.textContent=e.itemPN;let d=document.createElement("div");d.classList="product-item__content_price-block";let r=document.createElement("h3");r.classList="product-item__content_price",r.textContent=`$${e.itemPrice}`;let s=document.createElement("button");s.classList="product-item__content_price-btn";let l=document.createElement("img");return l.classList="product-item__content_price-btn-img",l.src="../other_assets/Icon-cart.png",l.alt="Select",// Append elemens to respective parents
s.appendChild(l),d.appendChild(r),d.appendChild(s),c.appendChild(n),c.appendChild(i),c.appendChild(d),t.appendChild(o),t.appendChild(c),t};// Left Container - Render product items
renderProductItems=e=>{// Clear container
this.clearContainerLeft();// Create product list container
let t=document.createElement("div");// Look through array to create item cards and add to products list
for(let o of(t.classList="product-list",e)){let e=this.createProductItemCard(o);t.appendChild(e)}// Render product list container
this.containerLeftNode.appendChild(t)}}class i{constructor(){}checkModuleLinkage=()=>{console.log("HELLO, ViewCart is connected!")}}class d{constructor(){}checkModuleLinkage=()=>{console.log("HELLO, ViewOrders is connected!")}}class r{constructor(){}checkModuleLinkage=()=>{console.log("HELLO, ViewAdmin is connected!")}}class s{constructor(){}checkModuleLinkage=()=>{console.log("HELLO, ViewSuperadmin is connected!")}}// Import the functions you need from the SDKs you need
var l=c("ljOiA"),a=c("fkNhc"),u=c("6m2hf");let m=(0,a.initializeApp)(l.firebaseConfig),h=(0,u.getFirestore)(m);class p{constructor(){}checkModuleLinkage=()=>{console.log("HELLO, ModelFirebase is connected!")};get=async e=>{let t=await (0,u.getDocs)((0,u.collection)(h,e)),o=[];// console.log(newCollection);
return t.forEach(e=>{// console.log(`docId: "${doc.id}"`);
let t={};t.docId=e.id;let c=e.data();for(let e in c)t[e]=c[e];o.push(t)}),o};addDocToFirestore=async(e,t)=>{try{let o=(0,u.doc)(h,e,t.docId);await (0,u.setDoc)(o,t),console.log("Item/document succesfully added with docId: ",t.docId)}catch(e){console.error("Error adding document: ",e)}};updateDocInFirestore=async(e,t)=>{try{let o=(0,u.doc)(h,e,t.docId);await (0,u.updateDoc)(o,t),console.log("Item/document succesfully updated in Firestore, docId: ",t.docId)}catch(e){console.error("Error updating document in Firestore: ",e)}};deleteDocFromFirestore=async(e,t)=>{try{await (0,u.deleteDoc)((0,u.doc)(h,e,t))}catch(e){console.error("Error deleting document: ",e)}}}class g{constructor(){}checkModuleLinkage=()=>{console.log("HELLO, ModelProducts is connected!")}}class L{constructor(){}checkModuleLinkage=()=>{console.log("HELLO, ModelCart is connected!")}}class k{constructor(){}checkModuleLinkage=()=>{console.log("HELLO, ModelOrders is connected!")}}class w{constructor(){}checkModuleLinkage=()=>{console.log("HELLO, ModelAdmin is connected!")}}var l=c("ljOiA");// Initiate database instance (dataBase):
let f={},E=new class{constructor(){this.viewProducts=new n,this.viewCart=new i,this.viewOrders=new d,this.viewAdmin=new r,this.viewSuperadmin=new s,this.modelFirebase=new p,this.modelProducts=new g,this.modelCart=new L,this.modelOrders=new k,this.modelAdmin=new w}initializeAppMain=async()=>{for(let e of(// TEST AND TBS - REMOVE IN PRODUCTION
console.log("HELLO! INIT CARRIED OUT SUCCESFULLY"),this.viewProducts.checkModuleLinkage(),this.viewCart.checkModuleLinkage(),this.viewOrders.checkModuleLinkage(),this.viewAdmin.checkModuleLinkage(),this.viewSuperadmin.checkModuleLinkage(),this.modelFirebase.checkModuleLinkage(),this.modelProducts.checkModuleLinkage(),this.modelCart.checkModuleLinkage(),this.modelOrders.checkModuleLinkage(),this.modelAdmin.checkModuleLinkage(),// Get data from database (Firebase) and keep in dataBase{}
console.log("Action: Getdata from database (Firebase) and keep in dataBase{}."),l.dbCollectionNames))f[e]=await this.modelFirebase.get(e);// FOR TEST AND TBS - REMOVE IN PROD:
console.log("dataBase{}: ",f),// Left Container - Render product items
this.viewProducts.renderProductItems(f.productItems);// Right Container - Render Cart Title
// Right Container - Render Cart Icons
// Right Container - Render Go-To-Cart Button
// Right Container - Render Orders Title
// Right Container - Render Order Links
// Attach Event Listeners (Products)
// Attach Event Listeners (Cart Icons)
// Attach Event Listeners (Order Links)
// Alert - Popup inform the test name usage
}};try{E.initializeAppMain()}catch(e){console.error("An error occured duting app initialization:",e),alert("Something went wrong. Please contact the app admin or try again later.")}}();//# sourceMappingURL=index.2b522335.js.map

//# sourceMappingURL=index.2b522335.js.map
