{"mappings":"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","sources":["<anon>","src/js/admin/admin-index.js","src/js/admin/admin-controller.js","src/js/admin/admin-view.js","src/js/admin/admin-model.js","src/data/backup.js"],"sourcesContent":["var $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire5d32\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire5d32\"] = parcelRequire;\n}\n// SET VIEW MODULE:\nclass $c98353c5fa566290$export$494b42d9170c3705 {\n    constructor(){\n        this.containerLeftNode = document.getElementById(\"containerLeft\");\n        this.containerRightNode = document.getElementById(\"containerRight\");\n        // For Test - TBS only:\n        this.testBtnNode = document.getElementById(\"testBtn\");\n        this.backupBtnNode = document.getElementById(\"backupBtn\");\n        this.getServerBtnNode = document.getElementById(\"getServerBtn\");\n        this.getLocalBtnNode = document.getElementById(\"getLocalBtn\");\n    }\n    checkModuleLinkage = ()=>{\n        console.log(\"HELLO, AdminView is connected!\");\n    };\n    clearContainerLeft = ()=>{\n        this.containerLeftNode.innerHTML = \"\";\n    };\n    clearContainerRight = ()=>{\n        this.containerRightNode.innerHTML = \"\";\n    };\n    createHeaderRow = (doc)=>{\n        const newHeaderRow = document.createElement(\"tr\");\n        // create two empty elements and add as first child:\n        const newEmptyElement1 = document.createElement(\"th\");\n        newEmptyElement1.classList = \"db-section__table_cell\";\n        newHeaderRow.appendChild(newEmptyElement1);\n        const newEmptyElement2 = document.createElement(\"th\");\n        newEmptyElement2.classList = \"db-section__table_cell\";\n        newHeaderRow.appendChild(newEmptyElement2);\n        // Sort keys:\n        const keys = Object.keys(doc).sort();\n        // create header cells in loop\n        for (const key of keys){\n            const newHeaderElement = document.createElement(\"th\");\n            newHeaderElement.classList = \"db-section__table_cell\";\n            newHeaderElement.innerText = `${key}`;\n            newHeaderRow.appendChild(newHeaderElement);\n        }\n        // Add another empty element at the end of the row:\n        const newEmptyElement3 = document.createElement(\"th\");\n        newEmptyElement3.classList = \"db-section__table_cell\";\n        newHeaderRow.appendChild(newEmptyElement3);\n        return newHeaderRow;\n    };\n    // NOTE: isBackup - a backupInstancevalidator:\n    // 0 - dataInstance\n    // 1 - backupInstance\n    createDataRow = (doc, arrayName, isBackup)=>{\n        // FOR TBS ONLY:\n        // console.log(\"doc.id: \", doc.id);\n        // console.log(\"doc.docId: \", doc.docId);\n        const newDataRow = document.createElement(\"tr\");\n        // create two button elements and add as first child:\n        const newButtonElement1 = document.createElement(\"td\");\n        newButtonElement1.classList = \"db-section__table_cell\";\n        const newButton1 = document.createElement(\"button\");\n        newButton1.classList = \"db-section__table_btn add-btn\";\n        newButton1.id = `${isBackup}_${arrayName}_${doc.docId}_addBtn`;\n        newButton1.innerText = \"+\";\n        newButtonElement1.appendChild(newButton1);\n        newDataRow.appendChild(newButtonElement1);\n        const newButtonElement2 = document.createElement(\"td\");\n        newButtonElement2.classList = \"db-section__table_cell\";\n        const newButton2 = document.createElement(\"button\");\n        newButton2.classList = \"db-section__table_btn updt-btn\";\n        newButton2.id = `${isBackup}_${arrayName}_${doc.docId}_updtBtn`;\n        newButton2.innerText = \"u\";\n        newButtonElement2.appendChild(newButton2);\n        newDataRow.appendChild(newButtonElement2);\n        // Sort keys\n        const keys = Object.keys(doc).sort();\n        for (const key of keys){\n            const value = doc[key];\n            // Add table cell element, class and ID:\n            const newDataElement = document.createElement(\"td\");\n            newDataElement.classList = \"db-section__table_cell\";\n            newDataElement.id = `${isBackup}_${arrayName}_${doc.docId}_${key}`;\n            const newInput = document.createElement(\"input\");\n            newInput.type = \"text\";\n            newInput.id = `${isBackup}_${arrayName}_${doc.docId}_${key}_input`;\n            newInput.value = `${value}`;\n            newDataElement.appendChild(newInput);\n            newDataRow.appendChild(newDataElement);\n        }\n        // Add another button element to the end of row:\n        const newButtonElement3 = document.createElement(\"td\");\n        newButtonElement3.classList = \"db-section__table_cell\";\n        const newButton3 = document.createElement(\"button\");\n        newButton3.classList = \"db-section__table_btn del-btn\";\n        newButton3.id = `${isBackup}_${arrayName}_${doc.docId}_delBtn`;\n        newButton3.innerText = \"-\";\n        newButtonElement3.appendChild(newButton3);\n        newDataRow.appendChild(newButtonElement3);\n        return newDataRow;\n    };\n    createTable = (array, arrayName, isBackup)=>{\n        // Create new Table\n        const newTable = document.createElement(\"table\");\n        // create Header Row and add to Table:\n        const headerRow = this.createHeaderRow(array[0]);\n        newTable.appendChild(headerRow);\n        // create Data Rows and add to Table\n        for (const doc of array){\n            const dataRow = this.createDataRow(doc, arrayName, isBackup);\n            newTable.appendChild(dataRow);\n        }\n        return newTable;\n    };\n    renderTable = (array, arrayName, isBackup)=>{\n        const tableWrapper = document.createElement(\"div\");\n        tableWrapper.classList = \"db-section\";\n        const tableTitle = document.createElement(\"h2\");\n        tableTitle.classList = \"db-section__title\";\n        tableTitle.id = `${isBackup}_${arrayName}`;\n        tableTitle.innerText = arrayName;\n        const table = this.createTable(array, arrayName, isBackup);\n        table.classList = \"db-section__table\";\n        tableWrapper.appendChild(tableTitle);\n        tableWrapper.appendChild(table);\n        this.containerLeftNode.appendChild(tableWrapper);\n    };\n    createMenuBtn = (arrayName)=>{\n        const menuBtnWrapper = document.createElement(\"li\");\n        menuBtnWrapper.classList = \"menu-btn-wrapper\";\n        const menuBtn = document.createElement(\"a\");\n        menuBtn.classList = \"menu-btn\";\n        menuBtn.href = `#0_${arrayName}`;\n        menuBtn.innerText = `${arrayName}`;\n        menuBtnWrapper.appendChild(menuBtn);\n        return menuBtnWrapper;\n    };\n    createMenu = (collectionNames)=>{\n        // Init menu wrapper:\n        const menuWrapper = document.createElement(\"div\");\n        menuWrapper.classList = \"menu-section\";\n        // Add menu title:\n        const menuTitle = document.createElement(\"h2\");\n        menuTitle.classList = \"menu-title\";\n        menuTitle.innerText = \"Tables\";\n        menuWrapper.appendChild(menuTitle);\n        // Create menu list:\n        const menuList = document.createElement(\"ul\");\n        for (const arrayName of collectionNames){\n            const newBtn = this.createMenuBtn(arrayName);\n            menuList.appendChild(newBtn);\n        }\n        // Add menu to wrapper:\n        menuWrapper.appendChild(menuList);\n        return menuWrapper;\n    };\n    renderMenu = (collectionNames)=>{\n        this.clearContainerRight();\n        const menu = this.createMenu(collectionNames);\n        this.containerRightNode.appendChild(menu);\n    };\n}\n\n\n// SET MODEL MODULE:\nclass $2d48eafd16ddd7ce$export$36b3dcadd2d05b22 {\n    constructor(){}\n    checkModuleLinkage = ()=>{\n        console.log(\"HELLO, AdminModel is connected!\");\n    };\n    // New ID Generator:\n    generateNewId(length) {\n        return [\n            ...Array(length)\n        ].map(()=>Math.floor(Math.random() * 36).toString(36).toUpperCase()).join(\"\");\n    }\n}\n\n\n\nvar $keq33 = parcelRequire(\"keq33\");\n\nvar $bEzwx = parcelRequire(\"bEzwx\");\n\nvar $1ggDV = parcelRequire(\"1ggDV\");\nlet $2578ce392da55d05$export$195915748ed7aa38 = {\n    usersData: [\n        {\n            docId: \"eff81b76-d962-4f8f-99f6-abb605762c2e\",\n            transDate: \"20230815\",\n            transId: \"jkjur-tewvn-00001\",\n            userEmail: \"matt.y@aerosupplyplus.aero\",\n            userPhone: \"+1 898 9289289\",\n            custId: \"c001\",\n            userId: \"1001\",\n            userActive: true,\n            userName: \"Mattew Yampolski\",\n            userAdmin: true,\n            userAddress: \"2023, Cactus Road, Springdale, FL, 33761 USA\"\n        }\n    ],\n    customersData: [\n        {\n            docId: \"5480d75f-2b41-486f-bace-b55dcfd4c15d\",\n            paymentTerms: \"wire,card,net30\",\n            custKycChecked: \"true\",\n            custHandlingFee: 0.015,\n            custBillToAddress: \"2023, Cactus Road, Springdale, FL, 33761 USA\",\n            custEmail: \"supply@aerosupplyplus.aero\",\n            custLegalName: \"AeroSupplyPlus LLC\",\n            transDate: \"20230812\",\n            transId: \"jkjur-tewvn-00002\",\n            custPhone: \"+1 898 9289289\",\n            custCode: \"aespl\",\n            custAddress: \"2023, Cactus Road, Springdale, FL, 33761 USA\",\n            paymentMethod: \"card\",\n            custKycDate: \"20230812\",\n            active: true,\n            custId: \"c001\",\n            custOrders: \"\",\n            custContactId: \"1001\"\n        }\n    ],\n    cartsData: [\n        {\n            docId: \"63d6a14e-bd35-48b2-a2b1-58a6c561287b\",\n            itemId: \"2b336406-f54c-422b-a249-7507ab8975dc\",\n            qty: 2,\n            userId: \"1001\"\n        },\n        {\n            docId: \"f64f1f79-3926-44d4-8004-8a433e2b7bf1\",\n            itemId: \"55690c40-939e-4c92-b916-d329376a5a31\",\n            qty: 2,\n            userId: \"1001\"\n        },\n        {\n            docId: \"8440b2d7-bc37-4acb-9a72-609bc807d19d\",\n            qty: 2,\n            itemId: \"5b9f30c3-3b5e-466a-be00-7ce5098c230e\",\n            userId: \"1001\"\n        },\n        {\n            docId: \"e7cfdd35-a695-4e73-bd74-a6060ab0db1c\",\n            itemId: \"4c4d2d95-3dc3-40da-b6ef-3a24bca843d3\",\n            qty: 2,\n            userId: \"1001\"\n        },\n        {\n            docId: \"202f44cf-6bf7-4ef8-8db7-3b2367675fcd\",\n            itemId: \"0333afc6-cc1b-4d5f-80b4-e7a2e43e3fe5\",\n            userId: \"1001\",\n            qty: 2\n        }\n    ],\n    ordersData: [\n        {\n            docId: \"7bd041ab-953f-4d25-8f1e-1ad55d465249\",\n            orderPaymentDeadline: \"20230829\",\n            custId: \"c001\",\n            userId: \"1001\",\n            orderCurrency: \"$\",\n            orderPaymentDone: \"20230828\",\n            orderDateReady: \"20230828\",\n            orderPriceHandling: 378,\n            orderPriceTotal: 1375360,\n            transDate: \"20230828\",\n            orderPaymentMethod: \"card\",\n            orderDatePlaced: \"20230828\",\n            transId: \"jkjur-tewvn-00013\",\n            orderId: \"100004\",\n            orderPriceItems: 1374982,\n            orderDateCompleted: \"20230829\"\n        },\n        {\n            docId: \"a491193e-012a-402d-9209-4c2313226c85\",\n            orderCurrency: \"$\",\n            orderDateCompleted: \"20230829\",\n            userId: \"1001\",\n            orderId: \"100002\",\n            transDate: \"20230828\",\n            transId: \"jkjur-tewvn-00013\",\n            orderPaymentDeadline: \"20230829\",\n            orderPriceHandling: 378,\n            orderPriceTotal: 1375360,\n            orderDateReady: \"20230828\",\n            orderDatePlaced: \"20230828\",\n            orderPriceItems: 1374982,\n            orderPaymentMethod: \"card\",\n            custId: \"c001\",\n            orderPaymentDone: \"20230828\"\n        },\n        {\n            docId: \"ce89ecfa-66fb-41c0-98a0-7ef5f310c0ae\",\n            orderPaymentMethod: \"card\",\n            orderPaymentDone: \"20230828\",\n            orderCurrency: \"$\",\n            orderId: \"100003\",\n            transDate: \"20230828\",\n            userId: \"1001\",\n            transId: \"jkjur-tewvn-00013\",\n            orderDateCompleted: \"20230829\",\n            orderPriceTotal: 1375360,\n            orderDateReady: \"20230828\",\n            custId: \"c001\",\n            orderPriceItems: 1374982,\n            orderPaymentDeadline: \"20230829\",\n            orderPriceHandling: 378,\n            orderDatePlaced: \"20230828\"\n        },\n        {\n            docId: \"561b39ec-4e8e-458d-8eea-f7ece828aa24\",\n            orderDateCompleted: \"20230829\",\n            orderPriceItems: 1374982,\n            transDate: \"20230828\",\n            orderDatePlaced: \"20230828\",\n            orderDateReady: \"20230828\",\n            orderPaymentDeadline: \"20230829\",\n            transId: \"jkjur-tewvn-00013\",\n            userId: \"1001\",\n            orderCurrency: \"$\",\n            custId: \"c001\",\n            orderPaymentMethod: \"card\",\n            orderId: \"100001\",\n            orderPaymentDone: \"20230828\",\n            orderPriceTotal: 1375360,\n            orderPriceHandling: 378\n        },\n        {\n            docId: \"2f609735-177f-4a46-890b-29d1d35b8f8f\",\n            transId: \"jkjur-tewvn-00013\",\n            orderPriceHandling: 378,\n            orderPaymentMethod: \"card\",\n            orderPaymentDone: \"20230828\",\n            custId: \"c001\",\n            transDate: \"20230828\",\n            orderId: \"100005\",\n            orderCurrency: \"$\",\n            orderPaymentDeadline: \"20230829\",\n            orderPriceItems: 1374982,\n            orderDateReady: \"20230828\",\n            orderDateCompleted: \"20230829\",\n            userId: \"1001\",\n            orderPriceTotal: 1375360,\n            orderDatePlaced: \"20230828\"\n        }\n    ],\n    orderItemsData: [\n        {\n            docId: \"5237269d-ab38-4058-bca5-3503f46ddef0\",\n            qty: 2,\n            itemId: \"0032-0001-000\",\n            orderId: \"100001\",\n            reserved: \"\"\n        }\n    ],\n    productItems: [\n        {\n            docId: \"ef7a0a83-274b-478c-8c33-0dc1acb41b5f\",\n            itemCondition: \"New\",\n            itemImg: \"img_ac_737.jpeg\",\n            transDate: \"20230812\",\n            itemPrice: 67500000,\n            itemSN: \"various\",\n            itemCat: \"aircraft\",\n            itemPN: \"737-BBJ-824\",\n            itemLeadTime: \"quote\",\n            itemName: \"Boeing 737-8 BBJ\",\n            transId: \"jkjur-tewvn-00003\",\n            itemCurrency: \"$\",\n            itemId: \"5b9f30c3-3b5e-466a-be00-7ce5098c230e\",\n            itemCertification: \"EASA, FAA, UK CAA, CAAC\",\n            itemDescription: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Deleniti ab debitis quos autem? Soluta ut aut ab debitis nulla vel voluptates molestias at. Porro recusandae impedit inventore quo sunt delectus cumque, repellat similique mollitia, officiis, esse saepe? Praesentium dolores corporis sapiente cupiditate, aliquid nulla? Nisi, doloremque cum inventore exercitationem nulla quasi labore recusandae rem sed ipsam magnam quos est accusantium sint adipisci voluptas reiciendis natus ut dicta.\",\n            itemQty: 1\n        },\n        {\n            docId: \"80e088cf-09d3-4f96-9447-923a29ba5d44\",\n            itemImg: \"img_cabin_seat_business_01.jpeg\",\n            transDate: \"20230812\",\n            itemCurrency: \"$\",\n            itemLeadTime: \"on stock\",\n            itemName: \"Seat Solo Business Class\",\n            itemId: \"55690c40-939e-4c92-b916-d329376a5a31\",\n            itemQty: 52,\n            itemCondition: \"New\",\n            itemCertification: \"EASA, FAA, CAAC\",\n            transId: \"jkjur-tewvn-00003\",\n            itemDescription: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Deleniti ab debitis quos autem? Soluta ut aut ab debitis nulla vel voluptates molestias at. Porro recusandae impedit inventore quo sunt delectus cumque, repellat similique mollitia, officiis, esse saepe? Praesentium dolores corporis sapiente cupiditate, aliquid nulla? Nisi, doloremque cum inventore exercitationem nulla quasi labore recusandae rem sed ipsam magnam quos est accusantium sint adipisci voluptas reiciendis natus ut dicta.\",\n            itemPrice: 15750,\n            itemCat: \"component\",\n            itemSN: \"various\",\n            itemPN: \"025-BCS-1-217\"\n        },\n        {\n            docId: \"31172e69-5f20-4e75-8458-896759d02734\",\n            itemPN: \"012-737MAX-3254P184\",\n            itemCertification: \"N/A\",\n            transDate: \"20230812\",\n            itemQty: 100,\n            itemCondition: \"New\",\n            itemId: \"4c4d2d95-3dc3-40da-b6ef-3a24bca843d3\",\n            itemDescription: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Deleniti ab debitis quos autem? Soluta ut aut ab debitis nulla vel voluptates molestias at. Porro recusandae impedit inventore quo sunt delectus cumque, repellat similique mollitia, officiis, esse saepe? Praesentium dolores corporis sapiente cupiditate, aliquid nulla? Nisi, doloremque cum inventore exercitationem nulla quasi labore recusandae rem sed ipsam magnam quos est accusantium sint adipisci voluptas reiciendis natus ut dicta.\",\n            itemImg: \"img_book_00.jpeg\",\n            itemName: \"Manual Ground Handling Boeing 737MAX\",\n            itemCurrency: \"$\",\n            itemCat: \"manual\",\n            itemLeadTime: \"on stock\",\n            itemSN: \"various\",\n            itemPrice: 117,\n            transId: \"jkjur-tewvn-00003\"\n        },\n        {\n            docId: \"b21a23e9-7981-4f88-aa04-b63567722e86\",\n            itemName: \"Bell 5X VIP\",\n            itemDescription: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Deleniti ab debitis quos autem? Soluta ut aut ab debitis nulla vel voluptates molestias at. Porro recusandae impedit inventore quo sunt delectus cumque, repellat similique mollitia, officiis, esse saepe? Praesentium dolores corporis sapiente cupiditate, aliquid nulla? Nisi, doloremque cum inventore exercitationem nulla quasi labore recusandae rem sed ipsam magnam quos est accusantium sint adipisci voluptas reiciendis natus ut dicta.\",\n            itemId: \"0333afc6-cc1b-4d5f-80b4-e7a2e43e3fe5\",\n            itemCondition: \"New\",\n            transId: \"jkjur-tewvn-00003\",\n            itemPrice: 7500000,\n            itemQty: 1,\n            itemPN: \"B5X-VIP-100\",\n            itemCurrency: \"$\",\n            itemLeadTime: \"quote\",\n            itemImg: \"img_ac_heli_2.jpeg\",\n            itemSN: \"various\",\n            transDate: \"20230812\",\n            itemCertification: \"EASA, FAA, CAAC\",\n            itemCat: \"aircraft\"\n        },\n        {\n            docId: \"2e9f088b-fc0d-435e-bdd6-c09dfba6f062\",\n            itemDescription: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Deleniti ab debitis quos autem? Soluta ut aut ab debitis nulla vel voluptates molestias at. Porro recusandae impedit inventore quo sunt delectus cumque, repellat similique mollitia, officiis, esse saepe? Praesentium dolores corporis sapiente cupiditate, aliquid nulla? Nisi, doloremque cum inventore exercitationem nulla quasi labore recusandae rem sed ipsam magnam quos est accusantium sint adipisci voluptas reiciendis natus ut dicta.\",\n            itemLeadTime: \"on stock\",\n            itemCondition: \"New\",\n            itemName: \"Altimeter STBY\",\n            itemId: \"2b336406-f54c-422b-a249-7507ab8975dc\",\n            transDate: \"20230812\",\n            itemQty: 10,\n            itemCat: \"component\",\n            itemImg: \"img_cockpit_altimeter_1.jpeg\",\n            itemPN: \"HON-17-974-575\",\n            itemCurrency: \"$\",\n            itemCertification: \"EASA, FAA, CAAC\",\n            itemSN: \"various\",\n            itemPrice: 9130,\n            transId: \"jkjur-tewvn-00003\"\n        }\n    ]\n};\n\n\nlet $b7e605c5c1539f70$var$isViewBackup = false;\nlet $b7e605c5c1539f70$var$dataInstance = {};\nclass $b7e605c5c1539f70$export$c9bc273e9beeea2c {\n    constructor(){\n        this.adminView = new (0, $c98353c5fa566290$export$494b42d9170c3705)();\n        this.adminModel = new (0, $2d48eafd16ddd7ce$export$36b3dcadd2d05b22)();\n        this.adminFirebase = new (0, $keq33.ModelFirebase)();\n    }\n    initializeAppMain = async ()=>{\n        console.log(\"HELLO! INIT CARRIED OUT SUCCESFULLY\");\n        this.adminView.checkModuleLinkage();\n        this.adminModel.checkModuleLinkage();\n        this.adminFirebase.checkModuleLinkage();\n        console.log(\"Action: Import from Firestore to dataInstance:\");\n        for (const collectionName of (0, $1ggDV.dbCollectionNames))$b7e605c5c1539f70$var$dataInstance[collectionName] = await this.adminFirebase.get(collectionName);\n        this.displayDataInstanceTables();\n        this.adminView.renderMenu((0, $1ggDV.dbCollectionNames));\n        this.attachEventListeners();\n    };\n    generateUniqueId() {\n        return (0, $bEzwx.default)();\n    }\n    // NOTE: isBackup - a backupInstancevalidator:\n    // 0 - dataInstance\n    // 1 - backupInstance\n    displayDataInstanceTables = ()=>{\n        this.adminView.clearContainerLeft();\n        for (const collectionName of (0, $1ggDV.dbCollectionNames))this.adminView.renderTable($b7e605c5c1539f70$var$dataInstance[collectionName], collectionName, 0);\n    };\n    displayBackupAndInstanceTables = ()=>{\n        this.adminView.clearContainerLeft();\n        for (const collectionName of (0, $1ggDV.dbCollectionNames)){\n            this.adminView.renderTable((0, $2578ce392da55d05$export$195915748ed7aa38)[collectionName], collectionName, 1);\n            this.adminView.renderTable($b7e605c5c1539f70$var$dataInstance[collectionName], collectionName, 0);\n        }\n    };\n    // Functions to split elemnt ID (${isBackup}_${arrayName}_${doc.docId}_${key})\n    // Get Collection (array name) - [0]-th element\n    getInstanceFromId = (idSting)=>{\n        return idSting.split(\"_\")[0];\n    };\n    // Get Collection (array name) - [0]-th element\n    getCollectionFromId = (idSting)=>{\n        return idSting.split(\"_\")[1];\n    };\n    // Get Document ID (object) - [1]-st element\n    getDocFromId = (idSting)=>{\n        return idSting.split(\"_\")[2];\n    };\n    // Get Field (key name) - [2]-nd element\n    getKeyFromId = (idSting)=>{\n        return idSting.split(\"_\")[3];\n    };\n    // Add duplicate document (element/object)\n    cloneDocument(array, objectId) {\n        // Find the object by ID\n        const originalObject = array.find((item)=>item.docId === objectId);\n        if (!originalObject) {\n            console.log(\"Object with provided ID is not located.\");\n            return;\n        }\n        //  Clone object\n        const clonedObject = JSON.parse(JSON.stringify(originalObject));\n        // Modify / create unique ID\n        // clonedObject.docId = this.adminModel.generateNewId(12);\n        clonedObject.docId = this.generateUniqueId();\n        // return cloned objc\n        return clonedObject;\n    }\n    handleAddBtnClick = (button)=>{\n        const isBackup = this.getInstanceFromId(button.id);\n        const elementCollection = this.getCollectionFromId(button.id);\n        const elementId = this.getDocFromId(button.id);\n        console.log(`Request to clone element in ${elementCollection}, docId: ${elementId}.`);\n        let affectedArray = [];\n        let sisterArray = [];\n        if (isBackup === \"1\") {\n            affectedArray = (0, $2578ce392da55d05$export$195915748ed7aa38)[elementCollection];\n            sisterArray = $b7e605c5c1539f70$var$dataInstance[elementCollection];\n        } else affectedArray = $b7e605c5c1539f70$var$dataInstance[elementCollection];\n        const clonedObject = this.cloneDocument(affectedArray, elementId);\n        console.log(\"clonedObject: \", clonedObject);\n        // If backupInstance, also add document to dataIntance:\n        if (isBackup === \"1\") sisterArray.push(clonedObject);\n        console.log(`trying to include clonedObject: ${clonedObject} into Collection ${elementCollection}`);\n        // try to add new doc (clonedObject) to Firestore (elementCollection):\n        this.adminFirebase.addDocToFirestore(elementCollection, clonedObject);\n        affectedArray.push(clonedObject);\n        if ($b7e605c5c1539f70$var$isViewBackup) this.displayBackupAndInstanceTables();\n        else this.displayDataInstanceTables();\n        return;\n    };\n    handleUpdateBtnClick = (button)=>{\n        const isBackup = this.getInstanceFromId(button.id);\n        const elementCollection = this.getCollectionFromId(button.id);\n        const elementId = this.getDocFromId(button.id);\n        console.log(`Request to update element in ${elementCollection}, docId: ${elementId}.`);\n        let affectedArray = [];\n        if (isBackup === \"1\") affectedArray = (0, $2578ce392da55d05$export$195915748ed7aa38)[elementCollection];\n        else affectedArray = $b7e605c5c1539f70$var$dataInstance[elementCollection];\n        // Locate the object/document to update:\n        const docToUpdate = affectedArray.find((doc)=>doc.docId === elementId);\n        if (!docToUpdate) {\n            console.log(\"Not found element/document with docId = \", elementId);\n            return;\n        }\n        // Locate table row with clicked button\n        const tableRow = button.closest(\"tr\");\n        const cells = tableRow.querySelectorAll(\"td\");\n        // Locate all input fields\n        cells.forEach((cell)=>{\n            const inputField = cell.querySelector(\"input\");\n            if (inputField) {\n                const keyName = this.getKeyFromId(inputField.id);\n                const value = inputField.value;\n                docToUpdate[keyName] = value;\n            }\n        });\n        console.log(\"docToUpdate: \", docToUpdate);\n        // If not a backupInstance, also update Firestore:\n        if (isBackup === \"0\") {\n            console.log(`trying to update element/doc with docId: ${elementId} in Collection ${elementCollection}`);\n            // try to update doc with elementId (docId) in Firestore collection:\n            this.adminFirebase.updateDocInFirestore(elementCollection, docToUpdate);\n        }\n        if ($b7e605c5c1539f70$var$isViewBackup) this.displayBackupAndInstanceTables();\n        else this.displayDataInstanceTables();\n    };\n    handleDeleteBtnClick = (button)=>{\n        const isBackup = this.getInstanceFromId(button.id);\n        const elementCollection = this.getCollectionFromId(button.id);\n        const elementId = this.getDocFromId(button.id);\n        let affectedArray = [];\n        console.log(`Request to delete element in ${elementCollection}, docId: ${elementId}.`);\n        if (isBackup === \"1\") affectedArray = (0, $2578ce392da55d05$export$195915748ed7aa38)[elementCollection];\n        else {\n            affectedArray = $b7e605c5c1539f70$var$dataInstance[elementCollection];\n            // If not a backupInstance, remove document from Firestore:\n            console.log(`trying to delete element/doc with docId: ${elementId} from Collection ${elementCollection}`);\n            // try to delete doc with elementId (docId) from Firestore collection:\n            this.adminFirebase.deleteDocFromFirestore(elementCollection, elementId);\n        }\n        // Remove element/doc from affected array/collection using .splice() method\n        const index = affectedArray.findIndex((doc)=>doc.docId === elementId);\n        if (index !== -1) {\n            affectedArray.splice(index, 1);\n            console.log(\"Deleted element/document with docId = \", elementId);\n        } else console.log(\"Not found element/document with docId = \", elementId);\n        if ($b7e605c5c1539f70$var$isViewBackup) this.displayBackupAndInstanceTables();\n        else this.displayDataInstanceTables();\n    };\n    handleButtonsClick = (event)=>{\n        const target = event.target;\n        if (target.classList.contains(\"add-btn\")) this.handleAddBtnClick(target);\n        if (target.classList.contains(\"updt-btn\")) this.handleUpdateBtnClick(target);\n        if (target.classList.contains(\"del-btn\")) this.handleDeleteBtnClick(target);\n    };\n    attachEventListeners() {\n        this.adminView.containerLeftNode.addEventListener(\"click\", this.handleButtonsClick);\n        this.adminView.backupBtnNode.addEventListener(\"click\", async ()=>{\n            console.log(\"call backupData function\");\n            $b7e605c5c1539f70$var$backupData($b7e605c5c1539f70$var$dataInstance);\n        });\n        this.adminView.getLocalBtnNode.addEventListener(\"click\", async ()=>{\n            console.log(\"Action called: render backup and server data tables.\");\n            this.displayBackupAndInstanceTables();\n            $b7e605c5c1539f70$var$isViewBackup = true;\n        });\n        this.adminView.getServerBtnNode.addEventListener(\"click\", async ()=>{\n            console.log(\"Action called: render server data tables.\");\n            this.displayDataInstanceTables();\n            $b7e605c5c1539f70$var$isViewBackup = false;\n        });\n        // TEST AND TBS - REMOVE IN PRODUCTION\n        this.adminView.testBtnNode.addEventListener(\"click\", async ()=>{\n            console.log(\"Action called: TEST COMMAND\");\n            console.log(\"Imported backupInstance: \", (0, $2578ce392da55d05$export$195915748ed7aa38));\n        });\n    }\n}\n// // FUNCTIONS: SUPPORT AND TBS\nfunction $b7e605c5c1539f70$var$backupData(array) {\n    // convert array to JSON format\n    const jsonString = JSON.stringify(array, null, 2);\n    //  Create a blob object\n    const blob = new Blob([\n        jsonString\n    ], {\n        type: \"application/json\"\n    });\n    // Create URL for blob\n    const url = URL.createObjectURL(blob);\n    // Set timing\n    const t = Date.now();\n    // Create an ancor element\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `backup-${t}.json`;\n    // display backup file name\n    console.log(`data saved to file 'backup-${t}.json'`);\n    // Trigger the download\n    document.body.appendChild(a);\n    a.click();\n    // clean up\n    window.URL.revokeObjectURL(url);\n    document.body.removeChild(a);\n}\n// THIS TEST FOR FETCHING BACKUP DATA WAS NOT PASSED - ERROR - TBD\nasync function $b7e605c5c1539f70$var$fetchBackupData() {\n    try {\n        const response = await fetch(\"../js/backup.json\");\n        // Log response object\n        console.log(\"Fetch response: \", response);\n        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error(\"Error fetching data: \", error);\n    }\n}\n\n\nconst $a6a09193ec6dface$var$adminApp = new (0, $b7e605c5c1539f70$export$c9bc273e9beeea2c)();\ntry {\n    $a6a09193ec6dface$var$adminApp.initializeAppMain();\n} catch (error) {\n    console.error(\"An error occured duting app initialization:\", error);\n    alert(\"Something went wrong. Please contact the app admin or try again later.\");\n}\n\n\n//# sourceMappingURL=admin.c15f49dd.js.map\n","import { AdminController } from \"./admin-controller.js\";\n\nconst adminApp = new AdminController();\n\ntry {\n    adminApp.initializeAppMain();\n} catch (error) {\n    console.error(\"An error occured duting app initialization:\", error);\n    alert(\n        \"Something went wrong. Please contact the app admin or try again later.\"\n    );\n}\n","import { AdminView } from \"./admin-view.js\";\nimport { AdminModel } from \"./admin-model.js\";\nimport { ModelFirebase } from \"../common/model-firebase.js\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { dbCollectionNames } from \"../common/constants.js\";\n\nlet isViewBackup = false;\nlet dataInstance = {};\nimport { backupInstance } from \"../../data/backup.js\";\n\n// TEST AND TBS - REMOVE IN PRODUCTION\n\nexport class AdminController {\n    constructor() {\n        this.adminView = new AdminView();\n        this.adminModel = new AdminModel();\n        this.adminFirebase = new ModelFirebase();\n    }\n\n    initializeAppMain = async () => {\n        console.log(\"HELLO! INIT CARRIED OUT SUCCESFULLY\");\n        this.adminView.checkModuleLinkage();\n        this.adminModel.checkModuleLinkage();\n        this.adminFirebase.checkModuleLinkage();\n\n        console.log(\"Action: Import from Firestore to dataInstance:\");\n        for (const collectionName of dbCollectionNames) {\n            dataInstance[collectionName] = await this.adminFirebase.get(\n                collectionName\n            );\n        }\n\n        this.displayDataInstanceTables();\n\n        this.adminView.renderMenu(dbCollectionNames);\n\n        this.attachEventListeners();\n    };\n\n    generateUniqueId() {\n        return uuidv4();\n    }\n\n    // NOTE: isBackup - a backupInstancevalidator:\n    // 0 - dataInstance\n    // 1 - backupInstance\n    displayDataInstanceTables = () => {\n        this.adminView.clearContainerLeft();\n        for (const collectionName of dbCollectionNames) {\n            this.adminView.renderTable(\n                dataInstance[collectionName],\n                collectionName,\n                0\n            );\n        }\n    };\n\n    displayBackupAndInstanceTables = () => {\n        this.adminView.clearContainerLeft();\n        for (const collectionName of dbCollectionNames) {\n            this.adminView.renderTable(\n                backupInstance[collectionName],\n                collectionName,\n                1\n            );\n            this.adminView.renderTable(\n                dataInstance[collectionName],\n                collectionName,\n                0\n            );\n        }\n    };\n\n    // Functions to split elemnt ID (${isBackup}_${arrayName}_${doc.docId}_${key})\n    // Get Collection (array name) - [0]-th element\n    getInstanceFromId = (idSting) => {\n        return idSting.split(\"_\")[0];\n    };\n\n    // Get Collection (array name) - [0]-th element\n    getCollectionFromId = (idSting) => {\n        return idSting.split(\"_\")[1];\n    };\n\n    // Get Document ID (object) - [1]-st element\n    getDocFromId = (idSting) => {\n        return idSting.split(\"_\")[2];\n    };\n\n    // Get Field (key name) - [2]-nd element\n    getKeyFromId = (idSting) => {\n        return idSting.split(\"_\")[3];\n    };\n\n    // Add duplicate document (element/object)\n    cloneDocument(array, objectId) {\n        // Find the object by ID\n        const originalObject = array.find((item) => item.docId === objectId);\n        if (!originalObject) {\n            console.log(\"Object with provided ID is not located.\");\n            return;\n        }\n\n        //  Clone object\n        const clonedObject = JSON.parse(JSON.stringify(originalObject));\n\n        // Modify / create unique ID\n        // clonedObject.docId = this.adminModel.generateNewId(12);\n        clonedObject.docId = this.generateUniqueId();\n\n        // return cloned objc\n        return clonedObject;\n    }\n\n    handleAddBtnClick = (button) => {\n        const isBackup = this.getInstanceFromId(button.id);\n        const elementCollection = this.getCollectionFromId(button.id);\n        const elementId = this.getDocFromId(button.id);\n        console.log(\n            `Request to clone element in ${elementCollection}, docId: ${elementId}.`\n        );\n        let affectedArray = [];\n        let sisterArray = [];\n\n        if (isBackup === \"1\") {\n            affectedArray = backupInstance[elementCollection];\n            sisterArray = dataInstance[elementCollection];\n        } else {\n            affectedArray = dataInstance[elementCollection];\n        }\n\n        const clonedObject = this.cloneDocument(affectedArray, elementId);\n        console.log(\"clonedObject: \", clonedObject);\n\n        // If backupInstance, also add document to dataIntance:\n        if (isBackup === \"1\") {\n            sisterArray.push(clonedObject);\n        }\n\n        console.log(\n            `trying to include clonedObject: ${clonedObject} into Collection ${elementCollection}`\n        );\n        // try to add new doc (clonedObject) to Firestore (elementCollection):\n        this.adminFirebase.addDocToFirestore(elementCollection, clonedObject);\n\n        affectedArray.push(clonedObject);\n\n        if (isViewBackup) {\n            this.displayBackupAndInstanceTables();\n        } else {\n            this.displayDataInstanceTables();\n        }\n        return;\n    };\n\n    handleUpdateBtnClick = (button) => {\n        const isBackup = this.getInstanceFromId(button.id);\n        const elementCollection = this.getCollectionFromId(button.id);\n        const elementId = this.getDocFromId(button.id);\n        console.log(\n            `Request to update element in ${elementCollection}, docId: ${elementId}.`\n        );\n\n        let affectedArray = [];\n        if (isBackup === \"1\") {\n            affectedArray = backupInstance[elementCollection];\n        } else {\n            affectedArray = dataInstance[elementCollection];\n        }\n\n        // Locate the object/document to update:\n        const docToUpdate = affectedArray.find(\n            (doc) => doc.docId === elementId\n        );\n\n        if (!docToUpdate) {\n            console.log(\"Not found element/document with docId = \", elementId);\n            return;\n        }\n\n        // Locate table row with clicked button\n        const tableRow = button.closest(\"tr\");\n        const cells = tableRow.querySelectorAll(\"td\");\n\n        // Locate all input fields\n        cells.forEach((cell) => {\n            const inputField = cell.querySelector(\"input\");\n            if (inputField) {\n                const keyName = this.getKeyFromId(inputField.id);\n                const value = inputField.value;\n                docToUpdate[keyName] = value;\n            }\n        });\n\n        console.log(\"docToUpdate: \", docToUpdate);\n\n        // If not a backupInstance, also update Firestore:\n        if (isBackup === \"0\") {\n            console.log(\n                `trying to update element/doc with docId: ${elementId} in Collection ${elementCollection}`\n            );\n            // try to update doc with elementId (docId) in Firestore collection:\n            this.adminFirebase.updateDocInFirestore(\n                elementCollection,\n                docToUpdate\n            );\n        }\n\n        if (isViewBackup) {\n            this.displayBackupAndInstanceTables();\n        } else {\n            this.displayDataInstanceTables();\n        }\n    };\n\n    handleDeleteBtnClick = (button) => {\n        const isBackup = this.getInstanceFromId(button.id);\n        const elementCollection = this.getCollectionFromId(button.id);\n        const elementId = this.getDocFromId(button.id);\n        let affectedArray = [];\n\n        console.log(\n            `Request to delete element in ${elementCollection}, docId: ${elementId}.`\n        );\n\n        if (isBackup === \"1\") {\n            affectedArray = backupInstance[elementCollection];\n        } else {\n            affectedArray = dataInstance[elementCollection];\n            // If not a backupInstance, remove document from Firestore:\n            console.log(\n                `trying to delete element/doc with docId: ${elementId} from Collection ${elementCollection}`\n            );\n            // try to delete doc with elementId (docId) from Firestore collection:\n            this.adminFirebase.deleteDocFromFirestore(\n                elementCollection,\n                elementId\n            );\n        }\n\n        // Remove element/doc from affected array/collection using .splice() method\n        const index = affectedArray.findIndex((doc) => doc.docId === elementId);\n\n        if (index !== -1) {\n            affectedArray.splice(index, 1);\n            console.log(\"Deleted element/document with docId = \", elementId);\n        } else {\n            console.log(\"Not found element/document with docId = \", elementId);\n        }\n        if (isViewBackup) {\n            this.displayBackupAndInstanceTables();\n        } else {\n            this.displayDataInstanceTables();\n        }\n    };\n\n    handleButtonsClick = (event) => {\n        const target = event.target;\n\n        if (target.classList.contains(\"add-btn\")) {\n            this.handleAddBtnClick(target);\n        }\n\n        if (target.classList.contains(\"updt-btn\")) {\n            this.handleUpdateBtnClick(target);\n        }\n\n        if (target.classList.contains(\"del-btn\")) {\n            this.handleDeleteBtnClick(target);\n        }\n    };\n\n    attachEventListeners() {\n        this.adminView.containerLeftNode.addEventListener(\n            \"click\",\n            this.handleButtonsClick\n        );\n\n        this.adminView.backupBtnNode.addEventListener(\"click\", async () => {\n            console.log(\"call backupData function\");\n\n            backupData(dataInstance);\n        });\n\n        this.adminView.getLocalBtnNode.addEventListener(\"click\", async () => {\n            console.log(\"Action called: render backup and server data tables.\");\n\n            this.displayBackupAndInstanceTables();\n            isViewBackup = true;\n        });\n\n        this.adminView.getServerBtnNode.addEventListener(\"click\", async () => {\n            console.log(\"Action called: render server data tables.\");\n\n            this.displayDataInstanceTables();\n            isViewBackup = false;\n        });\n\n        // TEST AND TBS - REMOVE IN PRODUCTION\n        this.adminView.testBtnNode.addEventListener(\"click\", async () => {\n            console.log(\"Action called: TEST COMMAND\");\n            console.log(\"Imported backupInstance: \", backupInstance);\n        });\n    }\n}\n\n// // FUNCTIONS: SUPPORT AND TBS\n\nfunction backupData(array) {\n    // convert array to JSON format\n    const jsonString = JSON.stringify(array, null, 2);\n\n    //  Create a blob object\n    const blob = new Blob([jsonString], { type: \"application/json\" });\n\n    // Create URL for blob\n    const url = URL.createObjectURL(blob);\n\n    // Set timing\n    const t = Date.now();\n\n    // Create an ancor element\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `backup-${t}.json`;\n\n    // display backup file name\n    console.log(`data saved to file 'backup-${t}.json'`);\n\n    // Trigger the download\n    document.body.appendChild(a);\n    a.click();\n\n    // clean up\n    window.URL.revokeObjectURL(url);\n    document.body.removeChild(a);\n}\n\n// THIS TEST FOR FETCHING BACKUP DATA WAS NOT PASSED - ERROR - TBD\nasync function fetchBackupData() {\n    try {\n        const response = await fetch(\"../js/backup.json\");\n\n        // Log response object\n        console.log(\"Fetch response: \", response);\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error(\"Error fetching data: \", error);\n    }\n}\n","// SET VIEW MODULE:\nexport class AdminView {\n    constructor() {\n        this.containerLeftNode = document.getElementById(\"containerLeft\");\n        this.containerRightNode = document.getElementById(\"containerRight\");\n\n        // For Test - TBS only:\n        this.testBtnNode = document.getElementById(\"testBtn\");\n        this.backupBtnNode = document.getElementById(\"backupBtn\");\n        this.getServerBtnNode = document.getElementById(\"getServerBtn\");\n        this.getLocalBtnNode = document.getElementById(\"getLocalBtn\");\n    }\n    checkModuleLinkage = () => {\n        console.log(\"HELLO, AdminView is connected!\");\n    };\n\n    clearContainerLeft = () => {\n        this.containerLeftNode.innerHTML = \"\";\n    };\n\n    clearContainerRight = () => {\n        this.containerRightNode.innerHTML = \"\";\n    };\n\n    createHeaderRow = (doc) => {\n        const newHeaderRow = document.createElement(\"tr\");\n\n        // create two empty elements and add as first child:\n        const newEmptyElement1 = document.createElement(\"th\");\n        newEmptyElement1.classList = \"db-section__table_cell\";\n        newHeaderRow.appendChild(newEmptyElement1);\n        const newEmptyElement2 = document.createElement(\"th\");\n        newEmptyElement2.classList = \"db-section__table_cell\";\n        newHeaderRow.appendChild(newEmptyElement2);\n\n        // Sort keys:\n        const keys = Object.keys(doc).sort();\n\n        // create header cells in loop\n        for (const key of keys) {\n            const newHeaderElement = document.createElement(\"th\");\n            newHeaderElement.classList = \"db-section__table_cell\";\n            newHeaderElement.innerText = `${key}`;\n            newHeaderRow.appendChild(newHeaderElement);\n        }\n\n        // Add another empty element at the end of the row:\n        const newEmptyElement3 = document.createElement(\"th\");\n        newEmptyElement3.classList = \"db-section__table_cell\";\n        newHeaderRow.appendChild(newEmptyElement3);\n\n        return newHeaderRow;\n    };\n\n    // NOTE: isBackup - a backupInstancevalidator:\n    // 0 - dataInstance\n    // 1 - backupInstance\n    createDataRow = (doc, arrayName, isBackup) => {\n        // FOR TBS ONLY:\n        // console.log(\"doc.id: \", doc.id);\n        // console.log(\"doc.docId: \", doc.docId);\n\n        const newDataRow = document.createElement(\"tr\");\n\n        // create two button elements and add as first child:\n        const newButtonElement1 = document.createElement(\"td\");\n        newButtonElement1.classList = \"db-section__table_cell\";\n        const newButton1 = document.createElement(\"button\");\n        newButton1.classList = \"db-section__table_btn add-btn\";\n        newButton1.id = `${isBackup}_${arrayName}_${doc.docId}_addBtn`;\n        newButton1.innerText = \"+\";\n        newButtonElement1.appendChild(newButton1);\n        newDataRow.appendChild(newButtonElement1);\n\n        const newButtonElement2 = document.createElement(\"td\");\n        newButtonElement2.classList = \"db-section__table_cell\";\n        const newButton2 = document.createElement(\"button\");\n        newButton2.classList = \"db-section__table_btn updt-btn\";\n        newButton2.id = `${isBackup}_${arrayName}_${doc.docId}_updtBtn`;\n        newButton2.innerText = \"u\";\n        newButtonElement2.appendChild(newButton2);\n        newDataRow.appendChild(newButtonElement2);\n\n        // Sort keys\n        const keys = Object.keys(doc).sort();\n        for (const key of keys) {\n            const value = doc[key];\n\n            // Add table cell element, class and ID:\n            const newDataElement = document.createElement(\"td\");\n            newDataElement.classList = \"db-section__table_cell\";\n            newDataElement.id = `${isBackup}_${arrayName}_${doc.docId}_${key}`;\n\n            const newInput = document.createElement(\"input\");\n            newInput.type = \"text\";\n            newInput.id = `${isBackup}_${arrayName}_${doc.docId}_${key}_input`;\n            newInput.value = `${value}`;\n\n            newDataElement.appendChild(newInput);\n            newDataRow.appendChild(newDataElement);\n        }\n\n        // Add another button element to the end of row:\n        const newButtonElement3 = document.createElement(\"td\");\n        newButtonElement3.classList = \"db-section__table_cell\";\n        const newButton3 = document.createElement(\"button\");\n        newButton3.classList = \"db-section__table_btn del-btn\";\n        newButton3.id = `${isBackup}_${arrayName}_${doc.docId}_delBtn`;\n        newButton3.innerText = \"-\";\n        newButtonElement3.appendChild(newButton3);\n        newDataRow.appendChild(newButtonElement3);\n\n        return newDataRow;\n    };\n\n    createTable = (array, arrayName, isBackup) => {\n        // Create new Table\n        const newTable = document.createElement(\"table\");\n\n        // create Header Row and add to Table:\n        const headerRow = this.createHeaderRow(array[0]);\n        newTable.appendChild(headerRow);\n\n        // create Data Rows and add to Table\n        for (const doc of array) {\n            const dataRow = this.createDataRow(doc, arrayName, isBackup);\n            newTable.appendChild(dataRow);\n        }\n        return newTable;\n    };\n\n    renderTable = (array, arrayName, isBackup) => {\n        const tableWrapper = document.createElement(\"div\");\n        tableWrapper.classList = \"db-section\";\n\n        const tableTitle = document.createElement(\"h2\");\n        tableTitle.classList = \"db-section__title\";\n        tableTitle.id = `${isBackup}_${arrayName}`;\n        tableTitle.innerText = arrayName;\n\n        const table = this.createTable(array, arrayName, isBackup);\n        table.classList = \"db-section__table\";\n\n        tableWrapper.appendChild(tableTitle);\n        tableWrapper.appendChild(table);\n\n        this.containerLeftNode.appendChild(tableWrapper);\n    };\n\n    createMenuBtn = (arrayName) => {\n        const menuBtnWrapper = document.createElement(\"li\");\n        menuBtnWrapper.classList = \"menu-btn-wrapper\";\n\n        const menuBtn = document.createElement(\"a\");\n        menuBtn.classList = \"menu-btn\";\n        menuBtn.href = `#0_${arrayName}`;\n        menuBtn.innerText = `${arrayName}`;\n\n        menuBtnWrapper.appendChild(menuBtn);\n        return menuBtnWrapper;\n    };\n\n    createMenu = (collectionNames) => {\n        // Init menu wrapper:\n        const menuWrapper = document.createElement(\"div\");\n        menuWrapper.classList = \"menu-section\";\n\n        // Add menu title:\n        const menuTitle = document.createElement(\"h2\");\n        menuTitle.classList = \"menu-title\";\n        menuTitle.innerText = \"Tables\";\n        menuWrapper.appendChild(menuTitle);\n\n        // Create menu list:\n        const menuList = document.createElement(\"ul\");\n\n        for (const arrayName of collectionNames) {\n            const newBtn = this.createMenuBtn(arrayName);\n            menuList.appendChild(newBtn);\n        }\n\n        // Add menu to wrapper:\n        menuWrapper.appendChild(menuList);\n\n        return menuWrapper;\n    };\n\n    renderMenu = (collectionNames) => {\n        this.clearContainerRight();\n        const menu = this.createMenu(collectionNames);\n        this.containerRightNode.appendChild(menu);\n    };\n}\n","// SET MODEL MODULE:\nexport class AdminModel {\n    constructor() {}\n    checkModuleLinkage = () => {\n        console.log(\"HELLO, AdminModel is connected!\");\n    };\n\n    // New ID Generator:\n    generateNewId(length) {\n        return [...Array(length)]\n            .map(() =>\n                Math.floor(Math.random() * 36)\n                    .toString(36)\n                    .toUpperCase()\n            )\n            .join(\"\");\n    }\n}\n","export let backupInstance = {\n    usersData: [\n        {\n            docId: \"eff81b76-d962-4f8f-99f6-abb605762c2e\",\n            transDate: \"20230815\",\n            transId: \"jkjur-tewvn-00001\",\n            userEmail: \"matt.y@aerosupplyplus.aero\",\n            userPhone: \"+1 898 9289289\",\n            custId: \"c001\",\n            userId: \"1001\",\n            userActive: true,\n            userName: \"Mattew Yampolski\",\n            userAdmin: true,\n            userAddress: \"2023, Cactus Road, Springdale, FL, 33761 USA\",\n        },\n    ],\n    customersData: [\n        {\n            docId: \"5480d75f-2b41-486f-bace-b55dcfd4c15d\",\n            paymentTerms: \"wire,card,net30\",\n            custKycChecked: \"true\",\n            custHandlingFee: 0.015,\n            custBillToAddress: \"2023, Cactus Road, Springdale, FL, 33761 USA\",\n            custEmail: \"supply@aerosupplyplus.aero\",\n            custLegalName: \"AeroSupplyPlus LLC\",\n            transDate: \"20230812\",\n            transId: \"jkjur-tewvn-00002\",\n            custPhone: \"+1 898 9289289\",\n            custCode: \"aespl\",\n            custAddress: \"2023, Cactus Road, Springdale, FL, 33761 USA\",\n            paymentMethod: \"card\",\n            custKycDate: \"20230812\",\n            active: true,\n            custId: \"c001\",\n            custOrders: \"\",\n            custContactId: \"1001\",\n        },\n    ],\n    cartsData: [\n        {\n            docId: \"63d6a14e-bd35-48b2-a2b1-58a6c561287b\",\n            itemId: \"2b336406-f54c-422b-a249-7507ab8975dc\",\n            qty: 2,\n            userId: \"1001\",\n        },\n        {\n            docId: \"f64f1f79-3926-44d4-8004-8a433e2b7bf1\",\n            itemId: \"55690c40-939e-4c92-b916-d329376a5a31\",\n            qty: 2,\n            userId: \"1001\",\n        },\n        {\n            docId: \"8440b2d7-bc37-4acb-9a72-609bc807d19d\",\n            qty: 2,\n            itemId: \"5b9f30c3-3b5e-466a-be00-7ce5098c230e\",\n            userId: \"1001\",\n        },\n        {\n            docId: \"e7cfdd35-a695-4e73-bd74-a6060ab0db1c\",\n            itemId: \"4c4d2d95-3dc3-40da-b6ef-3a24bca843d3\",\n            qty: 2,\n            userId: \"1001\",\n        },\n        {\n            docId: \"202f44cf-6bf7-4ef8-8db7-3b2367675fcd\",\n            itemId: \"0333afc6-cc1b-4d5f-80b4-e7a2e43e3fe5\",\n            userId: \"1001\",\n            qty: 2,\n        },\n    ],\n    ordersData: [\n        {\n            docId: \"7bd041ab-953f-4d25-8f1e-1ad55d465249\",\n            orderPaymentDeadline: \"20230829\",\n            custId: \"c001\",\n            userId: \"1001\",\n            orderCurrency: \"$\",\n            orderPaymentDone: \"20230828\",\n            orderDateReady: \"20230828\",\n            orderPriceHandling: 378,\n            orderPriceTotal: 1375360,\n            transDate: \"20230828\",\n            orderPaymentMethod: \"card\",\n            orderDatePlaced: \"20230828\",\n            transId: \"jkjur-tewvn-00013\",\n            orderId: \"100004\",\n            orderPriceItems: 1374982,\n            orderDateCompleted: \"20230829\",\n        },\n        {\n            docId: \"a491193e-012a-402d-9209-4c2313226c85\",\n            orderCurrency: \"$\",\n            orderDateCompleted: \"20230829\",\n            userId: \"1001\",\n            orderId: \"100002\",\n            transDate: \"20230828\",\n            transId: \"jkjur-tewvn-00013\",\n            orderPaymentDeadline: \"20230829\",\n            orderPriceHandling: 378,\n            orderPriceTotal: 1375360,\n            orderDateReady: \"20230828\",\n            orderDatePlaced: \"20230828\",\n            orderPriceItems: 1374982,\n            orderPaymentMethod: \"card\",\n            custId: \"c001\",\n            orderPaymentDone: \"20230828\",\n        },\n        {\n            docId: \"ce89ecfa-66fb-41c0-98a0-7ef5f310c0ae\",\n            orderPaymentMethod: \"card\",\n            orderPaymentDone: \"20230828\",\n            orderCurrency: \"$\",\n            orderId: \"100003\",\n            transDate: \"20230828\",\n            userId: \"1001\",\n            transId: \"jkjur-tewvn-00013\",\n            orderDateCompleted: \"20230829\",\n            orderPriceTotal: 1375360,\n            orderDateReady: \"20230828\",\n            custId: \"c001\",\n            orderPriceItems: 1374982,\n            orderPaymentDeadline: \"20230829\",\n            orderPriceHandling: 378,\n            orderDatePlaced: \"20230828\",\n        },\n        {\n            docId: \"561b39ec-4e8e-458d-8eea-f7ece828aa24\",\n            orderDateCompleted: \"20230829\",\n            orderPriceItems: 1374982,\n            transDate: \"20230828\",\n            orderDatePlaced: \"20230828\",\n            orderDateReady: \"20230828\",\n            orderPaymentDeadline: \"20230829\",\n            transId: \"jkjur-tewvn-00013\",\n            userId: \"1001\",\n            orderCurrency: \"$\",\n            custId: \"c001\",\n            orderPaymentMethod: \"card\",\n            orderId: \"100001\",\n            orderPaymentDone: \"20230828\",\n            orderPriceTotal: 1375360,\n            orderPriceHandling: 378,\n        },\n        {\n            docId: \"2f609735-177f-4a46-890b-29d1d35b8f8f\",\n            transId: \"jkjur-tewvn-00013\",\n            orderPriceHandling: 378,\n            orderPaymentMethod: \"card\",\n            orderPaymentDone: \"20230828\",\n            custId: \"c001\",\n            transDate: \"20230828\",\n            orderId: \"100005\",\n            orderCurrency: \"$\",\n            orderPaymentDeadline: \"20230829\",\n            orderPriceItems: 1374982,\n            orderDateReady: \"20230828\",\n            orderDateCompleted: \"20230829\",\n            userId: \"1001\",\n            orderPriceTotal: 1375360,\n            orderDatePlaced: \"20230828\",\n        },\n    ],\n    orderItemsData: [\n        {\n            docId: \"5237269d-ab38-4058-bca5-3503f46ddef0\",\n            qty: 2,\n            itemId: \"0032-0001-000\",\n            orderId: \"100001\",\n            reserved: \"\",\n        },\n    ],\n    productItems: [\n        {\n            docId: \"ef7a0a83-274b-478c-8c33-0dc1acb41b5f\",\n            itemCondition: \"New\",\n            itemImg: \"img_ac_737.jpeg\",\n            transDate: \"20230812\",\n            itemPrice: 67500000,\n            itemSN: \"various\",\n            itemCat: \"aircraft\",\n            itemPN: \"737-BBJ-824\",\n            itemLeadTime: \"quote\",\n            itemName: \"Boeing 737-8 BBJ\",\n            transId: \"jkjur-tewvn-00003\",\n            itemCurrency: \"$\",\n            itemId: \"5b9f30c3-3b5e-466a-be00-7ce5098c230e\",\n            itemCertification: \"EASA, FAA, UK CAA, CAAC\",\n            itemDescription:\n                \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Deleniti ab debitis quos autem? Soluta ut aut ab debitis nulla vel voluptates molestias at. Porro recusandae impedit inventore quo sunt delectus cumque, repellat similique mollitia, officiis, esse saepe? Praesentium dolores corporis sapiente cupiditate, aliquid nulla? Nisi, doloremque cum inventore exercitationem nulla quasi labore recusandae rem sed ipsam magnam quos est accusantium sint adipisci voluptas reiciendis natus ut dicta.\",\n            itemQty: 1,\n        },\n        {\n            docId: \"80e088cf-09d3-4f96-9447-923a29ba5d44\",\n            itemImg: \"img_cabin_seat_business_01.jpeg\",\n            transDate: \"20230812\",\n            itemCurrency: \"$\",\n            itemLeadTime: \"on stock\",\n            itemName: \"Seat Solo Business Class\",\n            itemId: \"55690c40-939e-4c92-b916-d329376a5a31\",\n            itemQty: 52,\n            itemCondition: \"New\",\n            itemCertification: \"EASA, FAA, CAAC\",\n            transId: \"jkjur-tewvn-00003\",\n            itemDescription:\n                \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Deleniti ab debitis quos autem? Soluta ut aut ab debitis nulla vel voluptates molestias at. Porro recusandae impedit inventore quo sunt delectus cumque, repellat similique mollitia, officiis, esse saepe? Praesentium dolores corporis sapiente cupiditate, aliquid nulla? Nisi, doloremque cum inventore exercitationem nulla quasi labore recusandae rem sed ipsam magnam quos est accusantium sint adipisci voluptas reiciendis natus ut dicta.\",\n            itemPrice: 15750,\n            itemCat: \"component\",\n            itemSN: \"various\",\n            itemPN: \"025-BCS-1-217\",\n        },\n        {\n            docId: \"31172e69-5f20-4e75-8458-896759d02734\",\n            itemPN: \"012-737MAX-3254P184\",\n            itemCertification: \"N/A\",\n            transDate: \"20230812\",\n            itemQty: 100,\n            itemCondition: \"New\",\n            itemId: \"4c4d2d95-3dc3-40da-b6ef-3a24bca843d3\",\n            itemDescription:\n                \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Deleniti ab debitis quos autem? Soluta ut aut ab debitis nulla vel voluptates molestias at. Porro recusandae impedit inventore quo sunt delectus cumque, repellat similique mollitia, officiis, esse saepe? Praesentium dolores corporis sapiente cupiditate, aliquid nulla? Nisi, doloremque cum inventore exercitationem nulla quasi labore recusandae rem sed ipsam magnam quos est accusantium sint adipisci voluptas reiciendis natus ut dicta.\",\n            itemImg: \"img_book_00.jpeg\",\n            itemName: \"Manual Ground Handling Boeing 737MAX\",\n            itemCurrency: \"$\",\n            itemCat: \"manual\",\n            itemLeadTime: \"on stock\",\n            itemSN: \"various\",\n            itemPrice: 117,\n            transId: \"jkjur-tewvn-00003\",\n        },\n        {\n            docId: \"b21a23e9-7981-4f88-aa04-b63567722e86\",\n            itemName: \"Bell 5X VIP\",\n            itemDescription:\n                \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Deleniti ab debitis quos autem? Soluta ut aut ab debitis nulla vel voluptates molestias at. Porro recusandae impedit inventore quo sunt delectus cumque, repellat similique mollitia, officiis, esse saepe? Praesentium dolores corporis sapiente cupiditate, aliquid nulla? Nisi, doloremque cum inventore exercitationem nulla quasi labore recusandae rem sed ipsam magnam quos est accusantium sint adipisci voluptas reiciendis natus ut dicta.\",\n            itemId: \"0333afc6-cc1b-4d5f-80b4-e7a2e43e3fe5\",\n            itemCondition: \"New\",\n            transId: \"jkjur-tewvn-00003\",\n            itemPrice: 7500000,\n            itemQty: 1,\n            itemPN: \"B5X-VIP-100\",\n            itemCurrency: \"$\",\n            itemLeadTime: \"quote\",\n            itemImg: \"img_ac_heli_2.jpeg\",\n            itemSN: \"various\",\n            transDate: \"20230812\",\n            itemCertification: \"EASA, FAA, CAAC\",\n            itemCat: \"aircraft\",\n        },\n        {\n            docId: \"2e9f088b-fc0d-435e-bdd6-c09dfba6f062\",\n            itemDescription:\n                \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Deleniti ab debitis quos autem? Soluta ut aut ab debitis nulla vel voluptates molestias at. Porro recusandae impedit inventore quo sunt delectus cumque, repellat similique mollitia, officiis, esse saepe? Praesentium dolores corporis sapiente cupiditate, aliquid nulla? Nisi, doloremque cum inventore exercitationem nulla quasi labore recusandae rem sed ipsam magnam quos est accusantium sint adipisci voluptas reiciendis natus ut dicta.\",\n            itemLeadTime: \"on stock\",\n            itemCondition: \"New\",\n            itemName: \"Altimeter STBY\",\n            itemId: \"2b336406-f54c-422b-a249-7507ab8975dc\",\n            transDate: \"20230812\",\n            itemQty: 10,\n            itemCat: \"component\",\n            itemImg: \"img_cockpit_altimeter_1.jpeg\",\n            itemPN: \"HON-17-974-575\",\n            itemCurrency: \"$\",\n            itemCertification: \"EASA, FAA, CAAC\",\n            itemSN: \"various\",\n            itemPrice: 9130,\n            transId: \"jkjur-tewvn-00003\",\n        },\n    ],\n};\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$c98353c5fa566290$export$494b42d9170c3705","constructor","containerLeftNode","document","getElementById","containerRightNode","testBtnNode","backupBtnNode","getServerBtnNode","getLocalBtnNode","checkModuleLinkage","console","log","clearContainerLeft","innerHTML","clearContainerRight","createHeaderRow","doc","newHeaderRow","createElement","newEmptyElement1","classList","appendChild","newEmptyElement2","keys","Object","sort","key","newHeaderElement","innerText","newEmptyElement3","createDataRow","arrayName","isBackup","newDataRow","newButtonElement1","newButton1","docId","newButtonElement2","newButton2","value","newDataElement","newInput","type","newButtonElement3","newButton3","createTable","array","newTable","headerRow","dataRow","renderTable","tableWrapper","tableTitle","table","createMenuBtn","menuBtnWrapper","menuBtn","href","createMenu","collectionNames","menuWrapper","menuTitle","menuList","newBtn","renderMenu","menu","$2d48eafd16ddd7ce$export$36b3dcadd2d05b22","generateNewId","length","Array","map","Math","floor","random","toString","toUpperCase","join","$keq33","$bEzwx","$1ggDV","$2578ce392da55d05$export$195915748ed7aa38","usersData","transDate","transId","userEmail","userPhone","custId","userId","userActive","userName","userAdmin","userAddress","customersData","paymentTerms","custKycChecked","custHandlingFee","custBillToAddress","custEmail","custLegalName","custPhone","custCode","custAddress","paymentMethod","custKycDate","active","custOrders","custContactId","cartsData","itemId","qty","ordersData","orderPaymentDeadline","orderCurrency","orderPaymentDone","orderDateReady","orderPriceHandling","orderPriceTotal","orderPaymentMethod","orderDatePlaced","orderId","orderPriceItems","orderDateCompleted","orderItemsData","reserved","productItems","itemCondition","itemImg","itemPrice","itemSN","itemCat","itemPN","itemLeadTime","itemName","itemCurrency","itemCertification","itemDescription","itemQty","$b7e605c5c1539f70$var$isViewBackup","$b7e605c5c1539f70$var$dataInstance","$a6a09193ec6dface$var$adminApp","adminView","adminModel","adminFirebase","ModelFirebase","initializeAppMain","collectionName","dbCollectionNames","get","displayDataInstanceTables","attachEventListeners","generateUniqueId","default","displayBackupAndInstanceTables","getInstanceFromId","idSting","split","getCollectionFromId","getDocFromId","getKeyFromId","cloneDocument","objectId","originalObject","find","item","clonedObject","JSON","parse","stringify","handleAddBtnClick","button","elementCollection","elementId","affectedArray","sisterArray","push","addDocToFirestore","handleUpdateBtnClick","docToUpdate","tableRow","closest","cells","querySelectorAll","forEach","cell","inputField","querySelector","keyName","updateDocInFirestore","handleDeleteBtnClick","deleteDocFromFirestore","index","findIndex","splice","handleButtonsClick","event","target","contains","addEventListener","$b7e605c5c1539f70$var$backupData","jsonString","blob","Blob","url","URL","createObjectURL","t","Date","now","a","download","body","click","revokeObjectURL","removeChild","error","alert"],"version":3,"file":"admin.c15f49dd.js.map"}